# # CTB Metadata
# # Generated: 2025-10-23T14:32:38.982047
# # CTB Version: 1.3.3
# # Division: Configuration & Tests
# # Category: config
# # Compliance: 75%
# # HEIR ID: HEIR-2025-10-MET-CONFIG-01

{
  "name": "Claude Orchestration Configuration",
  "version": "1.0.0",
  "description": "Configuration for Claude Code orchestration of doctrine automation system",
  "claude_config": {
    "name": "Claude Code",
    "role": "Orchestration Coordinator",
    "purpose": "Coordinate between GPTs, repositories, and Composio MCP for automated doctrine workflows",
    "composio_mcp": "http://localhost:3001",
    "communication_method": "composio_mcp_only",
    "no_direct_tokens": true
  },
  "gpt_ecosystem": {
    "personal_assistant": {
      "gpt_id": "personal-assistant-v1",
      "config_file": "/config/personal_assistant.config.json",
      "endpoint": "http://localhost:3001/tool",
      "responsibilities": [
        "Email management",
        "Calendar scheduling",
        "Document organization",
        "Task tracking"
      ],
      "connected_services": ["gmail", "googlecalendar", "googledrive", "notion"]
    },
    "composio_mcp": {
      "gpt_id": "composio-mcp-v1",
      "config_file": "/config/composio_mcp_gpt.config.json",
      "endpoint": "http://localhost:3001/tool",
      "responsibilities": [
        "Doctrine validation",
        "Build automation",
        "Deployment orchestration",
        "Cross-repo synchronization"
      ],
      "connected_services": ["github", "vercel", "figma", "composio"]
    }
  },
  "repository_coordination": {
    "primary_repo": {
      "name": "imo-creator",
      "owner": "djb258",
      "role": "source_of_truth",
      "branch_strategy": {
        "main": "production_ready",
        "doctrine/*": "auto_deploy_with_validation"
      }
    },
    "target_repos": [
      {
        "name": "sales-hive",
        "owner": "djb258",
        "sync_from": "imo-creator",
        "sync_types": ["workflows", "configs", "docs"]
      },
      {
        "name": "client-hive",
        "owner": "djb258",
        "sync_from": "imo-creator",
        "sync_types": ["workflows", "configs", "docs"]
      },
      {
        "name": "outreach-hive",
        "owner": "djb258",
        "sync_from": "imo-creator",
        "sync_types": ["workflows", "configs", "docs"]
      }
    ]
  },
  "workflow_triggers": {
    "doctrine_validation": {
      "trigger_on": ["push:doctrine/*", "pull_request:doctrine/*"],
      "endpoint": "http://localhost:3001/tool",
      "required_for_deployment": true,
      "failure_action": "block_deployment"
    },
    "firebase_promotion": {
      "trigger_on": ["workflow_completion:doctrine-validate", "manual:firebase-promote"],
      "endpoint": "http://localhost:3001/tool",
      "requires_approval": true,
      "staging_first": true
    },
    "cross_repo_sync": {
      "trigger_on": ["push:main", "workflow_completion", "manual:sync"],
      "endpoint": "http://localhost:3001/tool",
      "target_determination": "config_driven"
    },
    "figma_sync": {
      "trigger_on": ["figma_webhook", "manual:figma-sync"],
      "endpoint": "http://localhost:3001/tool",
      "asset_types": ["design_tokens", "components", "prototypes"]
    }
  },
  "communication_protocol": {
    "all_communication_via_composio": true,
    "no_direct_api_calls": true,
    "no_stored_tokens": true,
    "composio_endpoints": {
      "github_event": "http://localhost:3001/tool",
      "doctrine_validate": "http://localhost:3001/tool",
      "firebase_promote": "http://localhost:3001/tool",
      "imo_creator_sync": "http://localhost:3001/tool",
      "figma_sync": "http://localhost:3001/tool",
      "human_firebreak": "http://localhost:3001/tool"
    }
  },
  "security_controls": {
    "kill_switch": {
      "enabled": true,
      "trigger_conditions": [
        "validation_failure",
        "security_violation",
        "performance_degradation",
        "manual_intervention"
      ],
      "action": "halt_all_deployments"
    },
    "human_firebreak": {
      "enabled": true,
      "queue_endpoint": "http://localhost:3001/tool",
      "escalation_matrix": {
        "validation_failure": "immediate",
        "deployment_failure": "immediate",
        "security_issue": "immediate",
        "performance_issue": "within_1_hour"
      }
    },
    "audit_logging": {
      "enabled": true,
      "storage": "firebase.firestore:repo_activity",
      "retention_days": 365,
      "log_levels": ["info", "warning", "error", "critical"]
    }
  },
  "monitoring_and_alerting": {
    "health_checks": {
      "composio_endpoint": "http://localhost:3001/mcp/health",
      "interval_seconds": 300,
      "timeout_seconds": 30
    },
    "deployment_tracking": {
      "enabled": true,
      "metrics": ["success_rate", "deployment_time", "rollback_frequency"],
      "alerting_thresholds": {
        "success_rate_below": 95,
        "deployment_time_above": 600,
        "rollback_frequency_above": 10
      }
    },
    "notification_channels": {
      "primary": "slack",
      "secondary": "email",
      "emergency": "human_firebreak_queue"
    }
  },
  "claude_responsibilities": {
    "coordination": [
      "Read this config to understand ecosystem",
      "Route requests to appropriate GPT endpoints",
      "Monitor workflow completion status",
      "Escalate to human firebreak when needed"
    ],
    "repository_management": [
      "Trigger cross-repo synchronization",
      "Monitor doctrine branch deployments",
      "Coordinate build and validation workflows",
      "Manage deployment approvals"
    ],
    "communication": [
      "All communication via Composio relay endpoints",
      "No direct API token usage",
      "Status reporting to human firebreak queue",
      "Workflow coordination between GPTs"
    ]
  },
  "test_sequences": {
    "doctrine_workflow": {
      "description": "Test complete doctrine validation and deployment",
      "steps": [
        "Push commit to doctrine/test-feature",
        "Verify doctrine-validate.yml triggers",
        "Confirm validation passes via Composio",
        "Check firebase-promote.yml triggers",
        "Verify deployment completion",
        "Validate cross-repo sync occurs"
      ]
    },
    "figma_integration": {
      "description": "Test Figma design token sync",
      "steps": [
        "Update design tokens in Figma",
        "Trigger figma-sync.yml workflow",
        "Verify tokens sync to repository",
        "Check cross-repo propagation",
        "Validate build integration"
      ]
    }
  }
}