name: CTB Drift Check

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  verify:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Verify CTB Template Structure
        run: |
          echo "🔍 Verifying CTB template structure..."

          # Check if ctb-template directory exists
          if [ ! -d "ctb-template" ]; then
            echo "::error::CTB template directory not found"
            exit 1
          fi
          echo "✅ CTB template directory exists"

      - name: Compare CTB Version
        run: |
          echo "🔍 Checking CTB version consistency..."

          # Read base CTB version from template
          if [ ! -f "ctb-template/version.json" ]; then
            echo "::error::CTB version.json not found"
            exit 1
          fi

          BASE_VERSION=$(cat ctb-template/version.json | grep -o '"ctb_version"[[:space:]]*:[[:space:]]*"[^"]*"' | cut -d'"' -f4)
          echo "📦 CTB Version: $BASE_VERSION"

          # If consuming repos include CTB template, compare versions
          # This check is for when IMO-Creator itself contains scaffolded repos
          if [ -d "../*" ]; then
            for dir in ../*; do
              if [ -f "$dir/ctb-template/version.json" ]; then
                TARGET=$(cat "$dir/ctb-template/version.json" | grep -o '"ctb_version"[[:space:]]*:[[:space:]]*"[^"]*"' | cut -d'"' -f4)
                if [ "$BASE_VERSION" != "$TARGET" ]; then
                  echo "::error::CTB version mismatch in $dir ($TARGET vs $BASE_VERSION)"
                  exit 1
                fi
                echo "✅ Version match in $dir: $TARGET"
              fi
            done
          fi

          echo "✅ CTB version checks passed"

      - name: Verify Required Files
        run: |
          echo "🔍 Verifying required CTB files..."

          REQUIRED_FILES=(
            "ctb-template/version.json"
            "ctb-template/.barton_policy.json"
            "ctb-template/CTB_BRANCHMAP.yaml"
            "ctb-template/tiers/full.json"
            "ctb-template/tiers/mid.json"
            "ctb-template/tiers/micro.json"
            "scripts/ctb_scaffold.ts"
          )

          for file in "${REQUIRED_FILES[@]}"; do
            if [ ! -f "$file" ]; then
              echo "::error::Required file missing: $file"
              exit 1
            fi
            echo "✅ Found: $file"
          done

          echo "✅ All required files present"

      - name: Verify CTB Directory Structure
        run: |
          echo "🔍 Verifying CTB directory structure..."

          REQUIRED_DIRS=(
            "ctb-template/sys/composio-mcp"
            "ctb-template/sys/gatekeeper"
            "ctb-template/sys/validator"
            "ctb-template/sys/ci"
            "ctb-template/sys/env"
            "ctb-template/data/neon"
            "ctb-template/data/firebase"
            "ctb-template/data/bigquery"
            "ctb-template/data/zod"
            "ctb-template/apps/ui"
            "ctb-template/apps/api"
            "ctb-template/apps/agents"
            "ctb-template/apps/tools"
            "ctb-template/ai/blueprints"
            "ctb-template/ai/prompts"
            "ctb-template/ai/models"
            "ctb-template/ai/training"
            "ctb-template/docs/ctb"
            "ctb-template/docs/doctrine"
            "ctb-template/docs/ort"
            "ctb-template/docs/sops"
            "ctb-template/tests/unit"
            "ctb-template/tests/integration"
            "ctb-template/tests/audit"
          )

          for dir in "${REQUIRED_DIRS[@]}"; do
            if [ ! -d "$dir" ]; then
              echo "::error::Required directory missing: $dir"
              exit 1
            fi
            echo "✅ Found: $dir"
          done

          echo "✅ All required directories present"

      - name: Validate Barton Policy
        run: |
          echo "🔍 Validating Barton policy configuration..."

          # Check .barton_policy.json content
          if ! grep -q '"requires_composio": true' ctb-template/.barton_policy.json; then
            echo "::error::Barton policy must require Composio"
            exit 1
          fi

          if ! grep -q '"allow_direct_neon": false' ctb-template/.barton_policy.json; then
            echo "::error::Barton policy must disallow direct Neon access"
            exit 1
          fi

          if ! grep -q '"gatekeeper_enforced": true' ctb-template/.barton_policy.json; then
            echo "::error::Barton policy must enforce gatekeeper"
            exit 1
          fi

          echo "✅ Barton policy validation passed"

      - name: Validate Tier Configurations
        run: |
          echo "🔍 Validating tier configurations..."

          # Validate full tier
          if ! grep -q '"tier": "full"' ctb-template/tiers/full.json; then
            echo "::error::Full tier configuration invalid"
            exit 1
          fi

          # Validate mid tier
          if ! grep -q '"tier": "mid"' ctb-template/tiers/mid.json; then
            echo "::error::Mid tier configuration invalid"
            exit 1
          fi

          # Validate micro tier
          if ! grep -q '"tier": "micro"' ctb-template/tiers/micro.json; then
            echo "::error::Micro tier configuration invalid"
            exit 1
          fi

          echo "✅ Tier configuration validation passed"

      - name: Drift Check Summary
        run: |
          echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
          echo "✅ CTB Drift Check Complete"
          echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
          echo ""
          echo "All CTB template validations passed:"
          echo "  ✅ Template structure intact"
          echo "  ✅ Version consistency verified"
          echo "  ✅ Required files present"
          echo "  ✅ Directory structure complete"
          echo "  ✅ Barton policy enforced"
          echo "  ✅ Tier configurations valid"
          echo ""
          echo "Repository is CTB-compliant ✨"
