{
  "claudeCodeChat.permissions.yoloMode": true,
  "mcp.servers": {
    "imo-creator-composio": {
      "name": "IMO Creator Composio Bridge",
      "description": "Integrates Builder.io with composio MCP server for enhanced visual development",
      "command": "python",
      "args": ["src/mcp_server.py"],
      "cwd": "${workspaceFolder}",
      "env": {
        "BUILDER_IO_API_KEY": "${MCP:BUILDER_IO_API_KEY}",
        "MCP_SERVER_MODE": "vscode",
        "PORT": "7001"
      },
      "tools": [
        "builder_create_content",
        "builder_get_models",
        "builder_sync_designs",
        "heir_validate"
      ],
      "resources": [
        "builder://models/*",
        "builder://content/*",
        "heir://validation/*"
      ],
      "prompts": [
        "generate_component",
        "sync_figma_design",
        "validate_heir_compliance"
      ]
    },
    "deepseek-agent": {
      "name": "DeepSeek AI Agent",
      "description": "DeepSeek AI agent for intelligent code assistance and analysis",
      "command": "node",
      "args": ["${workspaceFolder}/extensions/deepseek-agent/src/mcpServer.js"],
      "cwd": "${workspaceFolder}",
      "env": {
        "DEEPSEEK_API_KEY": "${MCP:DEEPSEEK_API_KEY}",
        "MCP_SERVER_MODE": "vscode",
        "PORT": "7002"
      },
      "tools": [
        "deepseek_chat",
        "deepseek_code_completion",
        "deepseek_code_analysis",
        "deepseek_refactor",
        "deepseek_generate_tests"
      ],
      "resources": [
        "deepseek://chat/*",
        "deepseek://completions/*",
        "deepseek://analysis/*"
      ],
      "prompts": [
        "explain_code",
        "refactor_code",
        "generate_tests",
        "fix_bugs",
        "optimize_code"
      ]
    }
  },
  "mcp.enabledServers": ["imo-creator-composio", "deepseek-agent"],
  "builder.io.mcpIntegration": true,
  "builder.io.autoSyncWithMCP": true,
  "deepseek.apiKey": "",
  "deepseek.apiEndpoint": "https://api.deepseek.com/v1",
  "deepseek.model": "deepseek-chat",
  "deepseek.temperature": 0.7,
  "deepseek.maxTokens": 4096,
  "deepseek.enableMCP": true,
  "deepseek.mcpPort": 7002,
  "deepseek.autoSuggest": false,
  "deepseek.contextWindow": 10,
  "editor.formatOnSave": true,
  "files.trimTrailingWhitespace": true,
  "files.insertFinalNewline": true,
  "files.exclude": {
    "**/__pycache__": true,
    "**/.pytest_cache": true,
    "**/*.pyc": true,
    "**/node_modules": true,
    "**/.git": false
  },
  "python.testing.pytestEnabled": true,
  "python.testing.pytestArgs": [
    "tests"
  ],
  "python.testing.unittestEnabled": false,
  "python.linting.enabled": true,
  "python.linting.pylintEnabled": false,
  "python.linting.flake8Enabled": false,
  "python.defaultInterpreterPath": "python",
  "terminal.integrated.defaultProfile.windows": "Git Bash",
  "terminal.integrated.defaultProfile.linux": "bash",
  "search.exclude": {
    "**/node_modules": true,
    "**/.git": true,
    "**/logs": true,
    "**/.pytest_cache": true,
    "**/htmlcov": true
  },
  "[python]": {
    "editor.tabSize": 4,
    "editor.insertSpaces": true,
    "editor.formatOnSave": true
  },
  "[javascript]": {
    "editor.tabSize": 2,
    "editor.insertSpaces": true,
    "editor.formatOnSave": true
  },
  "[typescript]": {
    "editor.tabSize": 2,
    "editor.insertSpaces": true,
    "editor.formatOnSave": true
  },
  "[json]": {
    "editor.tabSize": 2,
    "editor.insertSpaces": true,
    "editor.formatOnSave": true
  },
  "[markdown]": {
    "editor.wordWrap": "on",
    "editor.quickSuggestions": {
      "comments": "off",
      "strings": "off",
      "other": "off"
    }
  }
}
