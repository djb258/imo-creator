{
  "permissions": {
    "allow": [
      "Bash(for:*)",
      "Bash(do [ -f \"$file\" ])",
      "Bash(chmod +x global-config/scripts/ctb_enforce.sh)",
      "Bash(bash global-config/scripts/ctb_enforce.sh)",
      "Bash(git add -A)",
      "Bash(git commit -m \"ðŸ”’ Add CTB Doctrine Enforcement System\n\nImplemented comprehensive enforcement system for CTB Doctrine compliance.\n\nChanges:\n- Created ctb_enforce.sh script for automated validation\n- Added GitHub Actions workflow for CI/CD enforcement\n- Updated CTB_DOCTRINE.md with enforcement rules and policy\n- Enforcement checks:\n  * Required branches (sys/chartdb, sys/activepieces, sys/windmill)\n  * MCP tool registration (doctrine IDs 04.04.07-09)\n  * Port health monitoring (optional)\n  * Configuration validation\n\nFeatures:\n- Standard and strict enforcement modes\n- Automated logging to logs/ctb_enforcement.log\n- Firebase integration support for remote logging\n- PR comments with enforcement status\n- Auto-tagging compliant commits with [CTB_DOCTRINE_VERIFIED]\n\nFailure Policy:\n- Blocks builds and deploys on non-compliance\n- Rejects merge requests if enforcement fails\n- Provides diagnostic output for remediation\n\nVersion: 1.2\nStatus: All external repos integrated and operational\n\nðŸ¤– Generated with Claude Code\nCo-Authored-By: Claude <noreply@anthropic.com>\")",
      "Bash(git commit -m \"âœ… Update master branch config for external repo integration\n\nUpdated configuration files to include external repository integration:\n\nChanges to config/mcp_registry.json:\n- Added ChartDB (doctrine_id: 04.04.07)\n- Added Activepieces (doctrine_id: 04.04.08)\n- Added Windmill (doctrine_id: 04.04.09)\n- Updated engine_version to 1.2.0\n- Updated last_updated timestamp\n\nChanges to global-config/ctb.branchmap.yaml:\n- Added sys/chartdb, sys/activepieces, sys/windmill to 40k altitude\n- Updated version to 1.2\n- Updated last_updated to 2025-10-18\n- Added file organization patterns for all 3 new branches\n\nThis completes the CTB Doctrine enforcement system integration.\nAll repositories using this scaffold will now include these required tools.\n\nðŸ¤– Generated with Claude Code\nCo-Authored-By: Claude <noreply@anthropic.com>\")",
      "Bash(chmod +x global-config/scripts/security_lockdown.sh)",
      "Bash(git commit -m \"$(cat <<''EOF''\nðŸ”’ Add Security Lockdown & MCP Vault System\n\nImplemented comprehensive zero-tolerance security enforcement system.\n\nNew Files:\n- .github/workflows/security_lockdown.yml - Automated security scanning\n- global-config/scripts/security_lockdown.sh - Security validation script\n- src/mcp_vault_resolver.ts - Runtime MCP vault variable injection\n\nUpdated Files:\n- global-config/CTB_DOCTRINE.md - Added comprehensive security section\n  * Zero-tolerance policy documentation\n  * Forbidden files list\n  * MCP variable usage patterns\n  * Security violation remediation steps\n  * Failure policy details\n\nSecurity Features:\n- Scans for .env files and hardcoded secrets\n- Validates MCP vault configuration\n- Blocks builds/deploys on violations\n- Automated PR comments with remediation steps\n- Firebase audit logging\n- Runtime environment variable injection from MCP vault\n- Multi-source vault resolution (MCP, Doppler, Firebase)\n\nIntegration:\n- GitHub Actions security workflow on every push/PR\n- TruffleHog secret scanning\n- git-secrets history scanning\n- MCP vault validation checks\n\nPolicy: ZERO TOLERANCE - No local secrets allowed\nVersion: 1.2\nStatus: All security systems operational\n\nðŸ¤– Generated with Claude Code\nCo-Authored-By: Claude <noreply@anthropic.com>\nEOF\n)\")",
      "Bash(git push origin master)",
      "Bash(git push origin sys/chartdb sys/activepieces sys/windmill)",
      "Bash(bash global-config/scripts/security_lockdown.sh)",
      "Bash(cat logs/security_audit.log)",
      "Bash(tee /tmp/security_scan.log)",
      "Bash(find . -name \"*.md\" -not -path \"*/node_modules/*\" -not -path \"*/.git/*\" -not -path \"*/activepieces/*\" -not -path \"*/windmill/*\" -not -path \"*/chartdb/*\" -exec grep -l \"ak_t-F0AbvfZHUZSUrqAGNn\\|9502e3493ccf42339f36d16b4a482c70\\|sk-ant-your-key-here\" {} ;)",
      "Bash(do)",
      "Bash(done)",
      "Bash(find . -name \"*.md\" -not -path \"*/node_modules/*\" -not -path \"*/.git/*\" -not -path \"*/activepieces/*\" -not -path \"*/windmill/*\" -not -path \"*/chartdb/*\" -type f -exec sed -i 's/ak_t-F0AbvfZHUZSUrqAGNn/<your-composio-api-key>/g; s/9502e3493ccf42339f36d16b4a482c70/<your-builder-io-api-key>/g; s/sk-ant-your-key-here/<your-api-key>/g; s/your_million_verify_key/<your-api-key>/g; s/sk-your-key-here/<your-api-key>/g' {} ;)",
      "Bash(find . -name \"*.md\" -not -path \"*/node_modules/*\" -not -path \"*/.git/*\" -not -path \"*/activepieces/*\" -not -path \"*/windmill/*\" -not -path \"*/chartdb/*\" -type f -exec sed -i 's/oak_d4qEQhMSdWBgvAI3XELr/<your-composio-api-key>/g' {} ;)",
      "Bash(do echo \"Pattern: $pattern\" grep -iE \"$pattern\" global-config/scripts/security_lockdown.sh)",
      "Bash(timeout 60 bash global-config/scripts/security_lockdown.sh)"
    ],
    "deny": [],
    "ask": [],
    "additionalDirectories": [
      "C:\\Users\\CUSTOM PC\\Desktop\\Cursor Builds\\scraping-tool"
    ]
  }
}
