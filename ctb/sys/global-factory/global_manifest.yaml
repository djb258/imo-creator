# # CTB Metadata
# # Generated: 2025-10-23T14:32:35.591764
# # CTB Version: 1.3.3
# # Division: System Infrastructure
# # Category: global-factory
# # Compliance: 90%
# # HEIR ID: HEIR-2025-10-SYS-GLOBAL-01

# IMO Creator - Global Configuration Manifest
# Version: 1.3.3
# Last Updated: 2025-10-22

meta:
  version: 1.3.3
  last_updated: 2025-10-22T00:00:00Z
  description: |
    Global configuration manifest for IMO Creator ecosystem.
    This file defines system-wide settings, automation rules, and integration patterns
    that apply across all repositories using the CTB Doctrine.

# ============================================================
# DEEP WIKI AUTOMATION CONFIGURATION
# ============================================================
deep_wiki:
  enabled: true
  run_on_update: true
  index_path: /deep_wiki/deepwiki_index.json

  # Repository Configuration
  target_repos:
    - name: outreach-core
      enabled: true
      priority: high
      auto_commit: true
    - name: client-intake
      enabled: true
      priority: high
      auto_commit: true
    - name: blueprint-engine
      enabled: true
      priority: medium
      auto_commit: true
    - name: imo-creator
      enabled: true
      priority: critical
      auto_commit: true

  # Trigger Configuration
  triggers:
    on_push: true
    on_pull_request: false
    on_merge: true
    on_schedule: true
    schedule_cron: "0 2 * * *"  # Daily at 2 AM

  # AI Provider Settings
  ai_provider:
    default: google
    fallback: openai
    embedder_type: google
    models:
      google: gemini-pro
      openai: gpt-4-turbo

  # Processing Options
  processing:
    generate_diagrams: true
    analyze_diffs_only: true
    max_file_size_mb: 50
    exclude_patterns:
      - "node_modules/**"
      - "*.log"
      - ".git/**"
      - "**/__pycache__/**"
      - "*.pyc"
      - "build/**"
      - "dist/**"

  # Output Configuration
  output:
    base_path: /deep_wiki
    create_index: true
    commit_message_template: "üìö DeepWiki: Auto-update documentation [skip ci]"
    branch_naming: "docs/deepwiki-update-{timestamp}"

  # Logging & Observability
  logging:
    enabled: true
    audit_log: /logs/deepwiki_audit.log
    error_log: /logs/deepwiki_error.log
    level: INFO
    retention_days: 90
    include_metrics: true

  # Error Handling
  error_handling:
    retry_count: 3
    retry_delay_seconds: 60
    halt_on_error: true
    notify_on_failure: true
    notification_channels:
      - slack
      - email

  # Kill Switch Configuration
  kill_switch:
    enabled: false
    reason: ""
    disabled_by: ""
    disabled_at: ""
    emergency_contact: "admin@bartonenterprises.com"

# ============================================================
# CHARTDB AUTOMATION CONFIGURATION
# ============================================================
chartdb:
  enabled: true
  run_on_update: true
  index_path: /chartdb_schemas/schema_index.json

  # Repository Configuration
  target_repos:
    - name: outreach-core
      enabled: true
      priority: high
      auto_commit: true
      database_connections:
        - type: postgresql
          name: main_db
        - type: mysql
          name: analytics_db
    - name: client-intake
      enabled: true
      priority: high
      auto_commit: true
      database_connections:
        - type: postgresql
          name: client_db
    - name: blueprint-engine
      enabled: true
      priority: medium
      auto_commit: true
      database_connections:
        - type: postgresql
          name: blueprint_db
    - name: imo-creator
      enabled: true
      priority: critical
      auto_commit: true
      database_connections:
        - type: postgresql
          name: imo_db

  # Trigger Configuration
  triggers:
    on_push: true
    on_pull_request: false
    on_merge: true
    on_schema_change: true
    on_schedule: true
    schedule_cron: "0 3 * * *"  # Daily at 3 AM (1 hour after DeepWiki)

  # Schema Detection
  schema_detection:
    auto_detect: true
    scan_patterns:
      - "*.sql"
      - "migrations/**"
      - "prisma/schema.prisma"
      - "sequelize/models/**"
      - "typeorm/entities/**"
      - "database/schema/**"
    exclude_patterns:
      - "node_modules/**"
      - "*.bak"
      - "*.tmp"

  # Output Configuration
  output:
    base_path: /chartdb_schemas
    format: ["json", "sql", "png", "svg"]
    create_index: true
    commit_message_template: "üìä ChartDB: Auto-update database schemas [skip ci]"
    branch_naming: "docs/chartdb-update-{timestamp}"

  # Diagram Generation
  diagram:
    auto_generate: true
    include_relationships: true
    include_indexes: true
    include_constraints: true
    theme: "light"
    export_formats: ["png", "svg"]

  # Logging & Observability
  logging:
    enabled: true
    audit_log: /logs/chartdb_audit.log
    error_log: /logs/chartdb_error.log
    level: INFO
    retention_days: 90

  # Error Handling
  error_handling:
    retry_count: 3
    retry_delay_seconds: 30
    halt_on_error: true
    notify_on_failure: true

  # Kill Switch Configuration
  kill_switch:
    enabled: false
    reason: ""
    disabled_by: ""
    disabled_at: ""

# ============================================================
# CTB DOCTRINE ENFORCEMENT
# ============================================================
ctb_doctrine:
  enforcement_mode: standard
  version: 1.3.3

  required_branches:
    - sys/chartdb
    - sys/activepieces
    - sys/windmill
    - sys/claude-skills
    - sys/deepwiki

  required_tools:
    - doctrine_id: "04.04.07"
      name: ChartDB
      enabled: true
    - doctrine_id: "04.04.08"
      name: Activepieces
      enabled: true
    - doctrine_id: "04.04.09"
      name: Windmill
      enabled: true
    - doctrine_id: "04.04.10"
      name: Anthropic_Claude_Skills
      enabled: true
    - doctrine_id: "04.04.11"
      name: DeepWiki
      enabled: true
    - doctrine_id: "04.04.12"
      name: Google_Gemini_AI
      enabled: true

# ============================================================
# GEMINI AI CONFIGURATION
# ============================================================
gemini_ai:
  enabled: true
  default_model: gemini-2.5-flash
  available_models:
    - gemini-2.5-flash
    - gemini-2.5-flash-preview-05-20
    - gemini-2.5-pro-preview-03-25
    - gemini-2.5-pro-preview-05-06
    - gemini-2.5-flash-lite-preview-06-17

  # Integration Points
  integrations:
    composio_mcp: true
    standalone_cli: true
    deepwiki: true
    chartdb: false  # Future enhancement

  # Generation Settings
  generation_config:
    max_tokens: 2048
    temperature: 0.7
    top_p: 1.0
    top_k: 40

  # Performance Settings
  performance:
    caching_enabled: true
    cache_duration_minutes: 10
    rate_limit_rpm: 60  # Requests per minute

  # HEIR/ORBT Tracking
  heir_orbt:
    enabled: true
    track_all_operations: true
    external_service_flag: true
    ai_provider: "google"

  # Toolkit Tools
  toolkit_tools:
    - name: gemini_generate
      description: "Generate text from prompt"
      enabled: true
    - name: gemini_chat
      description: "Interactive chat session"
      enabled: true
    - name: gemini_analyze
      description: "Analyze code or content"
      enabled: true
    - name: gemini_status
      description: "Check Gemini service status"
      enabled: true
    - name: gemini_clear_cache
      description: "Clear response cache"
      enabled: true

  # Environment Variables
  required_env_vars:
    - GOOGLE_API_KEY  # or GEMINI_API_KEY
  optional_env_vars:
    - GEMINI_MODEL

  # Kill Switch
  kill_switch:
    enabled: false
    reason: ""
    disabled_by: ""
    disabled_at: ""

# ============================================================
# MCP INTEGRATION SETTINGS
# ============================================================
mcp_integration:
  enabled: true
  server_port: 3001
  health_check_interval: 60

  composio:
    enabled: true
    endpoint: "http://localhost:3001/tool"
    api_base: "https://api.composio.dev"
    connected_services: 24
    total_tools: 1059

    # ‚ö†Ô∏è CRITICAL: Database Operations Pattern (Updated 2025-10-23)
    # Source: barton-outreach-core (100% Barton Doctrine compliant)
    database_operations:
      # Database operations MUST use direct connections
      # Composio does NOT provide database tools (neon_execute_sql does NOT exist)
      method: "direct_pg_client"
      connection_source: "DATABASE_URL"  # Use environment variable
      pattern: |
        const { Client } = require('pg');
        const client = new Client({ connectionString: process.env.DATABASE_URL });
        await client.connect();
        const result = await client.query(sql);
        await client.end();

      # What to use Composio for:
      composio_for:
        - apify_run_actor
        - gmail_send
        - drive_upload
        - sheets_append
        - calendar_create_event
        - github_create_issue
        - "40+ external API integrations"

      # What NOT to use Composio for:
      not_composio:
        - neon_execute_sql  # Does NOT exist
        - neon_query        # Does NOT exist
        - database_operations  # Use direct pg client

    # HEIR/ORBT Payload Requirements
    payload_format:
      required_fields:
        - tool
        - data
        - unique_id  # Format: HEIR-YYYY-MM-SYSTEM-MODE-VN
        - process_id  # Format: PRC-SYSTEM-EPOCHTIMESTAMP
        - orbt_layer  # Execution layer (1-4)
        - blueprint_version  # Version tracking
      example: |
        {
          "tool": "apify_run_actor",
          "data": { "actorId": "..." },
          "unique_id": "HEIR-2025-10-IMO-ACTION-01",
          "process_id": "PRC-ACTION-1729651200",
          "orbt_layer": 2,
          "blueprint_version": "1.0"
        }

  firebase:
    enabled: true
    project_id: "${FIREBASE_PROJECT_ID}"
    staging_memory: true
    barton_doctrine: true

  builder_io:
    enabled: true
    api_key: "${BUILDER_IO_API_KEY}"
    visual_dev: true

# ============================================================
# SECURITY & COMPLIANCE
# ============================================================
security:
  zero_tolerance: true
  forbidden_files:
    - ".env"
    - "*.pem"
    - "*.key"
    - "*credentials*.json"
    - "*secret*.txt"

  secret_scanning:
    enabled: true
    tools:
      - truffleHog
      - git-secrets
    halt_on_violation: true

  mcp_vault:
    enabled: true
    required: true
    sources:
      - mcp
      - doppler
      - firebase

# ============================================================
# AUTOMATION WORKFLOWS
# ============================================================
automation:
  github_actions:
    enabled: true
    workflows:
      - deepwiki_automation
      - ctb_enforcement
      - security_lockdown
      - doctrine_sync

  hooks:
    pre_commit:
      - security_scan
      - format_check
    post_commit:
      - deepwiki_update
      - audit_log
    pre_push:
      - test_suite
      - compliance_check

# ============================================================
# DEPLOYMENT CONFIGURATION
# ============================================================
deployment:
  platforms:
    render:
      enabled: true
      auto_deploy: true
      environment: production
    vercel:
      enabled: true
      auto_deploy: true
      environment: production

  health_checks:
    enabled: true
    endpoints:
      - url: "http://localhost:8001/health"
        service: deepwiki-api
      - url: "http://localhost:3001/mcp/health"
        service: composio-mcp
      - url: "http://localhost:3000"
        service: deepwiki-frontend

# ============================================================
# NOTIFICATION SETTINGS
# ============================================================
notifications:
  enabled: true
  channels:
    slack:
      enabled: true
      webhook_url: "${SLACK_WEBHOOK_URL}"
      notify_on:
        - errors
        - deployments
        - security_violations
    email:
      enabled: true
      recipients:
        - admin@bartonenterprises.com
      notify_on:
        - critical_errors
        - security_violations

  templates:
    deepwiki_success: "‚úÖ DeepWiki updated for {repo} - {branch} ({commit_hash})"
    deepwiki_failure: "‚ùå DeepWiki failed for {repo} - {branch}: {error_message}"
    security_violation: "üö® SECURITY VIOLATION in {repo}: {violation_type}"

# ============================================================
# REPOSITORY TEMPLATES
# ============================================================
repo_templates:
  source_repos:
    - imo-creator
    - barton-doctrine

  scaffold_config:
    auto_apply: true
    inherit_from: imo-creator
    include_files:
      - global-config/ctb.branchmap.yaml
      - global-config/global_manifest.yaml
      - .github/workflows/deepwiki_automation.yml
      - scripts/hooks/post_update_deepwiki.sh

# ============================================================
# METRICS & ANALYTICS
# ============================================================
metrics:
  enabled: true
  collect:
    - deepwiki_runs
    - documentation_updates
    - error_rates
    - processing_time
    - repo_coverage

  export_to:
    - bigquery
    - firebase_analytics

  dashboards:
    enabled: true
    url: "${METRICS_DASHBOARD_URL}"

# ============================================================
# MAINTENANCE WINDOWS
# ============================================================
maintenance:
  scheduled_windows:
    - day: Sunday
      time: "02:00-04:00 UTC"
      tasks:
        - deepwiki_full_refresh
        - log_rotation
        - cache_cleanup

  auto_updates:
    enabled: true
    check_interval: weekly
    source_repo: imo-creator

# ============================================================
# FEATURE FLAGS
# ============================================================
feature_flags:
  experimental:
    deepwiki_ml_insights: false
    auto_pr_generation: false
    cross_repo_analysis: true

  beta:
    real_time_sync: false
    collaborative_editing: false

  stable:
    auto_documentation: true
    diff_analysis: true
    diagram_generation: true
