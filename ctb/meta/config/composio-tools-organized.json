# # CTB Metadata
# # Generated: 2025-10-23T14:32:39.073106
# # CTB Version: 1.3.3
# # Division: Configuration & Tests
# # Category: config
# # Compliance: 90%
# # HEIR ID: HEIR-2025-10-MET-CONFIG-01

{
  "FIGMA": [
    {
      "name": "FIGMA_ADD_A_COMMENT_TO_A_FILE",
      "display": "Add a comment to a file",
      "desc": "Posts a new comment to a figma file or branch, optionally replying to an existing root comment (repl..."
    },
    {
      "name": "FIGMA_ADD_A_REACTION_TO_A_COMMENT",
      "display": "Add a reaction to a comment",
      "desc": "Posts a specified emoji reaction to an existing comment in a figma file or branch, requiring valid f..."
    },
    {
      "name": "FIGMA_CREATE_A_WEBHOOK",
      "display": "Create a webhook",
      "desc": "Creates a figma webhook for a `team id` to send post notifications for an `event type` to a publicly..."
    },
    {
      "name": "FIGMA_CREATE_DEV_RESOURCES",
      "display": "Create dev resources",
      "desc": "Creates and attaches multiple uniquely-urled development resources to specified figma nodes, up to 1..."
    },
    {
      "name": "FIGMA_CREATE_MODIFY_DELETE_VARIABLES",
      "display": "Create, modify, or delete variables",
      "desc": "Manages variables, collections, modes, and their values in a figma file via batch create/update/dele..."
    },
    {
      "name": "FIGMA_DELETE_A_COMMENT",
      "display": "Delete a comment",
      "desc": "Deletes a specific comment from a figma file or branch, provided the authenticated user is the origi..."
    },
    {
      "name": "FIGMA_DELETE_A_REACTION",
      "display": "Delete a reaction",
      "desc": "Deletes a specific emoji reaction from a comment in a figma file; the user must have originally crea..."
    },
    {
      "name": "FIGMA_DELETE_A_WEBHOOK",
      "display": "Delete a webhook",
      "desc": "Permanently deletes an existing webhook, identified by its unique `webhook id`; this operation is ir..."
    },
    {
      "name": "FIGMA_DELETE_DEV_RESOURCE",
      "display": "Delete dev resource",
      "desc": "Deletes a development resource (used to link figma design elements to external developer information..."
    },
    {
      "name": "FIGMA_DESIGN_TOKENS_TO_TAILWIND",
      "display": "Design tokens to tailwind",
      "desc": "Convert design tokens to tailwind css configuration. takes the output from extractdesigntokens and g..."
    },
    {
      "name": "FIGMA_DETECT_BACKGROUND",
      "display": "Detect background",
      "desc": "Detect background layers for selected nodes. uses geometric analysis, z-index ordering, and visual p..."
    },
    {
      "name": "FIGMA_DISCOVER_FIGMA_RESOURCES",
      "display": "Discover Figma Resources",
      "desc": "\ud83d\udd0d smart figma resource discovery - never guess ids again! \ud83c\udfaf easiest method: just paste any figma url..."
    },
    {
      "name": "FIGMA_DOWNLOAD_FIGMA_IMAGES",
      "display": "Download Figma Images",
      "desc": "Download images from figma file nodes. renders specified nodes as images and downloads them using me..."
    },
    {
      "name": "FIGMA_EXTRACT_DESIGN_TOKENS",
      "display": "Extract design tokens",
      "desc": "Extract design tokens from figma files. combines styles, variables, and extracted values to create a..."
    },
    {
      "name": "FIGMA_EXTRACT_PROTOTYPE_INTERACTIONS",
      "display": "Extract Prototype Interactions",
      "desc": "Extract prototype interactions and animations from figma files. analyzes the prototype data to extra..."
    },
    {
      "name": "FIGMA_GET_ACTIVITY_LOGS",
      "display": "Get activity logs",
      "desc": "Retrieves activity log events from figma, allowing filtering by event types, time range, and paginat..."
    },
    {
      "name": "FIGMA_GET_A_WEBHOOK",
      "display": "Get a webhook",
      "desc": "Retrieves detailed information about a specific webhook by its id, provided the webhook exists and i..."
    },
    {
      "name": "FIGMA_GET_COMMENTS_IN_A_FILE",
      "display": "Get comments in a file",
      "desc": "Retrieves all comments from an existing figma file, identified by a valid `file key`, returning deta..."
    },
    {
      "name": "FIGMA_GET_COMPONENT",
      "display": "Get component",
      "desc": "Get component data with automatic simplification. returns clean, ai-friendly component structure."
    },
    {
      "name": "FIGMA_GET_COMPONENT_SET",
      "display": "Get component set",
      "desc": "Retrieves detailed metadata for a specific published figma component set using its unique `key`."
    },
    {
      "name": "FIGMA_GET_CURRENT_USER",
      "display": "Get current user",
      "desc": "Retrieves detailed information for the currently authenticated figma user."
    },
    {
      "name": "FIGMA_GET_DEV_RESOURCES",
      "display": "Get dev resources",
      "desc": "Retrieves development resources (e.g., jira/github links) for a figma main file, optionally filterin..."
    },
    {
      "name": "FIGMA_GET_FILE_COMPONENTS",
      "display": "Get file components",
      "desc": "Retrieves published components from a figma file, which must be a main file (not a branch) acting as..."
    },
    {
      "name": "FIGMA_GET_FILE_COMPONENT_SETS",
      "display": "Get file component sets",
      "desc": "Retrieves all published component sets from the specified figma main file (file key must not be for ..."
    },
    {
      "name": "FIGMA_GET_FILE_JSON",
      "display": "Get file json",
      "desc": "Get figma file data with automatic simplification. this enhanced version automatically transforms ve..."
    },
    {
      "name": "FIGMA_GET_FILES_IN_A_PROJECT",
      "display": "Get files in a project",
      "desc": "Fetches a list of files in a figma project, optionally including branch metadata."
    },
    {
      "name": "FIGMA_GET_FILE_STYLES",
      "display": "Get file styles",
      "desc": "Retrieves a list of published styles (like colors, text attributes, effects, and layout grids) from ..."
    },
    {
      "name": "FIGMA_GET_IMAGE_FILLS",
      "display": "Get image fills",
      "desc": "Retrieves temporary (14-day expiry) download urls for all image fills in a figma file; requires `ima..."
    },
    {
      "name": "FIGMA_GET_LIBRARY_ANALYTICS_COMPONENT_ACTION_DATA",
      "display": "Get library analytics component action data",
      "desc": "Retrieves component insertion and detachment analytics for a specified figma library, groupable by '..."
    },
    {
      "name": "FIGMA_GET_LIBRARY_ANALYTICS_COMPONENT_USAGE_DATA",
      "display": "Get library analytics component usage data",
      "desc": "Retrieves component usage analytics for a specified figma library file (identified by `file key`), w..."
    },
    {
      "name": "FIGMA_GET_LIBRARY_ANALYTICS_STYLE_ACTION_DATA",
      "display": "Get library analytics style action data",
      "desc": "Retrieves style usage analytics (insertions, detachments) for a figma library, grouped by 'style' or..."
    },
    {
      "name": "FIGMA_GET_LIBRARY_ANALYTICS_STYLE_USAGE_DATA",
      "display": "Get library analytics style usage data",
      "desc": "Retrieves style usage analytics for a figma library (specified by a valid `file key`), allowing data..."
    },
    {
      "name": "FIGMA_GET_LIBRARY_ANALYTICS_VARIABLE_ACTION_DATA",
      "display": "Get library analytics variable action data",
      "desc": "Retrieves weekly, paginated analytics data on variable insertions and detachments for a specified fi..."
    },
    {
      "name": "FIGMA_GET_LIBRARY_ANALYTICS_VARIABLE_USAGE_DATA",
      "display": "Get library analytics variable usage data",
      "desc": "Retrieves paginated analytics data on variable usage from a specified figma library, grouped by 'fil..."
    },
    {
      "name": "FIGMA_GET_LOCAL_VARIABLES",
      "display": "Get local variables",
      "desc": "Retrieves all local/remote variables for a figma file/branch; crucial for obtaining mode-specific va..."
    },
    {
      "name": "FIGMA_GET_PAYMENTS",
      "display": "Get payments",
      "desc": "Retrieves a user's payment information for a figma plugin, widget, or community file; the authentica..."
    },
    {
      "name": "FIGMA_GET_PROJECTS_IN_A_TEAM",
      "display": "Get projects in a team",
      "desc": "Retrieves projects within a specified figma team that are visible to the authenticated user."
    },
    {
      "name": "FIGMA_GET_PUBLISHED_VARIABLES",
      "display": "Get published variables",
      "desc": "Retrieves variables published from a specified figma file; this api is available only to full member..."
    },
    {
      "name": "FIGMA_GET_REACTIONS_FOR_A_COMMENT",
      "display": "Get reactions for a comment",
      "desc": "Retrieves reactions for a specific comment in a figma file."
    },
    {
      "name": "FIGMA_GET_STYLE",
      "display": "Get style",
      "desc": "Retrieves detailed metadata for a specific style in figma using its unique style key."
    },
    {
      "name": "FIGMA_GET_TEAM_COMPONENTS",
      "display": "Get team components",
      "desc": "Retrieves components published in a specific figma team's library; the team must have published comp..."
    },
    {
      "name": "FIGMA_GET_TEAM_COMPONENT_SETS",
      "display": "Get team component sets",
      "desc": "Retrieves a paginated list of published component sets (collections of reusable ui elements) from a ..."
    },
    {
      "name": "FIGMA_GET_TEAM_STYLES",
      "display": "Get team styles",
      "desc": "Retrieves a paginated list of published styles, such as colors or text attributes, from a specified ..."
    },
    {
      "name": "FIGMA_GET_TEAM_WEBHOOKS",
      "display": "Get team webhooks",
      "desc": "Retrieves all webhooks registered for a specified figma team."
    },
    {
      "name": "FIGMA_GET_VERSIONS_OF_A_FILE",
      "display": "Get versions of a file",
      "desc": "Retrieves the version history for a figma file or branch, as specified by its `file key`."
    },
    {
      "name": "FIGMA_GET_WEBHOOK_REQUESTS",
      "display": "Get webhook requests",
      "desc": "Retrieves a history of webhook requests for a specific figma webhook subscription; data is available..."
    },
    {
      "name": "FIGMA_RENDER_IMAGES_OF_FILE_NODES",
      "display": "Render images of file nodes",
      "desc": "Renders specified nodes from a figma file as images (jpg, pdf, png, svg), returning a map of node id..."
    },
    {
      "name": "FIGMA_UPDATE_A_WEBHOOK",
      "display": "Update a webhook",
      "desc": "Updates an existing figma webhook, identified by `webhook id`, allowing modification of its event ty..."
    },
    {
      "name": "FIGMA_UPDATE_DEV_RESOURCES",
      "display": "Update dev resources",
      "desc": "Updates the name and/or url of one or more existing figma dev resources, each identified by its uniq..."
    }
  ],
  "GITHUB": [
    {
      "name": "GITHUB_ACCEPT_A_REPOSITORY_INVITATION",
      "display": "Accept a repository invitation",
      "desc": "Accepts a pending repository invitation that has been issued to the authenticated user."
    },
    {
      "name": "GITHUB_ACTIVITY_LIST_REPO_S_STARRED_BY_AUTHENTICATED_USER",
      "display": "List repositories starred by the authenticated user",
      "desc": "Deprecated: lists repositories starred by the authenticated user, including star creation timestamps..."
    },
    {
      "name": "GITHUB_ACTIVITY_LIST_STARGAZERS_FOR_REPO",
      "display": "List stargazers",
      "desc": "Deprecated: lists users who have starred a repository; use `list stargazers` instead."
    },
    {
      "name": "GITHUB_ACTIVITY_STAR_REPO_FOR_AUTHENTICATED_USER",
      "display": "Star a repository for the authenticated user",
      "desc": "Deprecated: stars a repository for the authenticated user; use `star a repository for the authentica..."
    },
    {
      "name": "GITHUB_ADD_AN_EMAIL_ADDRESS_FOR_THE_AUTHENTICATED_USER",
      "display": "Add email for auth user",
      "desc": "Adds one or more email addresses (which will be initially unverified) to the authenticated user's gi..."
    },
    {
      "name": "GITHUB_ADD_APP_ACCESS_RESTRICTIONS",
      "display": "Add app access restrictions",
      "desc": "Replaces github app access restrictions for an existing protected branch; requires a json array of a..."
    },
    {
      "name": "GITHUB_ADD_A_REPOSITORY_COLLABORATOR",
      "display": "Add a repository collaborator",
      "desc": "Adds a github user as a repository collaborator, or updates their permission if already a collaborat..."
    },
    {
      "name": "GITHUB_ADD_A_REPOSITORY_TO_AN_APP_INSTALLATION",
      "display": "Add a repository to an app installation",
      "desc": "Adds a repository to a github app installation, granting the app access; requires authenticated user..."
    },
    {
      "name": "GITHUB_ADD_A_SELECTED_REPOSITORY_TO_A_USER_SECRET",
      "display": "Add a selected repository to a user secret",
      "desc": "Grants a specified repository access to an authenticated user's existing codespaces secret, enabling..."
    },
    {
      "name": "GITHUB_ADD_ASSIGNEES_TO_AN_ISSUE",
      "display": "Add assignees to an issue",
      "desc": "Adds or removes assignees for a github issue; changes are silently ignored if the authenticated user..."
    },
    {
      "name": "GITHUB_ADD_LABELS_TO_AN_ISSUE",
      "display": "Add labels to an issue",
      "desc": "Adds labels (provided in the request body) to a repository issue; labels that do not already exist a..."
    },
    {
      "name": "GITHUB_ADD_ORG_RUNNER_LABELS",
      "display": "Add org runner labels",
      "desc": "Adds new custom labels to an existing self-hosted runner for an organization; existing labels are no..."
    },
    {
      "name": "GITHUB_ADD_OR_UPDATE_TEAM_MEMBERSHIP_FOR_A_USER",
      "display": "Add or update team membership for a user",
      "desc": "Adds a github user to a team or updates their role (member or maintainer), inviting them to the orga..."
    },
    {
      "name": "GITHUB_ADD_OR_UPDATE_TEAM_PROJECT_PERMISSIONS",
      "display": "Add or update team project permissions",
      "desc": "Grants or updates a team's permissions ('read', 'write', or 'admin') for a specific project, which m..."
    },
    {
      "name": "GITHUB_ADD_OR_UPDATE_TEAM_REPOSITORY_PERMISSIONS",
      "display": "Add or update team repository permissions",
      "desc": "Sets or updates a team's permission level for a repository within an organization; the team must be ..."
    },
    {
      "name": "GITHUB_ADD_PROJECT_COLLABORATOR",
      "display": "Add project collaborator",
      "desc": "Adds a specified github user as a collaborator to an existing organization project with a given perm..."
    },
    {
      "name": "GITHUB_ADD_REPO_TO_ORG_SECRET_WITH_SELECTED_ACCESS",
      "display": "Add repo to org secret with selected access",
      "desc": "Adds a repository to an existing organization-level github actions secret that is configured for 'se..."
    },
    {
      "name": "GITHUB_ADD_REPO_TO_ORG_SECRET_WITH_SELECTED_VISIBILITY",
      "display": "Add selected repo to org secret",
      "desc": "Grants an existing repository access to an existing organization-level dependabot secret; the reposi..."
    },
    {
      "name": "GITHUB_ADD_RUNNER_LABELS",
      "display": "Add runner labels",
      "desc": "Adds and appends custom labels to a self-hosted repository runner, which must be registered and acti..."
    },
    {
      "name": "GITHUB_ADD_SELECTED_REPOSITORY_TO_AN_ORGANIZATION_SECRET",
      "display": "Add selected repository to an organization secret",
      "desc": "Adds a repository to an organization secret's access list when the secret's visibility is 'selected'..."
    },
    {
      "name": "GITHUB_ADD_SELECTED_REPOSITORY_TO_AN_ORGANIZATION_VARIABLE",
      "display": "Add selected repository to an organization variable",
      "desc": "Grants a repository access to an organization-level github actions variable, if that variable's visi..."
    },
    {
      "name": "GITHUB_ADD_SOCIAL_ACCOUNTS_FOR_THE_AUTHENTICATED_USER",
      "display": "Add social accounts for the authenticated user",
      "desc": "Adds one or more social media links (which must be valid, full urls for platforms supported by githu..."
    },
    {
      "name": "GITHUB_ADD_STATUS_CHECK_CONTEXTS",
      "display": "Add status check contexts",
      "desc": "Adds status check contexts (provided in the request body, e.g., `{\"contexts\": [\"new-context\"]}`) to ..."
    },
    {
      "name": "GITHUB_ADD_TEAM_ACCESS_RESTRICTIONS",
      "display": "Add team access restrictions",
      "desc": "Overwrites the list of teams (and their child teams) granted push access to a protected branch; the ..."
    },
    {
      "name": "GITHUB_ADD_USER_ACCESS_RESTRICTIONS",
      "display": "Add user access restrictions",
      "desc": "Sets/replaces list of users allowed to push to a protected branch; usernames (e.g., `[\"user1\"]`) mus..."
    },
    {
      "name": "GITHUB_ADD_USERS_TO_CODESPACES_ACCESS_FOR_AN_ORGANIZATION",
      "display": "Add users to codespaces access for an organization",
      "desc": "Sets or replaces the list of organization members granted codespaces access billed to the organizati..."
    },
    {
      "name": "GITHUB_APPROVE_A_WORKFLOW_RUN_FOR_A_FORK_PULL_REQUEST",
      "display": "Approve a workflow run for a fork pull request",
      "desc": "Approves a workflow run from a forked repository's pull request; call this when such a run requires ..."
    },
    {
      "name": "GITHUB_ASSIGN_AN_ORGANIZATION_ROLE_TO_A_TEAM",
      "display": "Assign an organization role to a team",
      "desc": "Assigns an existing organization-level role (identified by `role id`) to a team (identified by `team..."
    },
    {
      "name": "GITHUB_ASSIGN_AN_ORGANIZATION_ROLE_TO_A_USER",
      "display": "Assign an organization role to a user",
      "desc": "Assigns a specific organization role to a user who is a member or an outside collaborator in a githu..."
    },
    {
      "name": "GITHUB_AUTH_USER_DOCKER_CONFLICT_PACKAGES_LIST",
      "display": "Authuserdockerconflictpackageslist",
      "desc": "Lists docker packages for the authenticated user that encountered conflicts during the docker migrat..."
    },
    {
      "name": "GITHUB_BLOCK_A_USER",
      "display": "Block a user",
      "desc": "Blocks an existing individual github user (not an organization or your own account), preventing them..."
    },
    {
      "name": "GITHUB_BLOCK_A_USER_FROM_AN_ORGANIZATION",
      "display": "Block a user from an organization",
      "desc": "Blocks an existing github user from an existing organization, preventing their contributions, collab..."
    },
    {
      "name": "GITHUB_CANCEL_A_GITHUB_PAGES_DEPLOYMENT",
      "display": "Cancel a GitHub Pages deployment",
      "desc": "Cancels an existing, ongoing or queued github pages deployment for a repository using its `pages dep..."
    },
    {
      "name": "GITHUB_CANCEL_A_WORKFLOW_RUN",
      "display": "Cancel a workflow run",
      "desc": "Cancels a workflow run in a github repository if it is in a cancellable state (e.g., 'in progress' o..."
    },
    {
      "name": "GITHUB_CHECK_A_TOKEN",
      "display": "Check a token",
      "desc": "Checks if a github app or oauth access token is valid for the specified client id and retrieves its ..."
    },
    {
      "name": "GITHUB_CHECK_IF_A_GIST_IS_STARRED",
      "display": "Check if a gist is starred",
      "desc": "Checks if a gist, identified by `gist id`, is starred by the authenticated user, returning an empty ..."
    },
    {
      "name": "GITHUB_CHECK_IF_A_PERSON_IS_FOLLOWED_BY_THE_AUTHENTICATED_USER",
      "display": "Check if person is followed by authenticated user",
      "desc": "Checks if the authenticated github user follows a target github user; an http 204 status indicates t..."
    },
    {
      "name": "GITHUB_CHECK_IF_A_PULL_REQUEST_HAS_BEEN_MERGED",
      "display": "Check if pull request merged",
      "desc": "Checks if a specified github pull request has been merged, indicated by a 204 http status (merged) o..."
    },
    {
      "name": "GITHUB_CHECK_IF_A_REPOSITORY_IS_STARRED_BY_THE_AUTHENTICATED_USER",
      "display": "Check if repo starred by auth user",
      "desc": "Use to determine if the authenticated user has starred a specific github repository, which is confir..."
    },
    {
      "name": "GITHUB_CHECK_IF_A_USER_CAN_BE_ASSIGNED",
      "display": "Check if a user can be assigned",
      "desc": "Verifies if a github user can be assigned to issues in a repository; assignability is confirmed by a..."
    },
    {
      "name": "GITHUB_CHECK_IF_A_USER_CAN_BE_ASSIGNED_TO_A_ISSUE",
      "display": "Check if a user can be assigned to an issue",
      "desc": "Checks if a specified github user can be assigned to a given issue within a repository."
    },
    {
      "name": "GITHUB_CHECK_IF_A_USER_FOLLOWS_ANOTHER_USER",
      "display": "Check if a user follows another user",
      "desc": "Checks if a github user `username` follows `target user`; returns a 204 http status if true, 404 if ..."
    },
    {
      "name": "GITHUB_CHECK_IF_A_USER_IS_A_REPOSITORY_COLLABORATOR",
      "display": "Check if a user is a repository collaborator",
      "desc": "Checks if a user is a collaborator on a specified github repository, returning a 204 status if they ..."
    },
    {
      "name": "GITHUB_CHECK_IF_A_USER_IS_BLOCKED_BY_AN_ORGANIZATION",
      "display": "Check if a user is blocked by an organization",
      "desc": "Checks if a github user is blocked by an organization; a successful response (204 no content) indica..."
    },
    {
      "name": "GITHUB_CHECK_IF_A_USER_IS_BLOCKED_BY_THE_AUTHENTICATED_USER",
      "display": "Check if a user is blocked by the authenticated user",
      "desc": "Checks if the specified github user is blocked by the authenticated user; a 204 no content response ..."
    },
    {
      "name": "GITHUB_CHECK_PRIVATE_VULNERABILITY_REPORTING_STATUS",
      "display": "Check private vulnerability reporting status",
      "desc": "Checks if private vulnerability reporting is enabled for the specified repository."
    },
    {
      "name": "GITHUB_CHECK_TEAM_PERMISSIONS_FOR_A_PROJECT",
      "display": "Check team permissions for a project",
      "desc": "Checks if a team has 'read', 'write', or 'admin' permissions for an organization's specific classic ..."
    },
    {
      "name": "GITHUB_CHECK_TEAM_PERMISSIONS_FOR_A_REPOSITORY",
      "display": "Check team permissions for a repository",
      "desc": "Checks a team's permissions for a specific repository within an organization, including permissions ..."
    },
    {
      "name": "GITHUB_CLEAR_REPOSITORY_CACHE_BY_KEY",
      "display": "Clear repository cache by key",
      "desc": "Deletes github actions caches from a repository matching a specific `key` and an optional git `ref`,..."
    },
    {
      "name": "GITHUB_CLEAR_SELF_HOSTED_RUNNER_ORG_LABELS",
      "display": "Clear self-hosted runner org labels",
      "desc": "Removes all custom labels from a self-hosted runner for an organization; default labels (e.g., 'self..."
    },
    {
      "name": "GITHUB_COMPARE_TWO_COMMITS",
      "display": "Compare two commits",
      "desc": "Compares two commit points (commits, branches, tags, or shas) within a repository or across forks, u..."
    },
    {
      "name": "GITHUB_CONFIGURE_JITRUNNER_FOR_ORG",
      "display": "Configure JIT runner for an org",
      "desc": "Generates a jit configuration for a github organization's new self-hosted runner to run a single job..."
    },
    {
      "name": "GITHUB_CONFIGURE_OIDCSUBJECT_CLAIM_TEMPLATE",
      "display": "Configure OIDC subject claim template",
      "desc": "Sets or updates the oidc subject claim customization template for an existing github organization by..."
    },
    {
      "name": "GITHUB_CONVERT_AN_ORGANIZATION_MEMBER_TO_OUTSIDE_COLLABORATOR",
      "display": "Convert an organization member to outside collaborator",
      "desc": "Converts an existing organization member, who is not an owner, to an outside collaborator, restricti..."
    },
    {
      "name": "GITHUB_CREATE_A_BLOB",
      "display": "Create a blob",
      "desc": "Creates a git blob in a repository, requiring content and encoding ('utf-8' or 'base64')."
    },
    {
      "name": "GITHUB_CREATE_A_CHECK_RUN",
      "display": "Create a check run",
      "desc": "Creates a new check run for a specific commit in a repository, used by external services to report s..."
    },
    {
      "name": "GITHUB_CREATE_A_CHECK_SUITE",
      "display": "Create a check suite",
      "desc": "Creates a new check suite for a specific commit (`head sha`) in an original repository (not a fork);..."
    },
    {
      "name": "GITHUB_CREATE_A_CODESPACE_FOR_THE_AUTHENTICATED_USER",
      "display": "Create a codespace for the authenticated user",
      "desc": "Creates a github codespace for the authenticated user, requiring a json request body with either `re..."
    },
    {
      "name": "GITHUB_CREATE_A_CODESPACE_FROM_A_PULL_REQUEST",
      "display": "Create a codespace from a pull request",
      "desc": "Creates a github codespace for an open pull request in a codespaces-enabled repository, with options..."
    },
    {
      "name": "GITHUB_CREATE_A_CODESPACE_IN_A_REPOSITORY",
      "display": "Create a codespace in a repository",
      "desc": "Creates a github codespace for the authenticated user in a specified repository, which must be acces..."
    },
    {
      "name": "GITHUB_CREATE_A_COMMIT",
      "display": "Create a commit",
      "desc": "Creates a new commit in a github repository; the `tree` sha and any `parents` shas must already exis..."
    },
    {
      "name": "GITHUB_CREATE_A_COMMIT_COMMENT",
      "display": "Create a commit comment",
      "desc": "Creates a comment on a specific commit, or on a specific line if `path` and `position` are provided."
    },
    {
      "name": "GITHUB_CREATE_A_COMMIT_STATUS",
      "display": "Create a commit status",
      "desc": "Sets a commit's status (e.g., error, failure, pending, success from ci/cd) for a given sha; max 1000..."
    },
    {
      "name": "GITHUB_CREATE_A_CUSTOM_ORGANIZATION_ROLE",
      "display": "Create a custom organization role",
      "desc": "Creates a custom role with defined permissions within a github organization."
    },
    {
      "name": "GITHUB_CREATE_A_DEPLOY_KEY",
      "display": "Create a deploy key",
      "desc": "Creates a deploy key for a repository; the repository must exist and be accessible, and the provided..."
    },
    {
      "name": "GITHUB_CREATE_A_DEPLOYMENT",
      "display": "Create a deployment",
      "desc": "Creates a github deployment for an existing repository, targeting a specific ref (branch, tag, or sh..."
    },
    {
      "name": "GITHUB_CREATE_A_DEPLOYMENT_BRANCH_POLICY",
      "display": "Create a deployment branch policy",
      "desc": "Creates a deployment branch or tag policy for an existing environment in a github repository, using ..."
    },
    {
      "name": "GITHUB_CREATE_A_DEPLOYMENT_STATUS",
      "display": "Create a deployment status",
      "desc": "Creates a status for an existing deployment, updating its operational state, associated urls, and de..."
    },
    {
      "name": "GITHUB_CREATE_A_DISCUSSION",
      "display": "Create a discussion",
      "desc": "Creates a new discussion post on a specific team's page within an organization."
    },
    {
      "name": "GITHUB_CREATE_A_DISCUSSION_COMMENT",
      "display": "Create a discussion comment",
      "desc": "Creates a new comment on an existing team discussion within a github organization."
    },
    {
      "name": "GITHUB_CREATE_A_FORK",
      "display": "Create a fork",
      "desc": "Creates a fork of an accessible repository, optionally into a specific organization, with a new name..."
    },
    {
      "name": "GITHUB_CREATE_A_GIST",
      "display": "Create a gist",
      "desc": "Creates a new gist on github with provided files, an optional description, and public/secret visibil..."
    },
    {
      "name": "GITHUB_CREATE_A_GIST_COMMENT",
      "display": "Create a gist comment",
      "desc": "Creates a new comment on a specified github gist."
    },
    {
      "name": "GITHUB_CREATE_A_GITHUB_APP_FROM_A_MANIFEST",
      "display": "Create a GitHub App from a manifest",
      "desc": "Use this action to finalize a github app's creation by exchanging the temporary `code` (received as ..."
    },
    {
      "name": "GITHUB_CREATE_A_GITHUB_PAGES_DEPLOYMENT",
      "display": "Create a github pages deployment",
      "desc": "Creates a github pages deployment for a repository using a specified artifact and oidc token, provid..."
    },
    {
      "name": "GITHUB_CREATE_A_GITHUB_PAGES_SITE",
      "display": "Create a github pages site",
      "desc": "Configures or updates github pages for a repository, setting build type and source; ensure a pages w..."
    },
    {
      "name": "GITHUB_CREATE_A_LABEL",
      "display": "Create a label",
      "desc": "Creates a new label in a specified github repository, provided the repository exists and the user ha..."
    },
    {
      "name": "GITHUB_CREATE_A_MILESTONE",
      "display": "Create a milestone",
      "desc": "Creates a milestone in a github repository for tracking progress on issues or pull requests; require..."
    },
    {
      "name": "GITHUB_CREATE_AN_AUTOLINK_REFERENCE_FOR_A_REPOSITORY",
      "display": "Create an autolink reference for a repository",
      "desc": "Creates a repository autolink to automatically convert text references (e.g., 'ticket-123') into hyp..."
    },
    {
      "name": "GITHUB_CREATE_AN_ENVIRONMENT_VARIABLE",
      "display": "Create an environment variable",
      "desc": "Creates an encrypted environment variable for a pre-existing environment within a github repository;..."
    },
    {
      "name": "GITHUB_CREATE_AN_ISSUE",
      "display": "Create an issue",
      "desc": "Creates a new issue in a github repository, requiring the repository to exist and have issues enable..."
    },
    {
      "name": "GITHUB_CREATE_AN_ISSUE_COMMENT",
      "display": "Create an issue comment",
      "desc": "Creates a new comment on an existing github issue or pull request within the specified repository."
    },
    {
      "name": "GITHUB_CREATE_AN_ORGANIZATION_PROJECT",
      "display": "Create an organization project",
      "desc": "Creates a new classic project board within a specified github organization."
    },
    {
      "name": "GITHUB_CREATE_AN_ORGANIZATION_REPOSITORY",
      "display": "Create an organization repository",
      "desc": "Creates a new repository within a specified github organization, with options for detailed configura..."
    },
    {
      "name": "GITHUB_CREATE_AN_ORGANIZATION_VARIABLE",
      "display": "Create an organization variable",
      "desc": "Creates a new, uniquely named github actions variable for an organization, with configurable reposit..."
    },
    {
      "name": "GITHUB_CREATE_AN_ORGANIZATION_WEBHOOK",
      "display": "Create an organization webhook",
      "desc": "Creates a webhook for a github organization to deliver event notifications to a configured url."
    },
    {
      "name": "GITHUB_CREATE_A_PROJECT_CARD",
      "display": "Create a project card",
      "desc": "Creates a project card in a github project column; the request body must contain either a `note` for..."
    },
    {
      "name": "GITHUB_CREATE_A_PROJECT_COLUMN",
      "display": "Create a project column",
      "desc": "Creates a new column in a github project (classic)."
    },
    {
      "name": "GITHUB_CREATE_A_PULL_REQUEST",
      "display": "Create a pull request",
      "desc": "Creates a pull request in a github repository, requiring existing `base` and `head` branches; `title..."
    },
    {
      "name": "GITHUB_CREATE_A_REFERENCE",
      "display": "Create a reference",
      "desc": "Creates a git reference (e.g., a branch or tag) in a repository; the repository must not be empty pr..."
    },
    {
      "name": "GITHUB_CREATE_A_REGISTRATION_TOKEN_FOR_AN_ORGANIZATION",
      "display": "Create a registration token for an organization",
      "desc": "Generates a temporary (one-hour) registration token to add a new self-hosted runner to an organizati..."
    },
    {
      "name": "GITHUB_CREATE_A_REGISTRATION_TOKEN_FOR_A_REPOSITORY",
      "display": "Create a registration token for a repository",
      "desc": "Generates a time-limited token required to register a new self-hosted runner with a specific reposit..."
    },
    {
      "name": "GITHUB_CREATE_A_RELEASE",
      "display": "Create a release",
      "desc": "Creates a release in a github repository for a specified tag; the tag must be unique for published r..."
    },
    {
      "name": "GITHUB_CREATE_A_REMOVE_TOKEN_FOR_AN_ORGANIZATION",
      "display": "Create a remove token for an organization",
      "desc": "Generates a token, valid for one hour, to authenticate removing a self-hosted runner from an organiz..."
    },
    {
      "name": "GITHUB_CREATE_A_REMOVE_TOKEN_FOR_A_REPOSITORY",
      "display": "Create a remove token for a repository",
      "desc": "Generates a temporary (one-hour validity) token required to unregister and remove a self-hosted runn..."
    },
    {
      "name": "GITHUB_CREATE_A_REPLY_FOR_A_REVIEW_COMMENT",
      "display": "Create a reply for a review comment",
      "desc": "Posts a reply to a specific review comment on a github pull request, requiring the repository, pull ..."
    },
    {
      "name": "GITHUB_CREATE_A_REPOSITORY_DISPATCH_EVENT",
      "display": "Create a repository dispatch event",
      "desc": "Triggers a github actions workflow or a webhook on a repository by creating a repository dispatch ev..."
    },
    {
      "name": "GITHUB_CREATE_A_REPOSITORY_FOR_THE_AUTHENTICATED_USER",
      "display": "Create a repository for the authenticated user",
      "desc": "Creates a new repository for the authenticated user, optionally within an organization if `team id` ..."
    },
    {
      "name": "GITHUB_CREATE_A_REPOSITORY_FROM_AN_UNPUBLISHED_CODESPACE",
      "display": "Create a repository from an unpublished codespace",
      "desc": "Publishes the specified codespace to a new repository, using the codespace's current state as the in..."
    },
    {
      "name": "GITHUB_CREATE_A_REPOSITORY_PROJECT",
      "display": "Create a repository project",
      "desc": "Creates a new classic project board within a specified repository; classic projects must be enabled ..."
    },
    {
      "name": "GITHUB_CREATE_A_REPOSITORY_RULESET",
      "display": "Create a repository ruleset",
      "desc": "Creates a uniquely named ruleset for a repository, defining rules for branches or tags with specifie..."
    },
    {
      "name": "GITHUB_CREATE_A_REPOSITORY_USING_A_TEMPLATE",
      "display": "Create a repository using a template",
      "desc": "Creates a new repository from an existing template repository; the authenticated user must have acce..."
    },
    {
      "name": "GITHUB_CREATE_A_REPOSITORY_VARIABLE",
      "display": "Create a repository variable",
      "desc": "Creates a new, unencrypted variable in a repository for github actions workflows; fails if a variabl..."
    },
    {
      "name": "GITHUB_CREATE_A_REPOSITORY_WEBHOOK",
      "display": "Create a repository webhook",
      "desc": "Creates a webhook for a specified repository; requires admin permissions on the repository."
    },
    {
      "name": "GITHUB_CREATE_A_REVIEW_COMMENT_FOR_A_PULL_REQUEST",
      "display": "Create a review comment for a pull request",
      "desc": "Creates a review comment on a pull request's diff, targeting a specific line, range of lines, an ent..."
    },
    {
      "name": "GITHUB_CREATE_A_REVIEW_FOR_A_PULL_REQUEST",
      "display": "Create a review for a pull request",
      "desc": "Creates a pull request review, allowing approval, change requests, or comments; `body` is required i..."
    },
    {
      "name": "GITHUB_CREATE_A_SCOPED_ACCESS_TOKEN",
      "display": "Create a scoped access token",
      "desc": "Exchanges a user-to-server token for a new, fine-grained scoped access token for a github app, requi..."
    },
    {
      "name": "GITHUB_CREATE_A_SNAPSHOT_OF_DEPENDENCIES_FOR_A_REPOSITORY",
      "display": "Create a dependency snapshot",
      "desc": "Creates a snapshot of a repository's dependencies to populate the github dependency graph and enable..."
    },
    {
      "name": "GITHUB_CREATE_A_TAG_OBJECT",
      "display": "Create a tag object",
      "desc": "Creates an annotated git tag object in a repository, pointing to an existing git object (commit, tre..."
    },
    {
      "name": "GITHUB_CREATE_A_TAG_PROTECTION_STATE_FOR_A_REPOSITORY",
      "display": "Create a tag protection state for a repository",
      "desc": "Creates a tag protection rule for a repository using a glob pattern; note: tag protections are depre..."
    },
    {
      "name": "GITHUB_CREATE_A_TEAM",
      "display": "Create a team",
      "desc": "Creates a new team in an organization, optionally with maintainers, repositories, specific privacy, ..."
    },
    {
      "name": "GITHUB_CREATE_A_TEMPORARY_PRIVATE_FORK",
      "display": "Create a temporary private fork",
      "desc": "Creates a temporary private fork of the specified repository to address a security vulnerability, li..."
    },
    {
      "name": "GITHUB_CREATE_A_TREE",
      "display": "Create a tree",
      "desc": "Creates a new git tree object in a repository, defining file/directory structure by specifying tree ..."
    },
    {
      "name": "GITHUB_CREATE_A_USER_PROJECT",
      "display": "Create a user project",
      "desc": "Creates a new github project board for the authenticated user to organize and track issues, pull req..."
    },
    {
      "name": "GITHUB_CREATE_A_WORKFLOW_DISPATCH_EVENT",
      "display": "Create a workflow dispatch event",
      "desc": "Manually triggers a github actions workflow identified by `workflow id` at a given `ref`, if the wor..."
    },
    {
      "name": "GITHUB_CREATE_COMMIT_SIGNATURE_PROTECTION",
      "display": "Create commit signature protection",
      "desc": "Enables commit signature protection for a specified branch, requiring all new commits to be signed."
    },
    {
      "name": "GITHUB_CREATE_DEPLOYMENT_PROTECTION_RULE",
      "display": "Create a custom deployment protection rule on an environment",
      "desc": "Enables a custom deployment protection rule for an existing environment in a repository by linking a..."
    },
    {
      "name": "GITHUB_CREATE_JIT_RUNNER_CONFIG",
      "display": "Create JIT runner config for repo",
      "desc": "Generates a temporary just-in-time (jit) configuration for a new self-hosted github actions runner f..."
    },
    {
      "name": "GITHUB_CREATE_OR_UPDATE_A_CUSTOM_PROPERTY_FOR_AN_ORGANIZATION",
      "display": "Create or update a custom property for an organization",
      "desc": "Creates a new custom property (name must be unique for creation) or updates an existing one for an o..."
    },
    {
      "name": "GITHUB_CREATE_OR_UPDATE_AN_ENVIRONMENT",
      "display": "Create or update an environment",
      "desc": "Creates a new environment or updates an existing one in a github repository, allowing configuration ..."
    },
    {
      "name": "GITHUB_CREATE_OR_UPDATE_AN_ENVIRONMENT_SECRET",
      "display": "Create or update an environment secret",
      "desc": "Creates or updates an environment secret with an `encrypted value` that was encrypted using the publ..."
    },
    {
      "name": "GITHUB_CREATE_OR_UPDATE_AN_ORGANIZATION_SECRET",
      "display": "Create or update an organization secret",
      "desc": "Creates or updates an organization secret for github actions, requiring its value to be pre-encrypte..."
    },
    {
      "name": "GITHUB_CREATE_OR_UPDATE_A_REPOSITORY_SECRET",
      "display": "Create or update a repository secret",
      "desc": "Creates or updates a github actions secret within a specific repository; use `encrypted value` and `..."
    },
    {
      "name": "GITHUB_CREATE_OR_UPDATE_A_SECRET_FOR_THE_AUTHENTICATED_USER",
      "display": "Create or update a secret for the authenticated user",
      "desc": "Creates or updates a codespaces secret for the authenticated user; `encrypted value` must be encrypt..."
    },
    {
      "name": "GITHUB_CREATE_OR_UPDATE_CUSTOM_PROPERTIES_FOR_AN_ORGANIZATION",
      "display": "Create or update custom properties for an organization",
      "desc": "Creates new custom property schemas or updates existing ones in bulk for a specified organization; e..."
    },
    {
      "name": "GITHUB_CREATE_OR_UPDATE_CUSTOM_PROPERTY_VALUES_FOR_A_REPOSITORY",
      "display": "Create or update repository custom property values",
      "desc": "Creates or updates up to 30 custom property values for a repository; custom properties must be prede..."
    },
    {
      "name": "GITHUB_CREATE_OR_UPDATE_FILE_CONTENTS",
      "display": "Create or update file contents",
      "desc": "Creates a new file or updates an existing file in a github repository; provide `sha` to update an ex..."
    },
    {
      "name": "GITHUB_CREATE_OR_UPDATE_REPO_SECRET_WITH_ENCRYPTED_VALUE",
      "display": "Create or update repo secret with encrypted value",
      "desc": "Creates or updates a dependabot secret in a repository using an `encrypted value` (pre-encrypted wit..."
    },
    {
      "name": "GITHUB_CREATE_REACTION_FOR_A_COMMIT_COMMENT",
      "display": "Create reaction for a commit comment",
      "desc": "Creates an emoji reaction for a commit comment; if the user has already reacted with the same conten..."
    },
    {
      "name": "GITHUB_CREATE_REACTION_FOR_AN_ISSUE",
      "display": "Create reaction for an issue",
      "desc": "Creates a reaction for a specified issue within a github repository."
    },
    {
      "name": "GITHUB_CREATE_REACTION_FOR_AN_ISSUE_COMMENT",
      "display": "Create reaction for an issue comment",
      "desc": "Creates a reaction for a specific comment on an issue within a github repository."
    },
    {
      "name": "GITHUB_CREATE_REACTION_FOR_A_PULL_REQUEST_REVIEW_COMMENT",
      "display": "Create reaction for a pull request review comment",
      "desc": "Adds a specified reaction to a pull request review comment within a github repository."
    },
    {
      "name": "GITHUB_CREATE_REACTION_FOR_A_RELEASE",
      "display": "Create reaction for a release",
      "desc": "Creates an emoji reaction for a specific, existing release in a github repository."
    },
    {
      "name": "GITHUB_CREATE_REACTION_FOR_A_TEAM_DISCUSSION",
      "display": "Create reaction for a team discussion",
      "desc": "Creates a reaction for a team discussion within a github organization."
    },
    {
      "name": "GITHUB_CREATE_REACTION_FOR_A_TEAM_DISCUSSION_COMMENT",
      "display": "Create reaction for a team discussion comment",
      "desc": "Adds a reaction to a team discussion comment, requiring the specified organization, team, discussion..."
    },
    {
      "name": "GITHUB_CREATE_UPDATE_ORG_SECRET_WITH_LIB_SODIUM",
      "display": "Create or Update Organization Secret with LibSodium",
      "desc": "Creates or updates a dependabot organization secret, requiring the secret value to be pre-encrypted ..."
    },
    {
      "name": "GITHUB_CUSTOMIZE_OIDC_SUBJECT_CLAIM_TEMPLATE",
      "display": "Customize OIDC subject claim template",
      "desc": "Retrieves the openid connect (oidc) subject claim customization template for a repository, which def..."
    },
    {
      "name": "GITHUB_CUSTOM_OIDCSUBJECT_CLAIM_TEMPLATE",
      "display": "Get custom OIDC subject claim template",
      "desc": "Retrieves the openid connect (oidc) subject claim customization template for a github organization, ..."
    },
    {
      "name": "GITHUB_CUSTOM_OIDCSUBJECT_CLAIM_TEMPLATE_SETTER",
      "display": "Set custom OIDC subject claim template",
      "desc": "Sets the openid connect (oidc) subject claim template for a github repository, allowing use of the d..."
    },
    {
      "name": "GITHUB_DECLINE_A_REPOSITORY_INVITATION",
      "display": "Decline a repository invitation",
      "desc": "Declines a specific, pending repository invitation for the authenticated user, identified by its `in..."
    },
    {
      "name": "GITHUB_DELETE_ACCESS_RESTRICTIONS",
      "display": "Delete access restrictions",
      "desc": "Removes all user, team, and app-based access restrictions from a protected branch."
    },
    {
      "name": "GITHUB_DELETE_A_CODE_SCANNING_ANALYSIS_FROM_A_REPOSITORY",
      "display": "Delete a code scanning analysis from a repository",
      "desc": "Deletes a specific code scanning analysis by its id from a repository; `confirm delete` must be `tru..."
    },
    {
      "name": "GITHUB_DELETE_A_CODESPACE_FOR_THE_AUTHENTICATED_USER",
      "display": "Delete a codespace for the authenticated user",
      "desc": "Deletes a specific codespace owned by the authenticated user; this is a destructive action and the c..."
    },
    {
      "name": "GITHUB_DELETE_A_CODESPACE_FROM_THE_ORGANIZATION",
      "display": "Delete a codespace from the organization",
      "desc": "Permanently deletes a specific codespace belonging to a member of the specified organization."
    },
    {
      "name": "GITHUB_DELETE_A_COMMIT_COMMENT",
      "display": "Delete a commit comment",
      "desc": "Deletes a specific commit comment, identified by its `comment id`, from the specified repository; th..."
    },
    {
      "name": "GITHUB_DELETE_A_COMMIT_COMMENT_REACTION",
      "display": "Delete a commit comment reaction",
      "desc": "Deletes a reaction from a commit comment in a github repository."
    },
    {
      "name": "GITHUB_DELETE_A_CUSTOM_ORGANIZATION_ROLE",
      "display": "Delete a custom organization role",
      "desc": "Deletes a custom organization role (which should not be actively assigned) by its id; a 204 no conte..."
    },
    {
      "name": "GITHUB_DELETE_A_DEPLOY_KEY",
      "display": "Delete a deploy key",
      "desc": "Deletes a specific deploy key from a repository; to change a key's properties or access scope, the e..."
    },
    {
      "name": "GITHUB_DELETE_A_DEPLOYMENT",
      "display": "Delete a deployment",
      "desc": "Permanently deletes a specified *inactive* deployment from a repository."
    },
    {
      "name": "GITHUB_DELETE_A_DEPLOYMENT_BRANCH_POLICY",
      "display": "Delete a deployment branch policy",
      "desc": "Deletes a specific deployment branch or tag policy, identified by its id, from a given environment w..."
    },
    {
      "name": "GITHUB_DELETE_A_DISCUSSION",
      "display": "Delete a discussion",
      "desc": "Deletes a specific team discussion, identified by its number, from an organization's team."
    },
    {
      "name": "GITHUB_DELETE_A_DISCUSSION_COMMENT",
      "display": "Delete a discussion comment",
      "desc": "Deletes a specific comment from an existing team discussion within an organization, provided the spe..."
    },
    {
      "name": "GITHUB_DELETE_ADMIN_BRANCH_PROTECTION",
      "display": "Delete admin branch protection",
      "desc": "Removes admin enforcement from a protected branch (branch name cannot contain wildcard characters) i..."
    },
    {
      "name": "GITHUB_DELETE_A_FILE",
      "display": "Delete a file",
      "desc": "Deletes a file by path from a github repository, requiring a commit message and the file's current b..."
    },
    {
      "name": "GITHUB_DELETE_A_GIST",
      "display": "Delete a gist",
      "desc": "Permanently deletes an existing github gist, specified by its `gist id`; this action is destructive ..."
    },
    {
      "name": "GITHUB_DELETE_A_GIST_COMMENT",
      "display": "Delete a gist comment",
      "desc": "Deletes a specific comment from a github gist using its `gist id` and `comment id`."
    },
    {
      "name": "GITHUB_DELETE_A_GITHUB_PAGES_SITE",
      "display": "Delete a GitHub Pages site",
      "desc": "Deletes the github pages site for the specified repository; completes without error if no site is cu..."
    },
    {
      "name": "GITHUB_DELETE_A_LABEL",
      "display": "Delete a label",
      "desc": "Permanently removes an existing label from a repository."
    },
    {
      "name": "GITHUB_DELETE_A_MILESTONE",
      "display": "Delete a milestone",
      "desc": "Deletes the specified milestone if it exists; this operation is idempotent, typically returning a 40..."
    },
    {
      "name": "GITHUB_DELETE_AN_APP_AUTHORIZATION",
      "display": "Delete an app authorization",
      "desc": "Revokes a single, specific oauth access token for an oauth app, not all authorizations for the app."
    },
    {
      "name": "GITHUB_DELETE_AN_APP_TOKEN",
      "display": "Delete an app token",
      "desc": "Revokes an oauth access token for a github app, if the app exists and the token was issued to it."
    },
    {
      "name": "GITHUB_DELETE_AN_ARTIFACT",
      "display": "Delete an artifact",
      "desc": "Deletes a github artifact by its id within a repository, typically resulting in an empty response (h..."
    },
    {
      "name": "GITHUB_DELETE_AN_AUTOLINK_REFERENCE_FROM_A_REPOSITORY",
      "display": "Delete an autolink reference from a repository",
      "desc": "Deletes a specific autolink reference (which automatically links external resource ids like jira-123..."
    },
    {
      "name": "GITHUB_DELETE_AN_EMAIL_ADDRESS_FOR_THE_AUTHENTICATED_USER",
      "display": "Delete authenticated user email address",
      "desc": "Sends an empty request body to `delete /user/emails` to attempt deletion of user email addresses; th..."
    },
    {
      "name": "GITHUB_DELETE_AN_ENVIRONMENT",
      "display": "Delete an environment",
      "desc": "Deletes an existing deployment environment from an existing repository."
    },
    {
      "name": "GITHUB_DELETE_AN_ENVIRONMENT_SECRET",
      "display": "Delete an environment secret",
      "desc": "Deletes an existing and accessible secret from a specified environment within a github repository, r..."
    },
    {
      "name": "GITHUB_DELETE_AN_ENVIRONMENT_VARIABLE",
      "display": "Delete an environment variable",
      "desc": "Deletes a named environment variable from a specified, existing environment within a github reposito..."
    },
    {
      "name": "GITHUB_DELETE_AN_ISSUE_COMMENT",
      "display": "Delete an issue comment",
      "desc": "Permanently deletes a specific comment by its id from an issue or pull request, if the repository ex..."
    },
    {
      "name": "GITHUB_DELETE_AN_ISSUE_COMMENT_REACTION",
      "display": "Delete an issue comment reaction",
      "desc": "Deletes a reaction from an issue comment in a repository; the repository, comment, and reaction must..."
    },
    {
      "name": "GITHUB_DELETE_AN_ISSUE_REACTION",
      "display": "Delete an issue reaction",
      "desc": "Permanently removes a specific reaction from an issue in a github repository."
    },
    {
      "name": "GITHUB_DELETE_AN_ORGANIZATION",
      "display": "Delete an organization",
      "desc": "Deletes a github organization and its repositories; this is a destructive action and the organizatio..."
    },
    {
      "name": "GITHUB_DELETE_AN_ORGANIZATION_SECRET",
      "display": "Delete an organization secret",
      "desc": "Permanently deletes a secret from a github organization, making it inaccessible to github actions wo..."
    },
    {
      "name": "GITHUB_DELETE_AN_ORGANIZATION_VARIABLE",
      "display": "Delete an organization variable",
      "desc": "Deletes a named github actions variable from a specified organization."
    },
    {
      "name": "GITHUB_DELETE_AN_ORGANIZATION_WEBHOOK",
      "display": "Delete an organization webhook",
      "desc": "Deletes a specific webhook, identified by `hook id`, from an existing organization."
    },
    {
      "name": "GITHUB_DELETE_A_PACKAGE_FOR_AN_ORGANIZATION",
      "display": "Delete a package for an organization",
      "desc": "Deletes a specific package in an organization; cannot delete public packages with over 5,000 downloa..."
    },
    {
      "name": "GITHUB_DELETE_A_PACKAGE_FOR_A_USER",
      "display": "Delete a package for a user",
      "desc": "Deletes a package owned by the specified user, requiring admin permissions for the authenticated use..."
    },
    {
      "name": "GITHUB_DELETE_A_PACKAGE_FOR_THE_AUTHENTICATED_USER",
      "display": "Delete a package for the authenticated user",
      "desc": "Permanently deletes a specific package owned by the authenticated user; public packages downloaded o..."
    },
    {
      "name": "GITHUB_DELETE_A_PACKAGE_VERSION_FOR_THE_AUTHENTICATED_USER",
      "display": "Delete a package version for the authenticated user",
      "desc": "Deletes an existing package version associated with the authenticated user."
    },
    {
      "name": "GITHUB_DELETE_A_PENDING_REVIEW_FOR_A_PULL_REQUEST",
      "display": "Delete a pending review for a pull request",
      "desc": "Deletes a pending (unsubmitted) review from a pull request; this is only possible if the review has ..."
    },
    {
      "name": "GITHUB_DELETE_A_PROJECT",
      "display": "Delete a project",
      "desc": "Deletes the github project specified by `project id` if the project exists and the projects feature ..."
    },
    {
      "name": "GITHUB_DELETE_A_PROJECT_CARD",
      "display": "Delete a project card",
      "desc": "Deletes a project card from a github 'project (classic)'; this operation is idempotent."
    },
    {
      "name": "GITHUB_DELETE_A_PROJECT_COLUMN",
      "display": "Delete a project column",
      "desc": "Deletes a project column by its id from a github project (classic); this is a destructive operation."
    },
    {
      "name": "GITHUB_DELETE_A_PULL_REQUEST_COMMENT_REACTION",
      "display": "Delete a pull request comment reaction",
      "desc": "Deletes a specific reaction from a pull request review comment, provided the comment and reaction ex..."
    },
    {
      "name": "GITHUB_DELETE_A_REFERENCE",
      "display": "Delete a reference",
      "desc": "Deletes a git reference from a repository; 'ref' must be fully qualified (e.g., 'refs/heads/branch' ..."
    },
    {
      "name": "GITHUB_DELETE_A_RELEASE",
      "display": "Delete a release",
      "desc": "Permanently deletes a specific release, its assets, and potentially its associated git tag from a re..."
    },
    {
      "name": "GITHUB_DELETE_A_RELEASE_ASSET",
      "display": "Delete a release asset",
      "desc": "Deletes a specific release asset from a github repository; this action is idempotent."
    },
    {
      "name": "GITHUB_DELETE_A_RELEASE_REACTION",
      "display": "Delete a release reaction",
      "desc": "Deletes a reaction from a github release, provided the repository, release, and reaction exist."
    },
    {
      "name": "GITHUB_DELETE_A_REPOSITORY",
      "display": "Delete a repository",
      "desc": "Permanently deletes the specified repository; this is a destructive, irreversible action that requir..."
    },
    {
      "name": "GITHUB_DELETE_A_REPOSITORY_INVITATION",
      "display": "Delete a repository invitation",
      "desc": "Deletes an active repository invitation, permanently revoking a user's access to collaborate on the ..."
    },
    {
      "name": "GITHUB_DELETE_A_REPOSITORY_RULESET",
      "display": "Delete a repository ruleset",
      "desc": "Permanently deletes a repository ruleset."
    },
    {
      "name": "GITHUB_DELETE_A_REPOSITORY_SECRET",
      "display": "Delete a repository secret",
      "desc": "Deletes a named github actions secret from a specified repository; this operation is destructive and..."
    },
    {
      "name": "GITHUB_DELETE_A_REPOSITORY_SUBSCRIPTION",
      "display": "Delete a repository subscription",
      "desc": "Deletes the authenticated user's subscription to a specified repository if it exists, effectively 'u..."
    },
    {
      "name": "GITHUB_DELETE_A_REPOSITORY_VARIABLE",
      "display": "Delete a repository variable",
      "desc": "Deletes a named variable (e.g., for github actions workflows) from a repository; the repository and ..."
    },
    {
      "name": "GITHUB_DELETE_A_REPOSITORY_WEBHOOK",
      "display": "Delete a repository webhook",
      "desc": "Deletes a specific webhook from a repository."
    },
    {
      "name": "GITHUB_DELETE_A_REVIEW_COMMENT_FOR_A_PULL_REQUEST",
      "display": "Delete a review comment for a pull request",
      "desc": "Deletes a specific pull request review comment."
    },
    {
      "name": "GITHUB_DELETE_A_SECRET_FOR_THE_AUTHENTICATED_USER",
      "display": "Delete a secret for the authenticated user",
      "desc": "Deletes an existing codespaces secret for the authenticated user by `secret name`; this is a destruc..."
    },
    {
      "name": "GITHUB_DELETE_A_SELF_HOSTED_RUNNER_FROM_AN_ORGANIZATION",
      "display": "Delete a self hosted runner from an organization",
      "desc": "Deletes an existing and registered self-hosted runner from an organization, typically returning 204 ..."
    },
    {
      "name": "GITHUB_DELETE_A_SELF_HOSTED_RUNNER_FROM_A_REPOSITORY",
      "display": "Delete a self hosted runner from a repository",
      "desc": "Removes a specific self-hosted runner (by `runner id`) from a repository, if registered there; this ..."
    },
    {
      "name": "GITHUB_DELETE_A_TAG_PROTECTION_STATE_FOR_A_REPOSITORY",
      "display": "Delete a tag protection state for a repository",
      "desc": "Permanently deletes a specific tag protection rule, identified by its id, from the given repository."
    },
    {
      "name": "GITHUB_DELETE_A_TEAM",
      "display": "Delete a team",
      "desc": "Deletes a team (and any child teams) from an organization."
    },
    {
      "name": "GITHUB_DELETE_A_THREAD_SUBSCRIPTION",
      "display": "Delete a thread subscription",
      "desc": "Call this to mute a specific notification thread by deleting the user's subscription; notifications ..."
    },
    {
      "name": "GITHUB_DELETE_A_WORKFLOW_RUN",
      "display": "Delete a workflow run",
      "desc": "Deletes a specific workflow run from a repository."
    },
    {
      "name": "GITHUB_DELETE_BRANCH_PROTECTION",
      "display": "Delete branch protection",
      "desc": "Removes all protection rules from a specific branch in a github repository; the branch must currentl..."
    },
    {
      "name": "GITHUB_DELETE_COMMIT_SIGNATURE_PROTECTION",
      "display": "Delete commit signature protection",
      "desc": "Disables gpg commit signature protection for a specific branch in a github repository, meaning commi..."
    },
    {
      "name": "GITHUB_DELETE_DEPENDEBOT_SECRET_BY_NAME",
      "display": "Delete dependabot secret by name",
      "desc": "Deletes a specific dependabot secret, identified by its name, from a given repository if both the re..."
    },
    {
      "name": "GITHUB_DELETE_GITHUB_ACTIONS_CACHE_BY_ID",
      "display": "Delete GitHub Actions cache by ID",
      "desc": "Deletes a specific github actions cache from a repository using its unique `cache id`."
    },
    {
      "name": "GITHUB_DELETE_PACKAGE_VERSION_FOR_AN_ORGANIZATION",
      "display": "Delete package version for an organization",
      "desc": "Deletes a specific package version within an organization; requires admin permissions for packages w..."
    },
    {
      "name": "GITHUB_DELETE_PACKAGE_VERSION_FOR_A_USER",
      "display": "Delete package version for a user",
      "desc": "Permanently and irreversibly deletes a specific version of a package owned by the specified user."
    },
    {
      "name": "GITHUB_DELETE_PULL_REQUEST_REVIEW_PROTECTION",
      "display": "Delete pull request review protection",
      "desc": "Disables the requirement for pull request reviews before merging for a specific, existing branch in ..."
    },
    {
      "name": "GITHUB_DELETE_REPO_CODESPACE_SECRET_BY_NAME",
      "display": "Delete repo codespace secret by name",
      "desc": "Deletes a specific codespace secret from a repository by its name; this action is idempotent and wil..."
    },
    {
      "name": "GITHUB_DELETE_SOCIAL_ACCOUNTS_FOR_THE_AUTHENTICATED_USER",
      "display": "Delete social accounts for the authenticated user",
      "desc": "Deletes currently linked social media account urls from the authenticated user's github profile."
    },
    {
      "name": "GITHUB_DELETE_TEAM_DISCUSSION_COMMENT_REACTION",
      "display": "Delete team discussion comment reaction",
      "desc": "Deletes a reaction from a team discussion comment, given the organization name, team slug, discussio..."
    },
    {
      "name": "GITHUB_DELETE_TEAM_DISCUSSION_REACTION",
      "display": "Delete team discussion reaction",
      "desc": "Permanently deletes a specific reaction from a team discussion within an organization."
    },
    {
      "name": "GITHUB_DELETE_WORKFLOW_RUN_LOGS",
      "display": "Delete workflow run logs",
      "desc": "Deletes all logs for a specific workflow run in a github repository, provided the repository and run..."
    },
    {
      "name": "GITHUB_DISABLE_A_CUSTOM_PROTECTION_RULE_FOR_AN_ENVIRONMENT",
      "display": "Disable a custom protection rule for an environment",
      "desc": "Disables a specific, currently active custom deployment protection rule for an existing environment ..."
    },
    {
      "name": "GITHUB_DISABLE_A_WORKFLOW",
      "display": "Disable a workflow",
      "desc": "Disables a specified workflow (by id or filename) in a given github repository, preventing new autom..."
    },
    {
      "name": "GITHUB_DISABLE_PRIVATE_VULNERABILITY_REPORTING_FOR_A_REPOSITORY",
      "display": "Disable private vulnerability reporting for a repository",
      "desc": "Disables private vulnerability reporting for an existing github repository, preventing direct privat..."
    },
    {
      "name": "GITHUB_DISABLE_REPOSITORY_ACTIONS_IN_ORG",
      "display": "Disablerepositoryactionsinorg",
      "desc": "Disables github actions for a specific repository within an organization; this action is only effect..."
    },
    {
      "name": "GITHUB_DISMISS_A_REVIEW_FOR_A_PULL_REQUEST",
      "display": "Dismiss a review for a pull request",
      "desc": "Dismisses a review on a pull request with a mandatory explanatory message."
    },
    {
      "name": "GITHUB_DOWNLOAD_AN_ARTIFACT",
      "display": "Download an artifact",
      "desc": "Downloads a specific github repository artifact, returning a temporary url to its 'zip' archive, val..."
    },
    {
      "name": "GITHUB_DOWNLOAD_A_REPOSITORY_ARCHIVE_TAR",
      "display": "Download a repository tarball",
      "desc": "Downloads a repository's source code as a tarball (.tar.gz) archive for a specific git reference, if..."
    },
    {
      "name": "GITHUB_DOWNLOAD_A_REPOSITORY_ARCHIVE_ZIP",
      "display": "Download a repository archive ZIP",
      "desc": "Downloads a repository's source code as a zip archive for a specific git reference (branch, tag, or ..."
    },
    {
      "name": "GITHUB_DOWNLOAD_JOB_LOGS_FOR_A_WORKFLOW_RUN",
      "display": "Download job logs for a workflow run",
      "desc": "Downloads logs for a specific job in a github actions workflow run, contingent on the repository's e..."
    },
    {
      "name": "GITHUB_DOWNLOAD_WORKFLOW_RUN_ATTEMPT_LOGS",
      "display": "Download workflow run attempt logs",
      "desc": "Downloads a zip archive of logs for a specific workflow run attempt."
    },
    {
      "name": "GITHUB_DOWNLOAD_WORKFLOW_RUN_LOGS",
      "display": "Download workflow run logs",
      "desc": "Downloads logs for a specific github actions workflow run, typically archived as a zip file, if logs..."
    },
    {
      "name": "GITHUB_EMO_J_IS_GET",
      "display": "Get emojis",
      "desc": "Lists all emojis available for use on github; deprecated, use `get emojis` instead."
    },
    {
      "name": "GITHUB_ENABLE_A_WORKFLOW",
      "display": "Enable a workflow",
      "desc": "Reactivates a currently disabled github actions workflow within a repository using its numerical id."
    },
    {
      "name": "GITHUB_ENABLE_GITHUB_ACTIONS_IN_SELECTED_REPOSITORIES",
      "display": "Enable GitHub actions in selected repositories",
      "desc": "Sets the specific repositories that can use github actions within an organization by replacing the c..."
    },
    {
      "name": "GITHUB_ENABLE_PRIVATE_VULNERABILITY_REPORTING_FOR_A_REPOSITORY",
      "display": "Enable private vulnerability reporting for a repository",
      "desc": "Enables private vulnerability reporting for a repository, allowing security researchers to privately..."
    },
    {
      "name": "GITHUB_ENABLE_REPO_FORGITHUB_ACTIONS",
      "display": "Enable repo for Github Actions",
      "desc": "Enables github actions for a repository if the organization's actions permissions are set to allow f..."
    },
    {
      "name": "GITHUB_ENCRYPT_AND_UPDATE_DEV_SECRET",
      "display": "Encrypt and update dev secret",
      "desc": "Creates or updates a repository's development environment secret using an `encrypted value` and its ..."
    },
    {
      "name": "GITHUB_ENCRYPT_ORG_DEV_ENV_SECRET",
      "display": "Encrypt org dev env secret",
      "desc": "Creates or updates an organization's github codespaces secret using an encrypted value and its corre..."
    },
    {
      "name": "GITHUB_ENCRYPT_ORG_SECRETS_USING_PUBLIC_KEY",
      "display": "Encrypt org secrets using public key",
      "desc": "Retrieves an organization's public key, which must be used to encrypt secret values before they are ..."
    },
    {
      "name": "GITHUB_EXPORT_A_CODESPACE_FOR_THE_AUTHENTICATED_USER",
      "display": "Export a codespace for the authenticated user",
      "desc": "Triggers an export of a user's specified codespace, automatically stopping it if active, and returns..."
    },
    {
      "name": "GITHUB_EXPORT_A_SOFTWARE_BILL_OF_MATERIALS_SBOM_FOR_A_REPOSITORY",
      "display": "Export an SBOM for a repository",
      "desc": "Exports the software bill of materials (sbom) in spdx json format for a repository, if its dependenc..."
    },
    {
      "name": "GITHUB_FETCH_PUBLIC_KEY_FOR_SECRET_ENCRYPTION",
      "display": "Fetchpublickeyforsecretencryption",
      "desc": "Retrieves the public key for an existing github organization, required for encrypting dependabot sec..."
    },
    {
      "name": "GITHUB_FIND_PULL_REQUESTS",
      "display": "Find Pull Requests",
      "desc": "Ai-optimized pull request search with smart filtering by repo, author, state, labels, and merge stat..."
    },
    {
      "name": "GITHUB_FIND_REPOSITORIES",
      "display": "Find Repositories",
      "desc": "Ai-optimized repository search with smart filtering by language, stars, topics, and ownership. build..."
    },
    {
      "name": "GITHUB_FOLLOW_A_USER",
      "display": "Follow a user",
      "desc": "Allows the authenticated user to follow the github user specified by `username`; this action is idem..."
    },
    {
      "name": "GITHUB_FORCE_CANCEL_A_WORKFLOW_RUN",
      "display": "Force cancel a workflow run",
      "desc": "Forcefully cancels an existing github actions workflow run, bypassing normal cancellation conditions..."
    },
    {
      "name": "GITHUB_FORK_A_GIST",
      "display": "Fork a gist",
      "desc": "Forks a specified public gist, creating a copy under the authenticated user's account."
    },
    {
      "name": "GITHUB_GENERATE_RELEASE_NOTES_CONTENT_FOR_A_RELEASE",
      "display": "Generate release notes content for a release",
      "desc": "Generates markdown release notes content (listing changes, pull requests, and contributors) for a gi..."
    },
    {
      "name": "GITHUB_GET_A_BLOB",
      "display": "Get a blob",
      "desc": "Retrieves the raw, typically base64-encoded, content of a file (blob) from a github repository using..."
    },
    {
      "name": "GITHUB_GET_A_BRANCH",
      "display": "Get a branch",
      "desc": "Retrieves detailed information for a specified branch within a github repository."
    },
    {
      "name": "GITHUB_GET_ACCESS_RESTRICTIONS",
      "display": "Get access restrictions",
      "desc": "Lists users, teams, and github apps with push access to a branch; this branch must be protected in r..."
    },
    {
      "name": "GITHUB_GET_A_CHECK_RUN",
      "display": "Get a check run",
      "desc": "Retrieves detailed information for a specific check run within a github repository."
    },
    {
      "name": "GITHUB_GET_A_CHECK_SUITE",
      "display": "Get a check suite",
      "desc": "Retrieves a specific check suite (a collection of check runs) by its id from a repository accessible..."
    },
    {
      "name": "GITHUB_GET_A_CLASSROOM",
      "display": "Get a classroom",
      "desc": "Retrieves details for a specific github classroom; the classroom id must correspond to an existing c..."
    },
    {
      "name": "GITHUB_GET_A_CODE_OF_CONDUCT",
      "display": "Get a code of conduct",
      "desc": "Retrieves the full details of a specific github code of conduct using its unique key."
    },
    {
      "name": "GITHUB_GET_A_CODE_QL_DATABASE_FOR_A_REPOSITORY",
      "display": "Get a CodeQL database for a repository",
      "desc": "Gets an existing codeql database (including a download url) for a specified language in an accessibl..."
    },
    {
      "name": "GITHUB_GET_A_CODE_SCANNING_ALERT",
      "display": "Get a code scanning alert",
      "desc": "Retrieves a specific code scanning alert, which identifies potential code vulnerabilities or errors,..."
    },
    {
      "name": "GITHUB_GET_A_CODE_SCANNING_ANALYSIS_FOR_A_REPOSITORY",
      "display": "Get a code scanning analysis for a repository",
      "desc": "Retrieves detailed information for a specific code scanning analysis on an accessible repository, id..."
    },
    {
      "name": "GITHUB_GET_A_CODE_SCANNING_DEFAULT_SETUP_CONFIGURATION",
      "display": "Get a code scanning default setup configuration",
      "desc": "Gets the default setup configuration for code scanning in a repository, including state, languages, ..."
    },
    {
      "name": "GITHUB_GET_A_CODESPACE_FOR_THE_AUTHENTICATED_USER",
      "display": "Get a codespace for the authenticated user",
      "desc": "Call to retrieve detailed information for a `codespace name` belonging to the authenticated user, en..."
    },
    {
      "name": "GITHUB_GET_A_COMMIT",
      "display": "Get a commit",
      "desc": "Retrieves a specific commit from a repository by its owner, name, and a valid commit reference (sha,..."
    },
    {
      "name": "GITHUB_GET_A_COMMIT_COMMENT",
      "display": "Get a commit comment",
      "desc": "Retrieves the full details of a specific commit comment in a github repository, using its unique ide..."
    },
    {
      "name": "GITHUB_GET_A_COMMIT_OBJECT",
      "display": "Get a commit object",
      "desc": "Retrieves detailed information (including author, committer, message, tree, parents, verification) f..."
    },
    {
      "name": "GITHUB_GET_A_CUSTOM_DEPLOYMENT_PROTECTION_RULE",
      "display": "Get a custom deployment protection rule",
      "desc": "Retrieves a specific custom deployment protection rule (used by github apps for external validation ..."
    },
    {
      "name": "GITHUB_GET_A_CUSTOM_PROPERTY_FOR_AN_ORGANIZATION",
      "display": "Get a custom property for an organization",
      "desc": "Retrieves the definition (schema) of a specific, existing custom property for an organization."
    },
    {
      "name": "GITHUB_GET_A_DELIVERY_FOR_A_REPOSITORY_WEBHOOK",
      "display": "Get a delivery for a repository webhook",
      "desc": "Retrieves a specific delivery for a repository webhook, identified by its `hook id` and `delivery id..."
    },
    {
      "name": "GITHUB_GET_A_DEPLOY_KEY",
      "display": "Get a deploy key",
      "desc": "Gets a specific deploy key, identified by its `key id`, for the github repository specified by `owne..."
    },
    {
      "name": "GITHUB_GET_A_DEPLOYMENT",
      "display": "Get a deployment",
      "desc": "Gets a specific deployment by id from a repository, provided the repository and deployment id exist."
    },
    {
      "name": "GITHUB_GET_A_DEPLOYMENT_BRANCH_POLICY",
      "display": "Get a deployment branch policy",
      "desc": "Retrieves a specific deployment branch policy for an environment in a repository, identified by its ..."
    },
    {
      "name": "GITHUB_GET_A_DEPLOYMENT_STATUS",
      "display": "Get a deployment status",
      "desc": "Retrieves a specific deployment status by its id for a given deployment within a github repository."
    },
    {
      "name": "GITHUB_GET_A_DIFF_OF_THE_DEPENDENCIES_BETWEEN_COMMITS",
      "display": "Get a diff of the dependencies between commits",
      "desc": "Gets the dependency diff between two git revisions in a repository, where 'basehead' specifies the r..."
    },
    {
      "name": "GITHUB_GET_A_DISCUSSION",
      "display": "Get a discussion",
      "desc": "Fetches a specific discussion by its number from a team within an organization."
    },
    {
      "name": "GITHUB_GET_A_DISCUSSION_COMMENT",
      "display": "Get a discussion comment",
      "desc": "Fetches a specific comment from a team discussion within a specific organization."
    },
    {
      "name": "GITHUB_GET_ADMIN_BRANCH_PROTECTION",
      "display": "Get admin branch protection",
      "desc": "Checks if repository administrators are subject to the branch protection rules on a specific branch."
    },
    {
      "name": "GITHUB_GET_A_DNS_HEALTH_CHECK_FOR_GITHUB_PAGES",
      "display": "Get a dns health check for github pages",
      "desc": "Retrieves the dns health check status (e.g., cname/a records, https) for a github pages site; the ch..."
    },
    {
      "name": "GITHUB_GET_A_GIST",
      "display": "Get a gist",
      "desc": "Fetches a specific github gist by its `gist id`, returning comprehensive details if the gist exists."
    },
    {
      "name": "GITHUB_GET_A_GIST_COMMENT",
      "display": "Get a gist comment",
      "desc": "Retrieves a specific gist comment by its id and the gist's id."
    },
    {
      "name": "GITHUB_GET_A_GIST_REVISION",
      "display": "Get a gist revision",
      "desc": "Retrieves a specific revision of a gist."
    },
    {
      "name": "GITHUB_GET_A_GITHUB_PAGES_SITE",
      "display": "Get a GitHub Pages site",
      "desc": "Retrieves information for a github pages site, which must be enabled for the repository."
    },
    {
      "name": "GITHUB_GET_A_GITIGNORE_TEMPLATE",
      "display": "Get a gitignore template",
      "desc": "Retrieves a specific .gitignore template from github by its name, which must be an existing template..."
    },
    {
      "name": "GITHUB_GET_A_JOB_FOR_A_WORKFLOW_RUN",
      "display": "Get a job for a workflow run",
      "desc": "Retrieves detailed information for a specific job within a github actions workflow run, given its `j..."
    },
    {
      "name": "GITHUB_GET_A_LABEL",
      "display": "Get a label",
      "desc": "Retrieves a specific label by its name from a specified github repository."
    },
    {
      "name": "GITHUB_GET_A_LICENSE",
      "display": "Get a license",
      "desc": "Call this action to retrieve comprehensive details for a specific software license recognized by git..."
    },
    {
      "name": "GITHUB_GET_ALL_API_VERSIONS",
      "display": "Get all API versions",
      "desc": "Retrieves all officially supported, date-based (e.g., \"2022-11-28\") versions of the github rest api ..."
    },
    {
      "name": "GITHUB_GET_ALL_AUTOLINKS_OF_A_REPOSITORY",
      "display": "Get all autolinks of a repository",
      "desc": "Retrieves all autolinks (e.g., for jira issues) configured for a repository; requires admin permissi..."
    },
    {
      "name": "GITHUB_GET_ALL_CODES_OF_CONDUCT",
      "display": "Get all codes of conduct",
      "desc": "Retrieves all available codes of conduct from github, often used to select one for a repository."
    },
    {
      "name": "GITHUB_GET_ALL_COMMONLY_USED_LICENSES",
      "display": "Get all commonly used licenses",
      "desc": "Retrieves a list of commonly used software licenses from github, optionally filtering for 'featured'..."
    },
    {
      "name": "GITHUB_GET_ALL_CONTRIBUTOR_COMMIT_ACTIVITY",
      "display": "Get all contributor commit activity",
      "desc": "Retrieves commit activity (total commits, weekly additions/deletions/commits) for all contributors t..."
    },
    {
      "name": "GITHUB_GET_ALL_CUSTOM_PROPERTIES_FOR_AN_ORGANIZATION",
      "display": "Get all custom properties for an organization",
      "desc": "Gets the schema definitions for all custom properties configured for an organization, not the specif..."
    },
    {
      "name": "GITHUB_GET_ALL_CUSTOM_PROPERTY_VALUES_FOR_A_REPOSITORY",
      "display": "Get all custom property values for a repository",
      "desc": "Gets all custom property values for a repository, which may include default values or be empty if no..."
    },
    {
      "name": "GITHUB_GET_ALL_DEPLOYMENT_PROTECTION_RULES_FOR_AN_ENVIRONMENT",
      "display": "Get all deployment protection rules for an environment",
      "desc": "Lists all enabled custom deployment protection rules for a specific environment in a repository; the..."
    },
    {
      "name": "GITHUB_GET_ALL_GITIGNORE_TEMPLATES",
      "display": "Get all gitignore templates",
      "desc": "Retrieves all available .gitignore template names from github (e.g., 'python', 'node', 'java'), used..."
    },
    {
      "name": "GITHUB_GET_ALL_ORGANIZATION_ROLES_FOR_AN_ORGANIZATION",
      "display": "Get all organization roles for an organization",
      "desc": "Lists all custom organization roles for an existing github organization."
    },
    {
      "name": "GITHUB_GET_ALL_REPOSITORY_RULESETS",
      "display": "Get all repository rulesets",
      "desc": "Retrieves all rulesets for a github repository, which define conditions and actions for repository i..."
    },
    {
      "name": "GITHUB_GET_ALL_REPOSITORY_TOPICS",
      "display": "Get all repository topics",
      "desc": "Retrieves all topics for a specified, existing, and accessible repository."
    },
    {
      "name": "GITHUB_GET_ALL_REQUESTED_REVIEWERS_FOR_A_PULL_REQUEST",
      "display": "Get all requested reviewers for a pull request",
      "desc": "Gets all users and teams requested to review a specific pull request in a repository."
    },
    {
      "name": "GITHUB_GET_ALL_STATUS_CHECK_CONTEXTS",
      "display": "Get all status check contexts",
      "desc": "Fetches all required status check contexts for a protected branch; returns an empty list if the bran..."
    },
    {
      "name": "GITHUB_GET_A_MILESTONE",
      "display": "Get a milestone",
      "desc": "Retrieves detailed information for a specific milestone within a github repository by its number."
    },
    {
      "name": "GITHUB_GET_AN_APP",
      "display": "Get an app",
      "desc": "Retrieves publicly available information for an existing github app, identified by its unique url-fr..."
    },
    {
      "name": "GITHUB_GET_AN_ARTIFACT",
      "display": "Get an artifact",
      "desc": "Gets a specific artifact for a repository by `artifact id`."
    },
    {
      "name": "GITHUB_GET_AN_ASSIGNMENT",
      "display": "Get an assignment",
      "desc": "Retrieves detailed information for a specific github classroom assignment if the authenticated user ..."
    },
    {
      "name": "GITHUB_GET_AN_AUTOLINK_REFERENCE_OF_A_REPOSITORY",
      "display": "Get an autolink reference of a repository",
      "desc": "Retrieves a specific autolink reference (which automatically hyperlinks text like 'jira-123' to an e..."
    },
    {
      "name": "GITHUB_GET_AN_ENVIRONMENT",
      "display": "Get an environment",
      "desc": "Get an environment"
    },
    {
      "name": "GITHUB_GET_AN_ENVIRONMENT_PUBLIC_KEY",
      "display": "Get an environment public key",
      "desc": "Retrieves the public key for a specified github repository environment, used to encrypt secrets for ..."
    },
    {
      "name": "GITHUB_GET_AN_ENVIRONMENT_SECRET",
      "display": "Get an environment secret",
      "desc": "Get an environment secret"
    },
    {
      "name": "GITHUB_GET_AN_ENVIRONMENT_VARIABLE",
      "display": "Get an environment variable",
      "desc": "Get an environment variable"
    },
    {
      "name": "GITHUB_GET_AN_ISSUE",
      "display": "Get an issue",
      "desc": "Get an issue"
    },
    {
      "name": "GITHUB_GET_AN_ISSUE_COMMENT",
      "display": "Get an issue comment",
      "desc": "Get an issue comment"
    },
    {
      "name": "GITHUB_GET_AN_ISSUE_EVENT",
      "display": "Get an issue event",
      "desc": "Get an issue event"
    },
    {
      "name": "GITHUB_GET_AN_ORGANIZATION",
      "display": "Get an organization",
      "desc": "Get an organization"
    },
    {
      "name": "GITHUB_GET_AN_ORGANIZATION_PUBLIC_KEY",
      "display": "Get an organization public key",
      "desc": "Get an organization public key"
    },
    {
      "name": "GITHUB_GET_AN_ORGANIZATION_ROLE",
      "display": "Get an organization role",
      "desc": "Retrieves a specific github organization role by its id."
    },
    {
      "name": "GITHUB_GET_AN_ORGANIZATION_SECRET",
      "display": "Get an organization secret",
      "desc": "Gets an organization secret's metadata (e.g., name, creation/update dates, visibility), but not its ..."
    },
    {
      "name": "GITHUB_GET_AN_ORGANIZATION_VARIABLE",
      "display": "Get an organization variable",
      "desc": "Retrieves details (name, value, visibility, timestamps) of a specific, existing variable for an exis..."
    },
    {
      "name": "GITHUB_GET_AN_ORGANIZATION_WEBHOOK",
      "display": "Get an organization webhook",
      "desc": "Retrieves the full configuration, including subscribed events and delivery settings, for an existing..."
    },
    {
      "name": "GITHUB_GET_A_PACKAGE_FOR_AN_ORGANIZATION",
      "display": "Get a package for an organization",
      "desc": "Retrieves a specific package (by type and name) from an organization, if both the package and organi..."
    },
    {
      "name": "GITHUB_GET_A_PACKAGE_FOR_A_USER",
      "display": "Get a package for a user",
      "desc": "Retrieves metadata for a specific package owned by a github user, using package type, name, and user..."
    },
    {
      "name": "GITHUB_GET_A_PACKAGE_FOR_THE_AUTHENTICATED_USER",
      "display": "Get a package for the authenticated user",
      "desc": "Retrieves detailed information for a specific package owned by the authenticated user."
    },
    {
      "name": "GITHUB_GET_A_PACKAGE_VERSION_FOR_AN_ORGANIZATION",
      "display": "Get a package version for an organization",
      "desc": "Retrieves detailed information for a specific version of a package within an organization."
    },
    {
      "name": "GITHUB_GET_A_PACKAGE_VERSION_FOR_A_USER",
      "display": "Get a package version for a user",
      "desc": "Retrieves a specific public package version associated with a github user."
    },
    {
      "name": "GITHUB_GET_A_PACKAGE_VERSION_FOR_THE_AUTHENTICATED_USER",
      "display": "Get authenticated user package version",
      "desc": "Retrieves detailed information for an existing specific package version associated with the authenti..."
    },
    {
      "name": "GITHUB_GET_APPS_WITH_ACCESS_TO_THE_PROTECTED_BRANCH",
      "display": "Get apps with access to the protected branch",
      "desc": "Lists github apps with push access to a repository's protected branch."
    },
    {
      "name": "GITHUB_GET_A_PROJECT",
      "display": "Get a project",
      "desc": "Retrieves detailed information for a specific github project using its unique `project id`."
    },
    {
      "name": "GITHUB_GET_A_PROJECT_CARD",
      "display": "Get a project card",
      "desc": "Retrieves all details of a specific project card, given its unique `card id`."
    },
    {
      "name": "GITHUB_GET_A_PROJECT_COLUMN",
      "display": "Get a project column",
      "desc": "Retrieves detailed information for a specific project column; the column must exist."
    },
    {
      "name": "GITHUB_GET_A_PULL_REQUEST",
      "display": "Get a pull request",
      "desc": "Retrieves a specific pull request from a github repository using its owner, repository name, and pul..."
    },
    {
      "name": "GITHUB_GET_A_REFERENCE",
      "display": "Get a reference",
      "desc": "Retrieves a specific git reference (e.g., a branch, tag, or fully qualified like 'heads/main') from ..."
    },
    {
      "name": "GITHUB_GET_A_RELEASE",
      "display": "Get a release",
      "desc": "Gets a specific release from a github repository, provided the repository is accessible and the rele..."
    },
    {
      "name": "GITHUB_GET_A_RELEASE_ASSET",
      "display": "Get a release asset",
      "desc": "Gets metadata for a specific release asset in a github repository, including a `browser download url..."
    },
    {
      "name": "GITHUB_GET_A_RELEASE_BY_TAG_NAME",
      "display": "Get a release by tag name",
      "desc": "Gets a release from a github repository by its tag name; the repository and a release with this tag ..."
    },
    {
      "name": "GITHUB_GET_A_REPOSITORY",
      "display": "Get a repository",
      "desc": "Retrieves detailed information about an existing and accessible github repository."
    },
    {
      "name": "GITHUB_GET_A_REPOSITORY_PUBLIC_KEY",
      "display": "Get a repository public key",
      "desc": "Gets a repository's public key for encrypting secrets to be used in github actions, if the repositor..."
    },
    {
      "name": "GITHUB_GET_A_REPOSITORY_README",
      "display": "Get a repository readme",
      "desc": "Fetches the readme file (if it exists and is accessible) from a specified github repository, returni..."
    },
    {
      "name": "GITHUB_GET_A_REPOSITORY_README_FOR_A_DIRECTORY",
      "display": "Get a repository readme for a directory",
      "desc": "Retrieves the readme file from a specified directory within a github repository, optionally at a giv..."
    },
    {
      "name": "GITHUB_GET_A_REPOSITORY_RULESET",
      "display": "Get a repository ruleset",
      "desc": "Retrieves a specific repository ruleset by its id; if `includes parents` is true, the search for thi..."
    },
    {
      "name": "GITHUB_GET_A_REPOSITORY_RULE_SUITE",
      "display": "Get a repository rule suite",
      "desc": "Gets detailed information for a specific repository rule suite by its id, including its evaluation s..."
    },
    {
      "name": "GITHUB_GET_A_REPOSITORY_SECRET",
      "display": "Get a repository secret",
      "desc": "Gets metadata (name, creation/update timestamps) for an existing repository secret, excluding its en..."
    },
    {
      "name": "GITHUB_GET_A_REPOSITORY_SUBSCRIPTION",
      "display": "Get a repository subscription",
      "desc": "Gets the authenticated user's subscription details for a repository, indicating if they receive noti..."
    },
    {
      "name": "GITHUB_GET_A_REPOSITORY_VARIABLE",
      "display": "Get a repository variable",
      "desc": "Gets a specific github actions variable by name from an accessible repository."
    },
    {
      "name": "GITHUB_GET_A_REPOSITORY_WEBHOOK",
      "display": "Get a repository webhook",
      "desc": "Returns the configuration of an existing webhook for a given repository."
    },
    {
      "name": "GITHUB_GET_A_REVIEW_COMMENT_FOR_A_PULL_REQUEST",
      "display": "Get a review comment for a pull request",
      "desc": "Retrieves a specific pull request review comment by its id, provided the repository exists, is acces..."
    },
    {
      "name": "GITHUB_GET_A_REVIEW_FOR_A_PULL_REQUEST",
      "display": "Get a review for a pull request",
      "desc": "Retrieves a specific review for a pull request using its owner, repository, pull request number, and..."
    },
    {
      "name": "GITHUB_GET_A_SECRET_FOR_THE_AUTHENTICATED_USER",
      "display": "Get a secret for the authenticated user",
      "desc": "Retrieves metadata (name, timestamps, visibility; not the value) for a specific, existing developmen..."
    },
    {
      "name": "GITHUB_GET_A_SELF_HOSTED_RUNNER_FOR_AN_ORGANIZATION",
      "display": "Get a self hosted runner for an organization",
      "desc": "Retrieves detailed information about a specific self-hosted runner registered within a github organi..."
    },
    {
      "name": "GITHUB_GET_A_SELF_HOSTED_RUNNER_FOR_A_REPOSITORY",
      "display": "Get a self hosted runner for a repository",
      "desc": "Gets a specific self-hosted runner for a repository by its unique id."
    },
    {
      "name": "GITHUB_GET_ASSIGNMENT_GRADES",
      "display": "Get assignment grades",
      "desc": "Retrieves all grades for an existing github classroom assignment."
    },
    {
      "name": "GITHUB_GET_A_TAG",
      "display": "Get a tag",
      "desc": "Retrieves detailed information for a specific git tag object from a github repository, using the sha..."
    },
    {
      "name": "GITHUB_GET_A_TEAM_BY_NAME",
      "display": "Get a team by name",
      "desc": "Retrieves a github team by its slug from a specific organization."
    },
    {
      "name": "GITHUB_GET_A_THREAD",
      "display": "Get a thread",
      "desc": "Retrieves a specific github notification thread using its unique `thread id`."
    },
    {
      "name": "GITHUB_GET_A_THREAD_SUBSCRIPTION_FOR_THE_AUTHENTICATED_USER",
      "display": "Get a thread subscription for the authenticated user",
      "desc": "Retrieves the authenticated user's subscription details for a specific notification thread, identifi..."
    },
    {
      "name": "GITHUB_GET_A_TREE",
      "display": "Get a tree",
      "desc": "Retrieves a git tree (directory listing) from a github repository using its sha, branch name, or tag..."
    },
    {
      "name": "GITHUB_GET_A_USER",
      "display": "Get a user",
      "desc": "Retrieves the public profile information for an existing github user, specified by their username."
    },
    {
      "name": "GITHUB_GET_A_WEBHOOK_CONFIGURATION_FOR_AN_ORGANIZATION",
      "display": "Get a webhook configuration for an organization",
      "desc": "Retrieves the configuration for a specific webhook associated with a github organization."
    },
    {
      "name": "GITHUB_GET_A_WEBHOOK_CONFIGURATION_FOR_A_REPOSITORY",
      "display": "Get a webhook configuration for a repository",
      "desc": "Returns the configuration for an existing webhook on the specified repository."
    },
    {
      "name": "GITHUB_GET_A_WEBHOOK_DELIVERY_FOR_AN_ORGANIZATION_WEBHOOK",
      "display": "Get a webhook delivery for an organization webhook",
      "desc": "Returns detailed information for a specific delivery attempt of a webhook configured for the specifi..."
    },
    {
      "name": "GITHUB_GET_A_WORKFLOW",
      "display": "Get a workflow",
      "desc": "Retrieves detailed information for a specific github actions workflow in a repository, identified by..."
    },
    {
      "name": "GITHUB_GET_A_WORKFLOW_RUN",
      "display": "Get a workflow run",
      "desc": "Gets a specific workflow run by its id from a github repository."
    },
    {
      "name": "GITHUB_GET_A_WORKFLOW_RUN_ATTEMPT",
      "display": "Get a workflow run attempt",
      "desc": "Retrieves detailed information for a specific attempt of a workflow run in a github repository, incl..."
    },
    {
      "name": "GITHUB_GET_BRANCH_PROTECTION",
      "display": "Get branch protection",
      "desc": "Retrieves branch protection settings for a specific, existing, and accessible branch in a github rep..."
    },
    {
      "name": "GITHUB_GET_COMMIT_AUTHORS",
      "display": "Get commit authors",
      "desc": "Fetches commit authors identified during a repository import, used to map authors from an external v..."
    },
    {
      "name": "GITHUB_GET_COMMIT_SIGNATURE_PROTECTION",
      "display": "Get commit signature protection",
      "desc": "Gets the commit signature protection status for a branch in a repository."
    },
    {
      "name": "GITHUB_GET_COMMUNITY_PROFILE_METRICS",
      "display": "Get community profile metrics",
      "desc": "Retrieves a repository's community profile metrics, including health percentage and the presence of ..."
    },
    {
      "name": "GITHUB_GET_CONTEXTUAL_INFORMATION_FOR_A_USER",
      "display": "Get contextual information for a user",
      "desc": "Gets contextual hovercard information for a github user; `subject type` and `subject id` can be join..."
    },
    {
      "name": "GITHUB_GET_DEFAULT_ATTRIBUTES_FOR_A_CODESPACE",
      "display": "Get default attributes for a codespace",
      "desc": "Get pre-flight data (e.g., default location, devcontainer path) for creating a codespace in a given ..."
    },
    {
      "name": "GITHUB_GET_DEFAULT_WORKFLOW_PERMISSIONS_FOR_AN_ORGANIZATION",
      "display": "Get default workflow permissions for an organization",
      "desc": "Gets the default github token workflow permissions and settings for a github organization."
    },
    {
      "name": "GITHUB_GET_DEFAULT_WORKFLOW_PERMISSIONS_FOR_A_REPOSITORY",
      "display": "Get default workflow permissions for a repository",
      "desc": "Gets the default workflow permissions (`read` or `write`) for the github token and whether it can ap..."
    },
    {
      "name": "GITHUB_GET_DETAILS_ABOUT_A_CODESPACE_EXPORT",
      "display": "Get details about a codespace export",
      "desc": "Retrieves detailed information about a specific export of a codespace."
    },
    {
      "name": "GITHUB_GET_EMOJIS",
      "display": "Get emojis",
      "desc": "Lists all emojis available for use on github, including custom and unicode emojis."
    },
    {
      "name": "GITHUB_GET_FEEDS",
      "display": "Get feeds",
      "desc": "Fetches a list of available github feed urls for the authenticated user."
    },
    {
      "name": "GITHUB_GET_GITHUB_ACTIONS_CACHE_USAGE_FOR_AN_ORGANIZATION",
      "display": "Get GitHub Actions cache usage for an organization",
      "desc": "Retrieves total github actions cache usage statistics for an organization, including active cache co..."
    },
    {
      "name": "GITHUB_GET_GITHUB_ACTIONS_CACHE_USAGE_FOR_A_REPOSITORY",
      "display": "Get github actions cache usage for a repository",
      "desc": "Retrieves the total count of active github actions caches and their combined size in bytes for a spe..."
    },
    {
      "name": "GITHUB_GET_GITHUB_ACTIONS_PERMISSIONS_FOR_AN_ORGANIZATION",
      "display": "Get github actions permissions for an organization",
      "desc": "Gets the github actions permissions for a specified organization, detailing repository enablement an..."
    },
    {
      "name": "GITHUB_GET_GITHUB_ACTIONS_PERMISSIONS_FOR_A_REPOSITORY",
      "display": "Get GitHub Actions permissions for a repository",
      "desc": "Gets the github actions permissions policy for a repository, including its enabled status and the sc..."
    },
    {
      "name": "GITHUB_GET_GITHUB_META_INFORMATION",
      "display": "Get github meta information",
      "desc": "Fetches github's publicly available metadata, useful for configuring network security policies or ip..."
    },
    {
      "name": "GITHUB_GET_GITHUB_PAGES_BUILD",
      "display": "Get github pages build",
      "desc": "Retrieves detailed information about a specific github pages build for a repository, which must have..."
    },
    {
      "name": "GITHUB_GET_INFORMATION_ABOUT_A_SARIF_UPLOAD",
      "display": "Get information about a sarif upload",
      "desc": "Retrieves detailed information, including processing status and results url, about a specific sarif ..."
    },
    {
      "name": "GITHUB_GET_INTERACTION_RESTRICTIONS_FOR_AN_ORGANIZATION",
      "display": "Get interaction restrictions for an organization",
      "desc": "Retrieves interaction restrictions for an organization, showing which github user types can interact..."
    },
    {
      "name": "GITHUB_GET_INTERACTION_RESTRICTIONS_FOR_A_REPOSITORY",
      "display": "Get interaction restrictions for a repository",
      "desc": "Retrieves active interaction restrictions for a repository, detailing which user groups are limited ..."
    },
    {
      "name": "GITHUB_GET_INTERACTION_RESTRICTIONS_FOR_YOUR_PUBLIC_REPOSITORIES",
      "display": "Get interaction restrictions for public repositories",
      "desc": "Retrieves currently active interaction restrictions for the authenticated user's public repositories..."
    },
    {
      "name": "GITHUB_GET_LARGE_FILES",
      "display": "Get large files",
      "desc": "Lists files larger than 100mb identified during a previous source import for the specified repositor..."
    },
    {
      "name": "GITHUB_GET_LATEST_PAGES_BUILD",
      "display": "Get latest pages build",
      "desc": "Retrieves information about the most recent github pages build for a repository, which must exist, b..."
    },
    {
      "name": "GITHUB_GET_OCTOCAT",
      "display": "Get octocat",
      "desc": "Fetches an ascii art representation of github's octocat, suitable for text-based displays."
    },
    {
      "name": "GITHUB_GET_ORG_ALLOWED_ACTIONS",
      "display": "Get allowed actions and workflows for an org",
      "desc": "Retrieves the github actions permissions policy, including allowed actions and reusable workflows, f..."
    },
    {
      "name": "GITHUB_GET_ORG_DEV_ENVIRONMENT_SECRET_SAFELY",
      "display": "Get org dev environment secret safely",
      "desc": "Retrieves metadata for a specific secret available to an organization's github codespaces without ex..."
    },
    {
      "name": "GITHUB_GET_PAGE_VIEWS",
      "display": "Get page views",
      "desc": "Retrieves page view statistics for a repository over the last 14 days, including total views, unique..."
    },
    {
      "name": "GITHUB_GET_PENDING_DEPLOYMENTS_FOR_A_WORKFLOW_RUN",
      "display": "Get pending deployments for a workflow run",
      "desc": "Retrieves pending deployment environments for a specific workflow run that are awaiting approval due..."
    },
    {
      "name": "GITHUB_GET_PROJECT_PERMISSION_FOR_A_USER",
      "display": "Get project permission for a user",
      "desc": "Retrieves a collaborator's permission level (admin, write, read, or none) for an existing github pro..."
    },
    {
      "name": "GITHUB_GET_PUBLIC_KEY_FOR_SECRET_ENCRYPTION",
      "display": "Get public key for secret encryption",
      "desc": "Retrieves a repository's public key for encrypting github codespaces secrets; requires `repo` scope ..."
    },
    {
      "name": "GITHUB_GET_PUBLIC_KEY_FOR_THE_AUTHENTICATED_USER",
      "display": "Get public key for the authenticated user",
      "desc": "Retrieves the authenticated user's public github key, used to encrypt secrets for github codespaces."
    },
    {
      "name": "GITHUB_GET_PULL_REQUEST_REVIEW_PROTECTION",
      "display": "Get pull request review protection",
      "desc": "Retrieves the pull request review protection settings for a specific branch in a github repository, ..."
    },
    {
      "name": "GITHUB_GET_RATE_LIMIT_STATUS_FOR_THE_AUTHENTICATED_USER",
      "display": "Get rate limit status for the authenticated user",
      "desc": "Retrieves the authenticated user's current github api rate limit status, including usage and limits ..."
    },
    {
      "name": "GITHUB_GET_REPO_DEV_ENV_SECRET",
      "display": "Get repository development environment secret",
      "desc": "Gets metadata (name, creation/update timestamps) for a specific, existing development environment se..."
    },
    {
      "name": "GITHUB_GET_REPOSITORY_CLONES",
      "display": "Get repository clones",
      "desc": "Retrieves the total number of clones and a breakdown of clone activity (daily or weekly) for a speci..."
    },
    {
      "name": "GITHUB_GET_REPOSITORY_CONTENT",
      "display": "Get repository content",
      "desc": "Retrieves a file's base64 encoded content or a directory's metadata (but not a listing of its conten..."
    },
    {
      "name": "GITHUB_GET_REPOSITORY_PERMISSIONS_FOR_A_USER",
      "display": "Get repository permissions for a user",
      "desc": "Retrieves a specific user's permission level ('admin', 'write', 'read', or 'none') for a given repos..."
    },
    {
      "name": "GITHUB_GET_REPOSITORY_SECRET_SECURELY",
      "display": "Get repository secret securely",
      "desc": "Retrieves metadata for an existing dependabot secret in a repository, without exposing its encrypted..."
    },
    {
      "name": "GITHUB_GET_RULES_FOR_A_BRANCH",
      "display": "Get rules for a branch",
      "desc": "Retrieves all active rules for a specific branch in a github repository, excluding rules in 'evaluat..."
    },
    {
      "name": "GITHUB_GET_SINGLE_ORG_SECRET_WITHOUT_DECRYPTION",
      "display": "Get single org secret without decryption",
      "desc": "Retrieves metadata (e.g., name, creation/update timestamps, visibility) for an organization's depend..."
    },
    {
      "name": "GITHUB_GET_STATUS_CHECKS_PROTECTION",
      "display": "Get status checks protection",
      "desc": "Retrieves the status check protection settings for a specific branch in a github repository, if stat..."
    },
    {
      "name": "GITHUB_GET_TEAM_MEMBERSHIP_FOR_A_USER",
      "display": "Get team membership for a user",
      "desc": "Retrieves a user's role and membership status within a specific team in an organization."
    },
    {
      "name": "GITHUB_GET_TEAMS_WITH_ACCESS_TO_THE_PROTECTED_BRANCH",
      "display": "Get teams with access to the protected branch",
      "desc": "Lists teams with explicit push access to a protected branch, provided team restrictions are configur..."
    },
    {
      "name": "GITHUB_GET_THE_AUTHENTICATED_USER",
      "display": "Get the authenticated user",
      "desc": "Gets the profile information for the currently authenticated github user, including potentially priv..."
    },
    {
      "name": "GITHUB_GET_THE_COMBINED_STATUS_FOR_A_SPECIFIC_REFERENCE",
      "display": "Get the combined status for a specific reference",
      "desc": "Retrieves the aggregated commit status (e.g., success, failure, pending) from all checks for a speci..."
    },
    {
      "name": "GITHUB_GET_THE_HOURLY_COMMIT_COUNT_FOR_EACH_DAY",
      "display": "Get the hourly commit count for each day",
      "desc": "Retrieves the 'punch card' data, showing hourly commit counts for each day of the week for an existi..."
    },
    {
      "name": "GITHUB_GET_THE_LAST_YEAR_OF_COMMIT_ACTIVITY",
      "display": "Get the last year of commit activity",
      "desc": "Fetches weekly commit totals and daily commit counts for the last 52 weeks for a specified github re..."
    },
    {
      "name": "GITHUB_GET_THE_LATEST_RELEASE",
      "display": "Get the latest release",
      "desc": "Fetches the latest official (non-prerelease, non-draft) release for a github repository; requires at..."
    },
    {
      "name": "GITHUB_GET_THE_LICENSE_FOR_A_REPOSITORY",
      "display": "Get the license for a repository",
      "desc": "Retrieves the license file and its details for a repository, optionally from a specific git referenc..."
    },
    {
      "name": "GITHUB_GET_THE_REVIEW_HISTORY_FOR_A_WORKFLOW_RUN",
      "display": "Get the review history for a workflow run",
      "desc": "Retrieves the detailed approval history for a specific workflow run in a github repository, detailin..."
    },
    {
      "name": "GITHUB_GET_THE_STATUS_OF_A_GITHUB_PAGES_DEPLOYMENT",
      "display": "Get the status of a GitHub Pages deployment",
      "desc": "Retrieves the status of a specific github pages deployment for a repository, which must have github ..."
    },
    {
      "name": "GITHUB_GET_THE_WEEKLY_COMMIT_ACTIVITY",
      "display": "Get the weekly commit activity",
      "desc": "Fetches the weekly commit activity (additions and deletions per week) for a repository over the past..."
    },
    {
      "name": "GITHUB_GET_THE_WEEKLY_COMMIT_COUNT",
      "display": "Get the weekly commit count",
      "desc": "Retrieves the weekly commit count for a repository, detailing commits by the owner and all contribut..."
    },
    {
      "name": "GITHUB_GET_THE_ZEN_OF_GITHUB",
      "display": "Get the zen of github",
      "desc": "Retrieves a random quote from github's 'zen of github' collection, reflecting github's design philos..."
    },
    {
      "name": "GITHUB_GET_TOP_REFERRAL_PATHS",
      "display": "Get top referral paths",
      "desc": "Fetches the top 10 most viewed content paths for a repository from the last 14 days."
    },
    {
      "name": "GITHUB_GET_TOP_REFERRAL_SOURCES",
      "display": "Get top referral sources",
      "desc": "Fetches the top 10 websites that referred traffic to a repository within the last 14 days."
    },
    {
      "name": "GITHUB_GET_USERS_WITH_ACCESS_TO_THE_PROTECTED_BRANCH",
      "display": "Get users with access to the protected branch",
      "desc": "Lists users with explicit push access to a protected branch, provided its protection rule restricts ..."
    },
    {
      "name": "GITHUB_GET_WORKFLOW_EXTERNAL_ACCESS",
      "display": "Get workflow external access level",
      "desc": "Gets the access level settings for a private repository, determining how workflows outside this repo..."
    },
    {
      "name": "GITHUB_GET_WORKFLOW_RUN_USAGE",
      "display": "Get workflow run usage",
      "desc": "Gets the billable time, in milliseconds, for a specific workflow run, detailing time spent on variou..."
    },
    {
      "name": "GITHUB_GET_WORKFLOW_USAGE",
      "display": "Get workflow usage",
      "desc": "Gets the billable time (in milliseconds, broken down by runner os) for a specific workflow within a ..."
    },
    {
      "name": "GITHUB_GIST_S_CREATE",
      "display": "Create a gist",
      "desc": "Deprecated: use `create a gist` instead. creates a new github gist with specified files, content, an..."
    },
    {
      "name": "GITHUB_GIST_S_LIST_PUBLIC",
      "display": "List public gists",
      "desc": "(deprecated: use `list public gists` instead) lists public gists from github, optionally filtering b..."
    },
    {
      "name": "GITHUB_GITHUB_API_ROOT",
      "display": "Get GitHub API root",
      "desc": "Retrieves a map of all top-level github rest api resource urls and their templates."
    },
    {
      "name": "GITHUB_GITHUB_GET_REPO_ALLOWED_ACTIONS",
      "display": "Get allowed actions and workflows for a repository",
      "desc": "Gets the settings for allowed actions and reusable workflows that can be run in the specified reposi..."
    },
    {
      "name": "GITHUB_GITHUB_SET_REPO_RUNNER_LABELS",
      "display": "Set custom labels for repo runner",
      "desc": "Replaces all custom labels for a specific self-hosted runner in a repository; an empty list for `lab..."
    },
    {
      "name": "GITHUB_ISSUES_CREATE",
      "display": "Create an issue",
      "desc": "(deprecated: use `create an issue` instead) creates a new issue in a github repository, provided iss..."
    },
    {
      "name": "GITHUB_ISSUES_CREATE_COMMENT",
      "display": "Create an issue comment",
      "desc": "Deprecated: use `create an issue comment` to create a comment on an existing github issue or pull re..."
    },
    {
      "name": "GITHUB_ISSUES_GET",
      "display": "Get an issue",
      "desc": "Deprecated: use the `get an issue` action instead to retrieve details for a specific issue in a repo..."
    },
    {
      "name": "GITHUB_ISSUES_LIST_ASSIGN_EES",
      "display": "List assignees",
      "desc": "Deprecated: use `list assignees`. lists users who can be assigned to issues in a repository, typical..."
    },
    {
      "name": "GITHUB_ISSUES_LIST_EVENTS_FOR_REPO",
      "display": "List issue events for a repository",
      "desc": "Lists all issue events for a specified repository. <<deprecated: this action is deprecated. use `lis..."
    },
    {
      "name": "GITHUB_ISSUES_LIST_FOR_REPO",
      "display": "List repository issues",
      "desc": "Lists all issues (including pull requests) in a github repository; deprecated: use list repository i..."
    },
    {
      "name": "GITHUB_LIST_ACCEPTED_ASSIGNMENTS_FOR_AN_ASSIGNMENT",
      "display": "List accepted assignments for an assignment",
      "desc": "Lists accepted assignments (student repositories created after acceptance) for an existing github cl..."
    },
    {
      "name": "GITHUB_LIST_APP_INSTALLATIONS_ACCESSIBLE_TO_THE_USER_ACCESS_TOKEN",
      "display": "List app installations for user token",
      "desc": "Lists github app installations accessible to the authenticated user via their access token, includin..."
    },
    {
      "name": "GITHUB_LIST_ARTIFACTS_FOR_A_REPOSITORY",
      "display": "List artifacts for a repository",
      "desc": "Lists github actions workflow artifacts for a specified repository, which must exist."
    },
    {
      "name": "GITHUB_LIST_ASSIGNED_ISSUES",
      "display": "List assigned issues for authenticated user",
      "desc": "Lists github issues for the authenticated user, defaulting to 'assigned' but filterable by other int..."
    },
    {
      "name": "GITHUB_LIST_ASSIGNEES",
      "display": "List assignees",
      "desc": "Lists users who can be assigned to issues in a repository, typically those with push access."
    },
    {
      "name": "GITHUB_LIST_ASSIGNMENTS_FOR_A_CLASSROOM",
      "display": "List assignments for a classroom",
      "desc": "Lists all assignments for a given github classroom `classroom id`; the classroom must exist and be a..."
    },
    {
      "name": "GITHUB_LIST_AVAILABLE_MACHINE_TYPES_FOR_A_REPOSITORY",
      "display": "List available machine types for a repository",
      "desc": "Lists machine types available for github codespaces in a repository, optionally using a git ref to c..."
    },
    {
      "name": "GITHUB_LIST_BRANCHES",
      "display": "List branches",
      "desc": "Lists branches for an existing github repository, with an option to filter by protection status."
    },
    {
      "name": "GITHUB_LIST_BRANCHES_FOR_HEAD_COMMIT",
      "display": "List branches for head commit",
      "desc": "Lists branches in an accessible repository where the provided commit sha is the head, useful for ide..."
    },
    {
      "name": "GITHUB_LIST_CHECK_RUN_ANNOTATIONS",
      "display": "List check run annotations",
      "desc": "Lists annotations for a specific check run in a github repository, detailing issues like errors or w..."
    },
    {
      "name": "GITHUB_LIST_CHECK_RUNS_FOR_A_GIT_REFERENCE",
      "display": "List check runs for a git reference",
      "desc": "Lists check runs for a given git reference within a repository; ensure the reference exists and the ..."
    },
    {
      "name": "GITHUB_LIST_CHECK_RUNS_IN_A_CHECK_SUITE",
      "display": "List check runs in a check suite",
      "desc": "Lists check runs for a specific check suite in a github repository, optionally filtering by check na..."
    },
    {
      "name": "GITHUB_LIST_CHECK_SUITES_FOR_A_GIT_REFERENCE",
      "display": "List check suites for a git reference",
      "desc": "Lists check suites for a git reference (commit sha, branch, or tag) in a repository, optionally filt..."
    },
    {
      "name": "GITHUB_LIST_CHILD_TEAMS",
      "display": "List child teams",
      "desc": "Lists the immediate child teams of a parent team within an organization."
    },
    {
      "name": "GITHUB_LIST_CLASSROOMS",
      "display": "List classrooms",
      "desc": "Lists github classrooms to which the authenticated user has administrative access."
    },
    {
      "name": "GITHUB_LIST_CODEOWNERS_ERRORS",
      "display": "List codeowners errors",
      "desc": "Lists syntax errors in a repository's codeowners file, which must be located at the root, `.github/`..."
    },
    {
      "name": "GITHUB_LIST_CODE_QL_DATABASES_FOR_A_REPOSITORY",
      "display": "List CodeQL databases for a repository",
      "desc": "Lists all codeql databases for a repository where codeql analysis has been previously run and comple..."
    },
    {
      "name": "GITHUB_LIST_CODE_SCANNING_ALERTS_FOR_AN_ORGANIZATION",
      "display": "List code scanning alerts for an organization",
      "desc": "Lists code scanning alerts for a github organization; use either `tool name` or `tool guid` if filte..."
    },
    {
      "name": "GITHUB_LIST_CODE_SCANNING_ALERTS_FOR_A_REPOSITORY",
      "display": "List code scanning alerts for a repository",
      "desc": "Lists code scanning alerts for a repository, optionally filtering by tool (which must have produced ..."
    },
    {
      "name": "GITHUB_LIST_CODE_SCANNING_ANALYSES_FOR_A_REPOSITORY",
      "display": "List code scanning analyses for a repository",
      "desc": "Lists code scanning analyses for an existing repository, optionally filtering by tool (name or guid)..."
    },
    {
      "name": "GITHUB_LIST_CODESPACES_FOR_A_USER_IN_ORGANIZATION",
      "display": "List codespaces for a user in organization",
      "desc": "Lists all github codespaces owned by a specified member of a given organization."
    },
    {
      "name": "GITHUB_LIST_CODESPACES_FOR_THE_AUTHENTICATED_USER",
      "display": "List codespaces for the authenticated user",
      "desc": "Lists github codespaces for the authenticated user, optionally filtering by repository id and suppor..."
    },
    {
      "name": "GITHUB_LIST_CODESPACES_FOR_THE_ORGANIZATION",
      "display": "List codespaces for the organization",
      "desc": "Lists active/pending github codespaces for an existing organization; admins list all, members list t..."
    },
    {
      "name": "GITHUB_LIST_COMMENTS_FOR_A_PULL_REQUEST_REVIEW",
      "display": "List comments for a pull request review",
      "desc": "Lists all comments for a specific review on a github pull request."
    },
    {
      "name": "GITHUB_LIST_COMMIT_COMMENTS",
      "display": "List commit comments",
      "desc": "Retrieves all comments for a specific commit in a github repository, supporting pagination."
    },
    {
      "name": "GITHUB_LIST_COMMIT_COMMENTS_FOR_A_REPOSITORY",
      "display": "List commit comments for a repository",
      "desc": "Lists all commit comments for a specified repository, which must exist and be accessible."
    },
    {
      "name": "GITHUB_LIST_COMMITS",
      "display": "List commits",
      "desc": "Retrieves commits for a repository, optionally filtering by sha (must be valid commit sha or existin..."
    },
    {
      "name": "GITHUB_LIST_COMMITS_ON_A_PULL_REQUEST",
      "display": "List commits on a pull request",
      "desc": "Lists commits for a pull request; requires the repository and pull request to exist and be accessibl..."
    },
    {
      "name": "GITHUB_LIST_COMMIT_STATUSES_FOR_A_REFERENCE",
      "display": "List commit statuses for a reference",
      "desc": "Lists commit statuses for a specific reference (commit sha, branch, or tag) in a repository, useful ..."
    },
    {
      "name": "GITHUB_LIST_CUSTOM_PROPERTY_VALUES_FOR_ORGANIZATION_REPOSITORIES",
      "display": "List custom property values for organization repositories",
      "desc": "Lists custom property values for repositories in a specified, existing organization, optionally filt..."
    },
    {
      "name": "GITHUB_LIST_DELIVERIES_FOR_AN_ORGANIZATION_WEBHOOK",
      "display": "List deliveries for an organization webhook",
      "desc": "Retrieves a list of webhook deliveries for a specific webhook in an organization, allowing inspectio..."
    },
    {
      "name": "GITHUB_LIST_DELIVERIES_FOR_A_REPOSITORY_WEBHOOK",
      "display": "List deliveries for a repository webhook",
      "desc": "Retrieves delivery attempts for a specific repository webhook to inspect its history; ensure the web..."
    },
    {
      "name": "GITHUB_LIST_DEPLOY_KEYS",
      "display": "List deploy keys",
      "desc": "Lists deploy ssh keys for a specified repository; the repository must exist."
    },
    {
      "name": "GITHUB_LIST_DEPLOYMENT_BRANCH_POLICIES",
      "display": "List deployment branch policies",
      "desc": "Lists all deployment branch policies for a specified environment in a github repository."
    },
    {
      "name": "GITHUB_LIST_DEPLOYMENTS",
      "display": "List deployments",
      "desc": "Lists deployments for a specified repository; repository must exist."
    },
    {
      "name": "GITHUB_LIST_DEPLOYMENT_STATUSES",
      "display": "List deployment statuses",
      "desc": "Lists all statuses for a given deployment in a repository."
    },
    {
      "name": "GITHUB_LIST_DISCUSSION_COMMENTS",
      "display": "List discussion comments",
      "desc": "Lists all comments for a specific team discussion within an organization."
    },
    {
      "name": "GITHUB_LIST_DISCUSSIONS",
      "display": "List discussions",
      "desc": "Lists discussions for a specific team within an organization, with options for sorting, pagination, ..."
    },
    {
      "name": "GITHUB_LIST_EMAIL_ADDRESSES_FOR_THE_AUTHENTICATED_USER",
      "display": "List email addresses for the authenticated user",
      "desc": "Lists all email addresses for the authenticated user, including their primary status, verification s..."
    },
    {
      "name": "GITHUB_LIST_ENVIRONMENT_CUSTOM_DEPLOYMENT_RULES",
      "display": "List environment custom deployment rules",
      "desc": "Lists all custom deployment protection rule integrations for a repository environment; the `environm..."
    },
    {
      "name": "GITHUB_LIST_ENVIRONMENTS",
      "display": "List environments",
      "desc": "Retrieves all deployment environments for a specified repository, which are used to configure protec..."
    },
    {
      "name": "GITHUB_LIST_ENVIRONMENT_SECRETS",
      "display": "List environment secrets",
      "desc": "Lists the names and metadata (not values) of secrets for a specified, existing environment within an..."
    },
    {
      "name": "GITHUB_LIST_ENVIRONMENT_VARIABLES",
      "display": "List environment variables",
      "desc": "Lists all environment variables, which are plaintext key-value pairs for github actions workflows, f..."
    },
    {
      "name": "GITHUB_LIST_EVENTS_FOR_THE_AUTHENTICATED_USER",
      "display": "List events for the authenticated user",
      "desc": "Lists public events for the specified github user, or private events if authenticated as that user, ..."
    },
    {
      "name": "GITHUB_LIST_EVENTS_RECEIVED_BY_THE_AUTHENTICATED_USER",
      "display": "List events received by the authenticated user",
      "desc": "Lists events a specific github user received from followed users and watched repositories; returns p..."
    },
    {
      "name": "GITHUB_LIST_FOLLOWERS_OF_A_USER",
      "display": "List followers of a user",
      "desc": "Lists followers for a specified, existing github user."
    },
    {
      "name": "GITHUB_LIST_FOLLOWERS_OF_THE_AUTHENTICATED_USER",
      "display": "List followers of the authenticated user",
      "desc": "Lists users following the authenticated github user, returning an empty list if the user has no foll..."
    },
    {
      "name": "GITHUB_LIST_FORKS",
      "display": "List forks",
      "desc": "Lists forks for a specified repository, which must exist, with options for sorting and pagination."
    },
    {
      "name": "GITHUB_LIST_GIST_COMMENTS",
      "display": "List gist comments",
      "desc": "Lists comments for a specified github gist."
    },
    {
      "name": "GITHUB_LIST_GIST_COMMITS",
      "display": "List gist commits",
      "desc": "Lists all commits for a specified gist."
    },
    {
      "name": "GITHUB_LIST_GIST_FORKS",
      "display": "List gist forks",
      "desc": "Lists all forks for a given github gist id."
    },
    {
      "name": "GITHUB_LIST_GISTS_FOR_A_USER",
      "display": "List gists for a user",
      "desc": "Lists public gists for a specified github user."
    },
    {
      "name": "GITHUB_LIST_GISTS_FOR_THE_AUTHENTICATED_USER",
      "display": "List gists for the authenticated user",
      "desc": "Lists gists for the authenticated user, with optional filtering by update time and pagination."
    },
    {
      "name": "GITHUB_LIST_GITHUB_ACTIONS_CACHES_FOR_A_REPOSITORY",
      "display": "List github actions caches for a repository",
      "desc": "Lists github actions caches for a repository, with options to filter by git reference or cache key, ..."
    },
    {
      "name": "GITHUB_LIST_GITHUB_PAGES_BUILDS",
      "display": "List GitHub Pages builds",
      "desc": "Lists github pages builds for a repository; github pages must be enabled on the repository for build..."
    },
    {
      "name": "GITHUB_LIST_GLOBAL_SECURITY_ADVISORIES",
      "display": "List global security advisories",
      "desc": "Lists github's global security advisories, filterable by various attributes including id, type, ecos..."
    },
    {
      "name": "GITHUB_LIST_INSTALLATION_REQUESTS_FOR_THE_AUTHENTICATED_APP",
      "display": "List installation requests for the authenticated app",
      "desc": "Lists pending installation requests made by users or organizations for the authenticated github app."
    },
    {
      "name": "GITHUB_LIST_INSTANCES_OF_A_CODE_SCANNING_ALERT",
      "display": "List instances of a code scanning alert",
      "desc": "Lists all instances of a specific code scanning alert, optionally filtered by git ref; requires code..."
    },
    {
      "name": "GITHUB_LIST_ISSUE_COMMENTS",
      "display": "List issue comments",
      "desc": "Lists comments for a specified issue in a github repository."
    },
    {
      "name": "GITHUB_LIST_ISSUE_COMMENTS_FOR_A_REPOSITORY",
      "display": "List issue comments for a repository",
      "desc": "Lists issue comments, including those on pull requests, for an accessible repository."
    },
    {
      "name": "GITHUB_LIST_ISSUE_EVENTS",
      "display": "List issue events",
      "desc": "Retrieves a list of all events for a specific issue within a github repository."
    },
    {
      "name": "GITHUB_LIST_ISSUE_EVENTS_FOR_A_REPOSITORY",
      "display": "List issue events for a repository",
      "desc": "Lists all issue events (e.g., closed, reopened, assigned) for a specified repository."
    },
    {
      "name": "GITHUB_LIST_ISSUES_ASSIGNED_TO_THE_AUTHENTICATED_USER",
      "display": "List issues for user",
      "desc": "Lists github issues for the authenticated user across visible repositories, with filtering by user r..."
    },
    {
      "name": "GITHUB_LIST_JOBS_FOR_A_WORKFLOW_RUN",
      "display": "List jobs for a workflow run",
      "desc": "Lists jobs for a specific workflow run in a github repository."
    },
    {
      "name": "GITHUB_LIST_JOBS_FOR_A_WORKFLOW_RUN_ATTEMPT",
      "display": "List jobs for a workflow run attempt",
      "desc": "Lists jobs, including details like id, status, and steps, for a specific attempt of a github actions..."
    },
    {
      "name": "GITHUB_LIST_LABELS_FOR_AN_ISSUE",
      "display": "List labels for an issue",
      "desc": "Lists all labels for a specified issue in a github repository."
    },
    {
      "name": "GITHUB_LIST_LABELS_FOR_A_REPOSITORY",
      "display": "List labels for a repository",
      "desc": "Retrieves all labels for a specified, existing github repository."
    },
    {
      "name": "GITHUB_LIST_LABELS_FOR_A_SELF_HOSTED_RUNNER_FOR_AN_ORGANIZATION",
      "display": "List labels for a self-hosted runner for an organization",
      "desc": "Lists all labels assigned to a specific self-hosted runner within a github organization, which are u..."
    },
    {
      "name": "GITHUB_LIST_LABELS_FOR_A_SELF_HOSTED_RUNNER_FOR_A_REPOSITORY",
      "display": "List labels for a self-hosted runner for a repository",
      "desc": "Lists all labels assigned to a specific self-hosted runner registered with the given repository."
    },
    {
      "name": "GITHUB_LIST_LABELS_FOR_ISSUES_IN_A_MILESTONE",
      "display": "List labels for issues in a milestone",
      "desc": "Lists all labels for issues within a specific milestone in a repository."
    },
    {
      "name": "GITHUB_LIST_MACHINE_TYPES_FOR_A_CODESPACE",
      "display": "List machine types for a codespace",
      "desc": "Lists available machine types for a specific, accessible codespace, enabling it to be transitioned t..."
    },
    {
      "name": "GITHUB_LIST_MATCHING_REFERENCES",
      "display": "List matching references",
      "desc": "Lists all git references (branches or tags) in a repository that start with the provided partial ref..."
    },
    {
      "name": "GITHUB_LIST_MILESTONES",
      "display": "List milestones",
      "desc": "Lists milestones, which track progress for groups of issues and pull requests, for an existing repos..."
    },
    {
      "name": "GITHUB_LIST_NOTIFICATIONS_FOR_THE_AUTHENTICATED_USER",
      "display": "List notifications for the authenticated user",
      "desc": "Lists notifications for the authenticated user, sorted by most recent update, with filtering and pag..."
    },
    {
      "name": "GITHUB_LIST_ORGANIZATION_EVENTS_FOR_THE_AUTHENTICATED_USER",
      "display": "List organization events for the authenticated user",
      "desc": "Lists events within a specified organization that were performed by the authenticated user, whose `u..."
    },
    {
      "name": "GITHUB_LIST_ORGANIZATION_MEMBERS",
      "display": "List organization members",
      "desc": "Lists public and concealed members of a github organization; viewing concealed members requires auth..."
    },
    {
      "name": "GITHUB_LIST_ORGANIZATION_PROJECTS",
      "display": "List organization projects",
      "desc": "Lists projects for a specified github organization, optionally filtering by state and supporting pag..."
    },
    {
      "name": "GITHUB_LIST_ORGANIZATION_REPOSITORIES",
      "display": "List organization repositories",
      "desc": "Retrieves a list of repositories for a specified github organization, allowing filtering by type and..."
    },
    {
      "name": "GITHUB_LIST_ORGANIZATIONS",
      "display": "List organizations",
      "desc": "Lists github organizations for the authenticated user, sorted by id in ascending order."
    },
    {
      "name": "GITHUB_LIST_ORGANIZATION_SECRETS",
      "display": "List organization secrets",
      "desc": "Lists github actions secrets available for a specified organization."
    },
    {
      "name": "GITHUB_LIST_ORGANIZATIONS_FOR_A_USER",
      "display": "List organizations for a user",
      "desc": "Lists public organizations for a specified github user; the `username` must be a valid github handle..."
    },
    {
      "name": "GITHUB_LIST_ORGANIZATIONS_FOR_THE_AUTHENTICATED_USER",
      "display": "List organizations for the authenticated user",
      "desc": "Lists organizations the authenticated github user is a member of, returning details for each organiz..."
    },
    {
      "name": "GITHUB_LIST_ORGANIZATION_VARIABLES",
      "display": "List organization variables",
      "desc": "Lists all github actions variables for a specified organization."
    },
    {
      "name": "GITHUB_LIST_ORGANIZATION_WEBHOOKS",
      "display": "List organization webhooks",
      "desc": "Lists all webhooks for a specified github organization; the organization must exist."
    },
    {
      "name": "GITHUB_LIST_ORG_FINE_GRAINED_PERMISSIONS",
      "display": "List organization fine-grained permissions",
      "desc": "Retrieves all fine-grained permissions for a specified github organization, essential for creating o..."
    },
    {
      "name": "GITHUB_LIST_ORG_ISSUES_FOR_USER",
      "display": "List organization issues assigned to the authenticated user",
      "desc": "Lists issues for the authenticated user within a specified github organization, with options to filt..."
    },
    {
      "name": "GITHUB_LIST_ORG_LEVEL_CODESPACES_SECRETS",
      "display": "List org level codespaces secrets",
      "desc": "Lists all codespaces secrets available for a specified organization, which must exist."
    },
    {
      "name": "GITHUB_LIST_ORG_PACKAGE_VERSIONS",
      "display": "List package versions for an organization package",
      "desc": "Lists all versions for a specified package, if it exists and is owned by the given github organizati..."
    },
    {
      "name": "GITHUB_LIST_ORG_REPOS_WITHGITHUB_ACTIONS_ENABLED",
      "display": "List organization repositories with Github Actions enabled",
      "desc": "Lists repositories in an organization with github actions enabled, for use when the organization's p..."
    },
    {
      "name": "GITHUB_LIST_ORG_RESOURCE_ACCESS_TOKENS",
      "display": "List org resource access tokens",
      "desc": "Lists approved fine-grained personal access tokens (pats) with access to resources in a github organ..."
    },
    {
      "name": "GITHUB_LIST_ORG_RESOURCES_WITH_PERSONAL_TOKENS",
      "display": "List org resources with personal tokens",
      "desc": "Retrieves a list of an organization's fine-grained personal access token requests (pending, approved..."
    },
    {
      "name": "GITHUB_LIST_ORG_SECRETS_WITHOUT_VALUES",
      "display": "List organization Dependabot secrets without values",
      "desc": "Lists all dependabot secrets (metadata like names, creation/update timestamps, but not their encrypt..."
    },
    {
      "name": "GITHUB_LIST_OUTSIDE_COLLABORATORS_FOR_AN_ORGANIZATION",
      "display": "List outside collaborators for an organization",
      "desc": "Lists outside collaborators for a github organization, with options to filter (e.g., by 2fa status) ..."
    },
    {
      "name": "GITHUB_LIST_OWNED_PACKAGE_VERSIONS",
      "display": "List owned package versions",
      "desc": "Lists all versions for an existing package owned by the authenticated user, identified by its type a..."
    },
    {
      "name": "GITHUB_LIST_PACKAGES_FOR_AN_ORGANIZATION",
      "display": "List packages for an organization",
      "desc": "Lists github packages for an organization, noting specific interpretations for package type and visi..."
    },
    {
      "name": "GITHUB_LIST_PACKAGES_FOR_A_USER",
      "display": "List packages for a user",
      "desc": "Lists packages for a specified github user, filterable by package type and visibility."
    },
    {
      "name": "GITHUB_LIST_PACKAGES_FOR_THE_AUTHENTICATED_USER_S_NAMESPACE",
      "display": "List packages for the authenticated user's namespace",
      "desc": "Lists packages of a specific type and visibility within the authenticated user's namespace on github..."
    },
    {
      "name": "GITHUB_LIST_PACKAGE_VERSIONS_FOR_A_PACKAGE_OWNED_BY_A_USER",
      "display": "List package versions for a package owned by a user",
      "desc": "Lists all versions of a public package owned by a specific github user, identified by package type, ..."
    },
    {
      "name": "GITHUB_LIST_PENDING_TEAM_INVITATIONS",
      "display": "List pending team invitations",
      "desc": "Lists all pending membership invitations for a specified team within an organization."
    },
    {
      "name": "GITHUB_LIST_PROJECT_CARDS",
      "display": "List project cards",
      "desc": "Lists all project cards for a given `column id`, which must correspond to an existing project column..."
    },
    {
      "name": "GITHUB_LIST_PROJECT_COLLABORATORS",
      "display": "List project collaborators",
      "desc": "Fetches a list of collaborators for a specified, existing github project."
    },
    {
      "name": "GITHUB_LIST_PROJECT_COLUMNS",
      "display": "List project columns",
      "desc": "Lists all of a github project's columns (e.g., 'to do', 'in progress'); project id must identify a v..."
    },
    {
      "name": "GITHUB_LIST_PUBLIC_EMAIL_ADDRESSES_FOR_THE_AUTHENTICATED_USER",
      "display": "List public email addresses for the authenticated user",
      "desc": "Lists the public email addresses for the authenticated user."
    },
    {
      "name": "GITHUB_LIST_PUBLIC_EVENTS",
      "display": "List public events",
      "desc": "Lists public github events, which may be delayed by up to 5 minutes, with support for pagination."
    },
    {
      "name": "GITHUB_LIST_PUBLIC_EVENTS_FOR_A_NETWORK_OF_REPOSITORIES",
      "display": "List public events for a network of repositories",
      "desc": "Retrieves public events (up to 90 days old, newest first) for a github repository network, including..."
    },
    {
      "name": "GITHUB_LIST_PUBLIC_EVENTS_FOR_A_USER",
      "display": "List public events for a user",
      "desc": "Retrieves a list of public events for a specified github user, in reverse chronological order."
    },
    {
      "name": "GITHUB_LIST_PUBLIC_EVENTS_RECEIVED_BY_A_USER",
      "display": "List public events received by a user",
      "desc": "Lists public events for a specified github user (e.g., activities in repositories they watch or are ..."
    },
    {
      "name": "GITHUB_LIST_PUBLIC_GISTS",
      "display": "List public gists",
      "desc": "Lists public gists from github, optionally filtering by a 'since' timestamp and supporting paginatio..."
    },
    {
      "name": "GITHUB_LIST_PUBLIC_KEYS_FOR_A_USER",
      "display": "List public keys for a user",
      "desc": "Lists the verified public ssh keys for a specified github user."
    },
    {
      "name": "GITHUB_LIST_PUBLIC_ORGANIZATION_EVENTS",
      "display": "List public organization events",
      "desc": "Lists public events for a specified github organization, which must exist."
    },
    {
      "name": "GITHUB_LIST_PUBLIC_ORGANIZATION_MEMBERS",
      "display": "List public organization members",
      "desc": "Lists users who have publicly declared their membership in a specified, existing github organization..."
    },
    {
      "name": "GITHUB_LIST_PUBLIC_REPOSITORIES",
      "display": "List public repositories",
      "desc": "Lists all public repositories on github; use the `since` parameter with a repository id from a previ..."
    },
    {
      "name": "GITHUB_LIST_PULL_REQUESTS",
      "display": "List pull requests",
      "desc": "Lists pull requests for a specified github repository with ai-friendly filtering."
    },
    {
      "name": "GITHUB_LIST_PULL_REQUESTS_ASSOCIATED_WITH_A_COMMIT",
      "display": "List pull requests associated with a commit",
      "desc": "Lists pull requests for a commit; returns merged prs that introduced the commit if on the default br..."
    },
    {
      "name": "GITHUB_LIST_PULL_REQUESTS_FILES",
      "display": "List pull requests files",
      "desc": "Lists all files (including additions, modifications, and removals) associated with a specific pull r..."
    },
    {
      "name": "GITHUB_LIST_REACTIONS_FOR_A_COMMIT_COMMENT",
      "display": "List reactions for a commit comment",
      "desc": "Lists reactions for a specific commit comment; this is a read-only operation."
    },
    {
      "name": "GITHUB_LIST_REACTIONS_FOR_AN_ISSUE",
      "display": "List reactions for an issue",
      "desc": "Lists reactions for a specific, existing issue within an accessible github repository, optionally fi..."
    },
    {
      "name": "GITHUB_LIST_REACTIONS_FOR_AN_ISSUE_COMMENT",
      "display": "List reactions for an issue comment",
      "desc": "Lists reactions for a specific issue comment in a github repository, optionally filtering by content..."
    },
    {
      "name": "GITHUB_LIST_REACTIONS_FOR_A_PULL_REQUEST_REVIEW_COMMENT",
      "display": "List reactions for a pull request review comment",
      "desc": "Lists reactions for a pull request review comment in a repository, optionally filtering by reaction ..."
    },
    {
      "name": "GITHUB_LIST_REACTIONS_FOR_A_RELEASE",
      "display": "List reactions for a release",
      "desc": "Lists all reactions, or optionally filters reactions by a specific content type, for a given github ..."
    },
    {
      "name": "GITHUB_LIST_REACTIONS_FOR_A_TEAM_DISCUSSION",
      "display": "List reactions for a team discussion",
      "desc": "Lists reactions for an existing team discussion within an organization."
    },
    {
      "name": "GITHUB_LIST_REACTIONS_FOR_A_TEAM_DISCUSSION_COMMENT",
      "display": "List reactions for a team discussion comment",
      "desc": "Lists reactions for a specific comment in a team discussion within an organization, optionally filte..."
    },
    {
      "name": "GITHUB_LIST_RELEASE_ASSETS",
      "display": "List release assets",
      "desc": "Lists assets (e.g., compiled binaries, source code archives) for a specific github release, identifi..."
    },
    {
      "name": "GITHUB_LIST_RELEASES",
      "display": "List releases",
      "desc": "Retrieves a list of all releases (published, draft, and prerelease) for a specified repository."
    },
    {
      "name": "GITHUB_LIST_REPO_ACCESS_BY_TOKEN",
      "display": "List repo access by token",
      "desc": "Lists repositories in an organization that a fine-grained personal access token (`pat request id`) h..."
    },
    {
      "name": "GITHUB_LIST_REPO_CODESPACES",
      "display": "List repo codespaces for authenticated user",
      "desc": "Lists codespaces the authenticated user can access within a specified, existing repository."
    },
    {
      "name": "GITHUB_LIST_REPO_DEV_CONTAINER_CONFIGS_FOR_USER",
      "display": "List repo dev container configs for user",
      "desc": "Lists the `devcontainer.json` configurations available in a specified repository for use with github..."
    },
    {
      "name": "GITHUB_LIST_REPO_SECRETS_WITHOUT_VALUES",
      "display": "List repo secrets without values",
      "desc": "Lists all codespaces secrets available in a specific repository, without their encrypted values."
    },
    {
      "name": "GITHUB_LIST_REPOSITORIES_ACCESSIBLE_TO_THE_APP_INSTALLATION",
      "display": "List repos accessible to app installation",
      "desc": "Lists repositories an app installation can access; 'total count' in response is zero if none are acc..."
    },
    {
      "name": "GITHUB_LIST_REPOSITORIES_ACCESSIBLE_TO_THE_USER_ACCESS_TOKEN",
      "display": "List repositories accessible to the user access token",
      "desc": "Lists repositories accessible to the authenticated user through a specific github app installation (..."
    },
    {
      "name": "GITHUB_LIST_REPOSITORIES_FOR_A_USER",
      "display": "List repositories for a user",
      "desc": "Lists public repositories for a specified github user, who must have an existing account."
    },
    {
      "name": "GITHUB_LIST_REPOSITORIES_FOR_THE_AUTHENTICATED_USER",
      "display": "List repositories for the authenticated user",
      "desc": "Lists repositories for the authenticated user; using 'type' with 'visibility' or 'affiliation' api p..."
    },
    {
      "name": "GITHUB_LIST_REPOSITORIES_STARRED_BY_A_USER",
      "display": "List repositories starred by a user",
      "desc": "Lists repositories a valid and existing github user has starred."
    },
    {
      "name": "GITHUB_LIST_REPOSITORIES_STARRED_BY_THE_AUTHENTICATED_USER",
      "display": "List repositories starred by the authenticated user",
      "desc": "Lists repositories the authenticated user has starred, optionally sorted and paginated, including st..."
    },
    {
      "name": "GITHUB_LIST_REPOSITORIES_WATCHED_BY_A_USER",
      "display": "List repositories watched by a user",
      "desc": "Lists repositories a given github user is watching; the username must be a valid and existing github..."
    },
    {
      "name": "GITHUB_LIST_REPOSITORIES_WATCHED_BY_THE_AUTHENTICATED_USER",
      "display": "List repositories watched by the authenticated user",
      "desc": "Lists repositories the authenticated user is watching (subscribed to for notifications)."
    },
    {
      "name": "GITHUB_LIST_REPOSITORY_ACTIVITIES",
      "display": "List repository activities",
      "desc": "Lists activities for a github repository, ensuring the repository exists and is accessible."
    },
    {
      "name": "GITHUB_LIST_REPOSITORY_COLLABORATORS",
      "display": "List repository collaborators",
      "desc": "Lists collaborators for a specified repository, provided it exists and is accessible to the authenti..."
    },
    {
      "name": "GITHUB_LIST_REPOSITORY_CONTRIBUTORS",
      "display": "List repository contributors",
      "desc": "Lists contributors to a specified repository, sorted by number of contributions in descending order;..."
    },
    {
      "name": "GITHUB_LIST_REPOSITORY_EVENTS",
      "display": "List repository events",
      "desc": "Lists chronological events (e.g., code pushes, issue activities, pr actions, forks) for a specified,..."
    },
    {
      "name": "GITHUB_LIST_REPOSITORY_INVITATIONS",
      "display": "List repository invitations",
      "desc": "Retrieves all pending (unaccepted or undeclined) collaboration invitations for a specified github re..."
    },
    {
      "name": "GITHUB_LIST_REPOSITORY_INVITATIONS_FOR_THE_AUTHENTICATED_USER",
      "display": "List authenticated user's repository invitations",
      "desc": "Lists all pending repository invitations for the authenticated user."
    },
    {
      "name": "GITHUB_LIST_REPOSITORY_ISSUES",
      "display": "List repository issues",
      "desc": "Lists issues (which include pull requests) for a specified, existing github repository, with options..."
    },
    {
      "name": "GITHUB_LIST_REPOSITORY_LANGUAGES",
      "display": "List repository languages",
      "desc": "Lists the programming languages used in a github repository, returning a byte count for each languag..."
    },
    {
      "name": "GITHUB_LIST_REPOSITORY_NOTIFICATIONS_FOR_THE_AUTHENTICATED_USER",
      "display": "List repository notifications for the authenticated user",
      "desc": "Retrieves notifications for the authenticated user from a specified repository, to which the user mu..."
    },
    {
      "name": "GITHUB_LIST_REPOSITORY_ORGANIZATION_SECRETS",
      "display": "List repository organization secrets",
      "desc": "Lists names of organization-level secrets shared with the specified repository; actual secret values..."
    },
    {
      "name": "GITHUB_LIST_REPOSITORY_ORGANIZATION_VARIABLES",
      "display": "List repository organization variables",
      "desc": "Lists organization variables accessible to a specific repository; the repository must exist."
    },
    {
      "name": "GITHUB_LIST_REPOSITORY_PROJECTS",
      "display": "List repository projects",
      "desc": "Lists projects associated with a specific repository."
    },
    {
      "name": "GITHUB_LIST_REPOSITORY_RULE_SUITES",
      "display": "List repository rule suites",
      "desc": "Lists rule suite evaluations for a repository, allowing filtering by ref (non-wildcard), time period..."
    },
    {
      "name": "GITHUB_LIST_REPOSITORY_SECRETS",
      "display": "List repository secrets",
      "desc": "Lists metadata for all secrets in a github repository, excluding their encrypted values."
    },
    {
      "name": "GITHUB_LIST_REPOSITORY_SECRETS_WITHOUT_DECRYPTING",
      "display": "List repository secrets without decrypting",
      "desc": "Lists metadata (e.g., name, creation/update dates) for all dependabot secrets in a repository; secre..."
    },
    {
      "name": "GITHUB_LIST_REPOSITORY_TAGS",
      "display": "List repository tags",
      "desc": "Lists tags for a specified github repository."
    },
    {
      "name": "GITHUB_LIST_REPOSITORY_TEAMS",
      "display": "List repository teams",
      "desc": "Lists all teams with explicit permission to access the specified repository; the repository must exi..."
    },
    {
      "name": "GITHUB_LIST_REPOSITORY_VARIABLES",
      "display": "List repository variables",
      "desc": "Lists plain text key-value variables for github actions workflows within a specific, accessible repo..."
    },
    {
      "name": "GITHUB_LIST_REPOSITORY_WEBHOOKS",
      "display": "List repository webhooks",
      "desc": "Retrieves a list of webhooks for a repository, which must exist and be accessible."
    },
    {
      "name": "GITHUB_LIST_REPOSITORY_WORKFLOWS",
      "display": "List repository workflows",
      "desc": "Lists all github actions workflows for a specified repository, which must exist and be accessible."
    },
    {
      "name": "GITHUB_LIST_REPOS_WITH_GHACTIONS_CACHE_USAGE",
      "display": "List repos with ghactions cache usage",
      "desc": "Retrieves a paginated list of github actions cache usage statistics for repositories within an exist..."
    },
    {
      "name": "GITHUB_LIST_REVIEW_COMMENTS_IN_A_REPOSITORY",
      "display": "List review comments in a repository",
      "desc": "Lists all review comments on all pull requests within a specified repository."
    },
    {
      "name": "GITHUB_LIST_REVIEW_COMMENTS_ON_A_PULL_REQUEST",
      "display": "List review comments on a pull request",
      "desc": "Lists all review comments on a specific pull request within a github repository."
    },
    {
      "name": "GITHUB_LIST_REVIEWS_FOR_A_PULL_REQUEST",
      "display": "List reviews for a pull request",
      "desc": "Lists submitted reviews chronologically for a specific pull request within a github repository."
    },
    {
      "name": "GITHUB_LIST_RUNNER_APPLICATIONS_FOR_AN_ORGANIZATION",
      "display": "List runner applications for an organization",
      "desc": "Lists downloadable github actions runner application binaries, used for setting up self-hosted runne..."
    },
    {
      "name": "GITHUB_LIST_RUNNER_APPLICATIONS_FOR_A_REPOSITORY",
      "display": "List runner applications for a repository",
      "desc": "Lists available self-hosted runner application binaries for a specific repository, including their o..."
    },
    {
      "name": "GITHUB_LIST_SECRETS_FOR_THE_AUTHENTICATED_USER",
      "display": "List secrets for the authenticated user",
      "desc": "Lists all codespaces secrets accessible to the authenticated user for use within github codespaces."
    },
    {
      "name": "GITHUB_LIST_SELECTED_REPOS_FOR_SECRET_ACCESS",
      "display": "List selected repos for secret access",
      "desc": "Lists repositories within a specified organization that have been granted access to a particular dep..."
    },
    {
      "name": "GITHUB_LIST_SELECTED_REPOSITORIES_FOR_AN_ORGANIZATION_SECRET",
      "display": "List selected repositories for an organization secret",
      "desc": "Lists repositories within an organization that have explicit access to a specific organization secre..."
    },
    {
      "name": "GITHUB_LIST_SELECTED_REPOSITORIES_FOR_AN_ORGANIZATION_VARIABLE",
      "display": "List selected repositories for an organization variable",
      "desc": "Lists repositories in an organization that can access a specific organization variable; supports pag..."
    },
    {
      "name": "GITHUB_LIST_SELECTED_REPOSITORIES_FOR_A_USER_SECRET",
      "display": "List selected repositories for a user secret",
      "desc": "Lists repositories that have access to the specified user secret for the authenticated user's codesp..."
    },
    {
      "name": "GITHUB_LIST_SELF_HOSTED_RUNNERS_FOR_AN_ORGANIZATION",
      "display": "List self hosted runners for an organization",
      "desc": "Lists self-hosted runners for a github organization, optionally filtering by name and paginating res..."
    },
    {
      "name": "GITHUB_LIST_SELF_HOSTED_RUNNERS_FOR_A_REPOSITORY",
      "display": "List self hosted runners for a repository",
      "desc": "Lists all self-hosted runners configured for a repository."
    },
    {
      "name": "GITHUB_LIST_SOCIAL_ACCOUNTS_FOR_A_USER",
      "display": "List social accounts for a user",
      "desc": "Lists social media accounts publicly linked to an existing github user's profile."
    },
    {
      "name": "GITHUB_LIST_SOCIAL_ACCOUNTS_FOR_THE_AUTHENTICATED_USER",
      "display": "List social accounts for the authenticated user",
      "desc": "Lists all social media accounts linked to the authenticated user's github profile."
    },
    {
      "name": "GITHUB_LIST_STARGAZERS",
      "display": "List stargazers",
      "desc": "Lists users who have starred the specified github repository, which must exist."
    },
    {
      "name": "GITHUB_LIST_STARRED_GISTS",
      "display": "List starred gists",
      "desc": "Retrieves a list of gists starred by the authenticated user."
    },
    {
      "name": "GITHUB_LIST_SUBSCRIPTIONS_FOR_THE_AUTHENTICATED_USER",
      "display": "List subscriptions for the authenticated user",
      "desc": "Lists the authenticated user's active github marketplace subscriptions."
    },
    {
      "name": "GITHUB_LIST_SUBSCRIPTIONS_FOR_THE_AUTHENTICATED_USER_STUBBED",
      "display": "List stubbed subscriptions for the authenticated user",
      "desc": "Lists the authenticated user's stubbed (test/example data, not live) github marketplace subscription..."
    },
    {
      "name": "GITHUB_LIST_TAG_PROTECTION_STATES_FOR_A_REPOSITORY",
      "display": "List tag protection states for a repository",
      "desc": "Lists all active tag protection rules for a repository, defining patterns to prevent matching tags f..."
    },
    {
      "name": "GITHUB_LIST_TEAM_MEMBERS",
      "display": "List team members",
      "desc": "Lists members of a specific team within an organization, including members of child teams."
    },
    {
      "name": "GITHUB_LIST_TEAM_PROJECTS",
      "display": "List team projects",
      "desc": "Lists github projects accessible to a specific team within an organization."
    },
    {
      "name": "GITHUB_LIST_TEAM_REPOSITORIES",
      "display": "List team repositories",
      "desc": "Lists repositories accessible to a specific team within a github organization."
    },
    {
      "name": "GITHUB_LIST_TEAMS",
      "display": "List teams",
      "desc": "Lists teams for a specified github organization."
    },
    {
      "name": "GITHUB_LIST_TEAMS_FOR_THE_AUTHENTICATED_USER",
      "display": "List teams for the authenticated user",
      "desc": "Lists all teams across all organizations to which the authenticated user belongs, supporting paginat..."
    },
    {
      "name": "GITHUB_LIST_TEAMS_THAT_ARE_ASSIGNED_TO_AN_ORGANIZATION_ROLE",
      "display": "List teams assigned to an organization role",
      "desc": "Lists teams assigned to a specific role within a github organization."
    },
    {
      "name": "GITHUB_LIST_THE_PEOPLE_A_USER_FOLLOWS",
      "display": "List the people a user follows",
      "desc": "Lists github users that a valid github `username` is following, supporting pagination."
    },
    {
      "name": "GITHUB_LIST_THE_PEOPLE_THE_AUTHENTICATED_USER_FOLLOWS",
      "display": "List people the authenticated user follows",
      "desc": "Lists people the authenticated user follows."
    },
    {
      "name": "GITHUB_LIST_TIMELINE_EVENTS_FOR_AN_ISSUE",
      "display": "List timeline events for an issue",
      "desc": "Lists chronological events (e.g., comments, commits, label changes) for a specific issue in a github..."
    },
    {
      "name": "GITHUB_LIST_TOKEN_ACCESS_REPOSITORIES",
      "display": "List token access repositories",
      "desc": "Lists repositories in an organization accessible by a specific fine-grained personal access token; t..."
    },
    {
      "name": "GITHUB_LIST_USER_PROJECTS",
      "display": "List user projects",
      "desc": "Retrieves a list of projects for a specified github user, optionally filtering by state and supporti..."
    },
    {
      "name": "GITHUB_LIST_USERS",
      "display": "List users",
      "desc": "Retrieves all github users (individuals and organizations) in chronological order of their sign-up d..."
    },
    {
      "name": "GITHUB_LIST_USERS_BLOCKED_BY_AN_ORGANIZATION",
      "display": "List users blocked by an organization",
      "desc": "Lists users blocked by a specified github organization."
    },
    {
      "name": "GITHUB_LIST_USERS_BLOCKED_BY_THE_AUTHENTICATED_USER",
      "display": "List users blocked by the authenticated user",
      "desc": "Lists users blocked by the authenticated user, returning an empty list if no users are blocked."
    },
    {
      "name": "GITHUB_LIST_USERS_THAT_ARE_ASSIGNED_TO_AN_ORGANIZATION_ROLE",
      "display": "List users assigned org role",
      "desc": "Lists users assigned to a specific role within a github organization."
    },
    {
      "name": "GITHUB_LIST_WATCHERS",
      "display": "List watchers",
      "desc": "Retrieves a list of users watching a specific repository; the repository must be accessible to the a..."
    },
    {
      "name": "GITHUB_LIST_WORKFLOW_RUN_ARTIFACTS",
      "display": "List workflow run artifacts",
      "desc": "Lists artifacts (e.g., build outputs, test results) for a specific workflow run in a github reposito..."
    },
    {
      "name": "GITHUB_LIST_WORKFLOW_RUNS_FOR_A_REPOSITORY",
      "display": "List workflow runs for a repository",
      "desc": "Lists workflow runs for a repository, allowing filtering by actor, branch, event, status, creation d..."
    },
    {
      "name": "GITHUB_LIST_WORKFLOW_RUNS_FOR_A_WORKFLOW",
      "display": "List workflow runs for a workflow",
      "desc": "Lists runs for a specified, existing workflow (identified by id or filename like `main.yml`) in a gi..."
    },
    {
      "name": "GITHUB_LOCK_AN_ISSUE",
      "display": "Lock an issue",
      "desc": "Locks an existing github issue's conversation, preventing further comments; an optional reason can b..."
    },
    {
      "name": "GITHUB_MANAGE_ACCESS_CONTROL_FOR_ORGANIZATION_CODESPACES",
      "display": "Manage access control for organization codespaces",
      "desc": "Sets the codespaces access control policy for a github organization, determining which members can u..."
    },
    {
      "name": "GITHUB_MANAGE_CUSTOM_PROPERTIES_FOR_ORG_REPOS",
      "display": "Manage custom properties for org repos",
      "desc": "Creates or updates values for an organization's predefined custom properties across multiple reposit..."
    },
    {
      "name": "GITHUB_MANAGE_SECRETS_IN_SELECTED_REPOSITORIES_WITH_PROPER_ACCESS",
      "display": "Manage secrets in selected repositories with proper access",
      "desc": "Lists repositories within an organization that have been explicitly granted access to a specific org..."
    },
    {
      "name": "GITHUB_MAP_A_COMMIT_AUTHOR",
      "display": "Map a commit author",
      "desc": "Updates git author information (name and/or email) for an `author id` obtained during a repository i..."
    },
    {
      "name": "GITHUB_MARK_A_THREAD_AS_DONE",
      "display": "Mark a thread as done",
      "desc": "Marks the github notification thread (identified by `thread id`) as done or read for the authenticat..."
    },
    {
      "name": "GITHUB_MARK_A_THREAD_AS_READ",
      "display": "Mark a thread as read",
      "desc": "Marks an existing github notification thread, identified by its `thread id`, as read."
    },
    {
      "name": "GITHUB_MARK_NOTIFICATIONS_AS_READ",
      "display": "Mark notifications as read",
      "desc": "Marks notifications as read or unread, optionally for those updated at or before a `last read at` ti..."
    },
    {
      "name": "GITHUB_MARK_REPOSITORY_NOTIFICATIONS_AS_READ",
      "display": "Mark repository notifications as read",
      "desc": "Marks notifications in a repository as read; if 'last read at' is specified, notifications updated a..."
    },
    {
      "name": "GITHUB_MERGE_A_BRANCH",
      "display": "Merge a branch",
      "desc": "Merges a head branch or commit sha into a base branch in a repository; fails if there are merge conf..."
    },
    {
      "name": "GITHUB_MERGE_A_PULL_REQUEST",
      "display": "Merge a pull request",
      "desc": "Merges an open and mergeable pull request in a repository, optionally specifying merge commit detail..."
    },
    {
      "name": "GITHUB_META_ROOT",
      "display": "Get GitHub API root",
      "desc": "Deprecated: retrieves github rest api root endpoint details; use `github api root` instead."
    },
    {
      "name": "GITHUB_MOVE_A_PROJECT_CARD",
      "display": "Move a project card",
      "desc": "Moves a project card to a specified position, optionally into a new column."
    },
    {
      "name": "GITHUB_MOVE_A_PROJECT_COLUMN",
      "display": "Move a project column",
      "desc": "Moves a column within a github project (classic) to a new position; `position` can be 'first', 'last..."
    },
    {
      "name": "GITHUB_PING_AN_ORGANIZATION_WEBHOOK",
      "display": "Ping an organization webhook",
      "desc": "Sends a 'ping' event to a specified, existing organization webhook to test its configuration and ens..."
    },
    {
      "name": "GITHUB_PING_A_REPOSITORY_WEBHOOK",
      "display": "Ping a repository webhook",
      "desc": "Pings an existing webhook on a repository to test its configuration and reachability by github."
    },
    {
      "name": "GITHUB_PRIVATELY_REPORT_A_SECURITY_VULNERABILITY",
      "display": "Privately report a security vulnerability",
      "desc": "Privately reports a security vulnerability for a repository; specify either `severity` or `cvss vect..."
    },
    {
      "name": "GITHUB_PULLS_CHECK_IF_MERGED",
      "display": "Pulls check if merged",
      "desc": "Deprecated: use `check if a pull request has been merged` instead. checks if a github pull request h..."
    },
    {
      "name": "GITHUB_PULLS_CREATE",
      "display": "Create a pull request",
      "desc": "Deprecated: use `create a pull request` instead. creates a pull request, requiring existing `base` a..."
    },
    {
      "name": "GITHUB_PULLS_CREATE_REVIEW",
      "display": "Create a review for a pull request",
      "desc": "Deprecated: use `create a review for a pull request` for creating pull request reviews; supports `pe..."
    },
    {
      "name": "GITHUB_PULLS_CREATE_REVIEW_COMMENT",
      "display": "Create a review comment for a pull request",
      "desc": "Deprecated: creates a review comment on a pull request's diff. use `create a review comment for a pu..."
    },
    {
      "name": "GITHUB_PULLS_GET",
      "display": "Get a pull request",
      "desc": "Deprecated: retrieves details of a specific pull request; prefer using the `get a pull request` acti..."
    },
    {
      "name": "GITHUB_PULLS_LIST",
      "display": "List pull requests",
      "desc": "(deprecated: use `list pull requests`) lists pull requests for a specified github repository with ai..."
    },
    {
      "name": "GITHUB_REDELIVER_A_DELIVERY_FOR_AN_ORGANIZATION_WEBHOOK",
      "display": "Redeliver a delivery for an organization webhook",
      "desc": "Redelivers a specific webhook delivery for a webhook within an organization, to resend an event that..."
    },
    {
      "name": "GITHUB_REDELIVER_A_DELIVERY_FOR_A_REPOSITORY_WEBHOOK",
      "display": "Redeliver a delivery for a repository webhook",
      "desc": "Redelivers a specific, previously made webhook delivery (`delivery id`) for a repository's webhook (..."
    },
    {
      "name": "GITHUB_REMOVE_A_CUSTOM_PROPERTY_FOR_AN_ORGANIZATION",
      "display": "Remove a custom property for an organization",
      "desc": "Deletes a custom property, specified by `custom property name`, from an existing organization (`org`..."
    },
    {
      "name": "GITHUB_REMOVE_A_LABEL_FROM_AN_ISSUE",
      "display": "Remove a label from an issue",
      "desc": "Removes a label currently applied to a specific issue in a repository."
    },
    {
      "name": "GITHUB_REMOVE_ALL_LABELS_FROM_AN_ISSUE",
      "display": "Remove all labels from an issue",
      "desc": "Removes all labels from a specified issue in a github repository; this operation is idempotent."
    },
    {
      "name": "GITHUB_REMOVE_ALL_ORGANIZATION_ROLES_FOR_A_TEAM",
      "display": "Remove all organization roles for a team",
      "desc": "Revokes all organization roles for a team in an organization; this is destructive and succeeds even ..."
    },
    {
      "name": "GITHUB_REMOVE_ALL_ORGANIZATION_ROLES_FOR_A_USER",
      "display": "Remove all organization roles for a user",
      "desc": "Revokes all assigned organization-level roles from a specified user (who must be a member of the org..."
    },
    {
      "name": "GITHUB_REMOVE_AN_ORGANIZATION_MEMBER",
      "display": "Remove an organization member",
      "desc": "Removes a user, who must currently be a member, from a github organization, revoking their membershi..."
    },
    {
      "name": "GITHUB_REMOVE_AN_ORGANIZATION_ROLE_FROM_A_TEAM",
      "display": "Remove an organization role from a team",
      "desc": "Revokes an organization role that a team currently possesses within an organization."
    },
    {
      "name": "GITHUB_REMOVE_AN_ORGANIZATION_ROLE_FROM_A_USER",
      "display": "Remove an organization role from a user",
      "desc": "Removes a custom organization role from a user within a github organization, provided the organizati..."
    },
    {
      "name": "GITHUB_REMOVE_APP_ACCESS_RESTRICTIONS",
      "display": "Remove app access restrictions",
      "desc": "Removes all github app access restrictions from a protected branch in a repository; the branch must ..."
    },
    {
      "name": "GITHUB_REMOVE_A_PROJECT_FROM_A_TEAM",
      "display": "Remove a project from a team",
      "desc": "Removes a project from a team within an organization; this action requires the project to be current..."
    },
    {
      "name": "GITHUB_REMOVE_A_REPOSITORY_COLLABORATOR",
      "display": "Remove a repository collaborator",
      "desc": "Removes a collaborator from a specified github repository, provided the repository exists and the us..."
    },
    {
      "name": "GITHUB_REMOVE_A_REPOSITORY_FROM_AN_APP_INSTALLATION",
      "display": "Remove a repository from an app installation",
      "desc": "Removes a repository from a github app installation for the authenticated user, given a valid `insta..."
    },
    {
      "name": "GITHUB_REMOVE_A_REPOSITORY_FROM_A_TEAM",
      "display": "Remove a repository from a team",
      "desc": "Disassociates a repository from a team; team members may lose access permissions, but the repository..."
    },
    {
      "name": "GITHUB_REMOVE_A_SELECTED_REPOSITORY_FROM_A_USER_SECRET",
      "display": "Remove a selected repository from a user secret",
      "desc": "Removes a selected repository's access to a user's codespaces secret; the secret must exist and the ..."
    },
    {
      "name": "GITHUB_REMOVE_ASSIGNEES_FROM_AN_ISSUE",
      "display": "Remove assignees from an issue",
      "desc": "Removes specified assignees from a github issue; requires push access, and invalid removal attempts ..."
    },
    {
      "name": "GITHUB_REMOVE_CUSTOM_LABEL_FROM_REPO_RUNNER",
      "display": "Remove custom label from repo runner",
      "desc": "Removes a custom label from a repository's self-hosted runner; this operation is idempotent."
    },
    {
      "name": "GITHUB_REMOVE_CUSTOM_LABEL_FROM_SELF_HOSTED_RUNNER",
      "display": "Remove custom label from self hosted runner",
      "desc": "Removes a currently assigned custom label (`name`) from a self-hosted runner (`runner id`) in an org..."
    },
    {
      "name": "GITHUB_REMOVE_CUSTOM_LABELS_FROM_SELF_HOSTED_REPOSITORY_RUNNER",
      "display": "Remove custom labels from self hosted repo runner",
      "desc": "Removes all custom labels from a self-hosted runner registered at the repository level, leaving only..."
    },
    {
      "name": "GITHUB_REMOVE_INTERACTION_RESTRICTIONS_FOR_AN_ORGANIZATION",
      "display": "Remove interaction restrictions for an organization",
      "desc": "Removes all interaction restrictions from public repositories in the specified github organization, ..."
    },
    {
      "name": "GITHUB_REMOVE_INTERACTION_RESTRICTIONS_FOR_A_REPOSITORY",
      "display": "Remove interaction restrictions for a repository",
      "desc": "Removes all interaction restrictions for a repository, enabling all users to comment, open issues, a..."
    },
    {
      "name": "GITHUB_REMOVE_INTERACTION_RESTRICTIONS_FROM_YOUR_PUBLIC_REPOSITORIES",
      "display": "Remove user public repo interaction restrictions",
      "desc": "Removes all interaction restrictions (limitations on comments, issues, or pull requests) from all pu..."
    },
    {
      "name": "GITHUB_REMOVE_ORG_DEV_ENV_SECRET_BY_NAME",
      "display": "Remove org dev env secret by name",
      "desc": "Deletes a github codespaces secret from an organization by its name; this operation is idempotent."
    },
    {
      "name": "GITHUB_REMOVE_ORG_SECRET_BY_NAME",
      "display": "Remove org secret by name",
      "desc": "Permanently removes a specific dependabot secret, by its `secret name`, from the github `org`, makin..."
    },
    {
      "name": "GITHUB_REMOVE_OUTSIDE_COLLABORATOR_FROM_AN_ORGANIZATION",
      "display": "Remove outside collaborator from an organization",
      "desc": "Removes a user, who must be an outside collaborator, from the specified github organization, revokin..."
    },
    {
      "name": "GITHUB_REMOVE_PUBLIC_ORG_MEMBERSHIP",
      "display": "Remove public org membership",
      "desc": "Makes an authenticated user's public membership in an organization private (without removing them fr..."
    },
    {
      "name": "GITHUB_REMOVE_REPO_FROM_ORG_DEV_ENV_SECRET",
      "display": "Removerepofromorgdevenvsecret",
      "desc": "Removes a repository's access to an organization-level codespaces secret, if it was previously grant..."
    },
    {
      "name": "GITHUB_REMOVE_REPO_FROM_ORG_SECRET_WITH_SELECTED_VISIBILITY",
      "display": "Remove selected repo from org secret",
      "desc": "Revokes a specific repository's access to an organization-level dependabot secret, applicable only w..."
    },
    {
      "name": "GITHUB_REMOVE_REQUESTED_REVIEWERS_FROM_A_PULL_REQUEST",
      "display": "Remove requested reviewers from a pull request",
      "desc": "Removes currently assigned user logins and/or team slugs from a github pull request's list of reques..."
    },
    {
      "name": "GITHUB_REMOVE_SELECTED_REPOSITORY_FROM_AN_ORGANIZATION_SECRET",
      "display": "Remove selected repository from an organization secret",
      "desc": "Removes a specific repository's access to an organization-level secret; the repository must have bee..."
    },
    {
      "name": "GITHUB_REMOVE_SELECTED_REPOSITORY_FROM_AN_ORGANIZATION_VARIABLE",
      "display": "Remove selected repository from an organization variable",
      "desc": "Removes a repository's access to an organization variable, if the variable's visibility is 'selected..."
    },
    {
      "name": "GITHUB_REMOVE_STATUS_CHECK_CONTEXTS",
      "display": "Remove status check contexts",
      "desc": "Removes specified status check contexts (passed in the request body as an array of strings) from a p..."
    },
    {
      "name": "GITHUB_REMOVE_STATUS_CHECK_PROTECTION",
      "display": "Remove status check protection",
      "desc": "Removes status check protection from a branch, disabling required status checks for merging pull req..."
    },
    {
      "name": "GITHUB_REMOVE_TEAM_ACCESS_RESTRICTIONS",
      "display": "Remove team access restrictions",
      "desc": "Removes all team-based access restrictions from a specified protected branch; the branch must be pro..."
    },
    {
      "name": "GITHUB_REMOVE_TEAM_MEMBERSHIP_FOR_A_USER",
      "display": "Remove team membership for a user",
      "desc": "Removes a user from a specific team within an organization; this action fails if team synchronizatio..."
    },
    {
      "name": "GITHUB_REMOVE_USER_ACCESS_RESTRICTIONS",
      "display": "Remove user access restrictions",
      "desc": "Removes active user-level access restrictions from a specified protected branch, enabling users with..."
    },
    {
      "name": "GITHUB_REMOVE_USER_AS_A_COLLABORATOR",
      "display": "Remove user as a collaborator",
      "desc": "Removes a user as a collaborator from an organization project; the user must already be a collaborat..."
    },
    {
      "name": "GITHUB_REMOVE_USERS_FROM_CODESPACES_ACCESS_FOR_AN_ORGANIZATION",
      "display": "Remove users from codespaces access for an organization",
      "desc": "Removes selected users from github codespaces billing access for an existing organization."
    },
    {
      "name": "GITHUB_RENAME_A_BRANCH",
      "display": "Rename a branch",
      "desc": "Renames an existing branch in a github repository; the new name must be unique and adhere to github'..."
    },
    {
      "name": "GITHUB_RENDER_A_MARKDOWN_DOCUMENT",
      "display": "Render a markdown document",
      "desc": "Renders markdown to html; for 'gfm' mode, provide 'context' (owner/repo) to correctly link issues, p..."
    },
    {
      "name": "GITHUB_REPLACE_ALL_REPOSITORY_TOPICS",
      "display": "Replace all repository topics",
      "desc": "Replaces all topics of a repository."
    },
    {
      "name": "GITHUB_REPLACE_ORG_SECRET_VISIBILITY_TO_SELECTED",
      "display": "Replace org secret visibility to selected",
      "desc": "Sets an existing dependabot organization secret's visibility to 'selected' and replaces the full lis..."
    },
    {
      "name": "GITHUB_REPLACE_REPO_ACCESS_ON_ORG_DEV_ENV_SECRET_SET",
      "display": "Replace repository access for an org Codespaces secret",
      "desc": "Replaces the list of repositories that can access an existing organization-level codespaces secret w..."
    },
    {
      "name": "GITHUB_REPO_S_CREATE_FOR_AUTHENTICATED_USER",
      "display": "Create a repository for the authenticated user",
      "desc": "Deprecated: use 'create a repository for the authenticated user' instead. creates a new repository f..."
    },
    {
      "name": "GITHUB_REPO_S_CREATE_FORK",
      "display": "Create a fork",
      "desc": "(deprecated: use `create a fork` instead) creates a fork of a specified repository."
    },
    {
      "name": "GITHUB_REPO_S_CREATE_IN_ORG",
      "display": "Create an organization repository",
      "desc": "Deprecated: use `create an organization repository` instead. creates a new repository in the specifi..."
    },
    {
      "name": "GITHUB_REPO_S_CREATE_OR_UPDATE_FILE_CONTENTS",
      "display": "Create or update file contents",
      "desc": "Deprecated: use `create or update file contents` instead; creates or replaces a file in a repository..."
    },
    {
      "name": "GITHUB_REPO_S_GET_CODE_FREQUENCY_STATS",
      "display": "Get the weekly commit activity",
      "desc": "Deprecated: use `get the weekly commit activity` instead. fetches weekly commit statistics (addition..."
    },
    {
      "name": "GITHUB_REPO_S_GET_COMMIT",
      "display": "Get a commit",
      "desc": "Deprecated: use `get a commit`. retrieves a specific commit from a repository by its owner, name, an..."
    },
    {
      "name": "GITHUB_REPO_S_GET_CONTENT",
      "display": "Get repository content",
      "desc": "Deprecated: gets repository file content or directory metadata; use `get repository content` instead..."
    },
    {
      "name": "GITHUB_REPO_S_GET_CONTRIBUTORS_STATS",
      "display": "Get all contributor commit activity",
      "desc": "(deprecated: use `getallcontributorcommitactivity`) fetches commit activity (total commits, weekly a..."
    },
    {
      "name": "GITHUB_REPO_S_LIST_BRANCHES",
      "display": "List branches",
      "desc": "(deprecated: use 'list branches' instead) lists branches for an existing github repository, with an ..."
    },
    {
      "name": "GITHUB_REPO_S_LIST_COLLABORATORS",
      "display": "List repository collaborators (deprecated)",
      "desc": "(deprecated: use `listrepositorycollaborators`) lists repository collaborators, especially for organ..."
    },
    {
      "name": "GITHUB_REPO_S_LIST_COMMITS",
      "display": "List commits",
      "desc": "Deprecated: use `list commits` instead; lists repository commits, including gpg/s/mime signature ver..."
    },
    {
      "name": "GITHUB_REPO_S_LIST_CONTRIBUTORS",
      "display": "List repository contributors",
      "desc": "Deprecated: use `list repository contributors`. lists repository contributors, sorted by contributio..."
    },
    {
      "name": "GITHUB_REPO_S_LIST_FOR_AUTHENTICATED_USER",
      "display": "List repositories for the authenticated user",
      "desc": "Deprecated: use `list repositories for the authenticated user` to list the authenticated user's repo..."
    },
    {
      "name": "GITHUB_REPO_S_LIST_FOR_ORG",
      "display": "List organization repositories",
      "desc": "Deprecated: lists repositories for a github organization; use `list organization repositories` inste..."
    },
    {
      "name": "GITHUB_REPO_S_LIST_FOR_USER",
      "display": "List repositories for a user",
      "desc": "Deprecated: lists public repositories for the specified github user; use `list repositories for a us..."
    },
    {
      "name": "GITHUB_REQUEST_A_GITHUB_PAGES_BUILD",
      "display": "Request a github pages build",
      "desc": "Manually triggers a github pages build for a repository if github pages is enabled, useful for deplo..."
    },
    {
      "name": "GITHUB_REQUEST_REVIEWERS_FOR_A_PULL_REQUEST",
      "display": "Request reviewers for a pull request",
      "desc": "Requests user and/or team reviewers for an open pull request in a repository; requires `owner`, `rep..."
    },
    {
      "name": "GITHUB_REREQUEST_A_CHECK_RUN",
      "display": "Rerequest a check run",
      "desc": "Triggers a re-run of a specific check run in a github repository, which resets its status to 'queued..."
    },
    {
      "name": "GITHUB_REREQUEST_A_CHECK_SUITE",
      "display": "Rerequest a check suite",
      "desc": "Triggers a new run of an existing check suite within a repository, useful for re-running checks with..."
    },
    {
      "name": "GITHUB_RE_RUN_A_JOB_FROM_A_WORKFLOW_RUN",
      "display": "Re-run a job from a workflow run",
      "desc": "Re-runs a specific job and any dependent jobs from a github actions workflow run in the specified re..."
    },
    {
      "name": "GITHUB_RE_RUN_A_WORKFLOW",
      "display": "Rerun a workflow",
      "desc": "Re-runs a specific github actions workflow run identified by its owner, repository, and run id, opti..."
    },
    {
      "name": "GITHUB_RE_RUN_FAILED_JOBS_FROM_A_WORKFLOW_RUN",
      "display": "Rerun failed jobs from a workflow run",
      "desc": "Re-runs all failed jobs and their dependent jobs from a specified workflow run if the run contains p..."
    },
    {
      "name": "GITHUB_RESET_A_TOKEN",
      "display": "Reset a token",
      "desc": "Invalidates the provided oauth `access token` and generates a new one for the github oauth app ident..."
    },
    {
      "name": "GITHUB_RESTORE_A_PACKAGE_FOR_AN_ORGANIZATION",
      "display": "Restore a package for an organization",
      "desc": "Restores a package in an organization, provided it was deleted within the last 30 days."
    },
    {
      "name": "GITHUB_RESTORE_A_PACKAGE_FOR_A_USER",
      "display": "Restore a package for a user",
      "desc": "Restores a user-owned package previously deleted from github packages, if restorable under github's ..."
    },
    {
      "name": "GITHUB_RESTORE_A_PACKAGE_FOR_THE_AUTHENTICATED_USER",
      "display": "Restore a package for the authenticated user",
      "desc": "Restores a package deleted by the authenticated user within the last 30 days, if its namespace and v..."
    },
    {
      "name": "GITHUB_RESTORE_A_PACKAGE_VERSION_FOR_THE_AUTHENTICATED_USER",
      "display": "Restore a package version for the authenticated user",
      "desc": "Restores a package version that was deleted by the authenticated user within the last 30 days."
    },
    {
      "name": "GITHUB_RESTORE_PACKAGE_VERSION_FOR_AN_ORGANIZATION",
      "display": "Restore package version for an organization",
      "desc": "Restores a package version for an organization, provided it was deleted within the last 30 days."
    },
    {
      "name": "GITHUB_RESTORE_PACKAGE_VERSION_FOR_A_USER",
      "display": "Restore package version for a user",
      "desc": "Restores a specific, user-owned package version if it was deleted within the last 30 days and its or..."
    },
    {
      "name": "GITHUB_RETRIEVE_REPO_PUBLIC_KEY_FOR_ENCRYPTION",
      "display": "Retrieve repo public key for encryption",
      "desc": "Gets a repository's public key, used to encrypt secrets for dependabot."
    },
    {
      "name": "GITHUB_REVIEW_ACCESS_WITH_PERSONAL_TOKEN",
      "display": "Review access with personal token",
      "desc": "Approves or denies a pending fine-grained personal access token request for organization resources; ..."
    },
    {
      "name": "GITHUB_REVIEW_DEPLOYMENT_PROTECTION_RULES",
      "display": "Review Custom Deployment Rules For Workflow Run",
      "desc": "Approves or rejects pending custom deployment protection rules for a workflow run by posting a revie..."
    },
    {
      "name": "GITHUB_REVIEW_PENDING_DEPLOYMENTS_FOR_A_WORKFLOW_RUN",
      "display": "Review pending deployments for a workflow run",
      "desc": "Approves or rejects pending deployments for a specific workflow run that are in a 'waiting' state wi..."
    },
    {
      "name": "GITHUB_REVIEW_RESOURCE_REQUESTS_WITH_FINE_GRAINED_TOKENS",
      "display": "Review resource requests with fine grained tokens",
      "desc": "Approves or denies fine-grained personal access token requests for an organization; any specified `p..."
    },
    {
      "name": "GITHUB_REVOKE_AN_INSTALLATION_ACCESS_TOKEN",
      "display": "Revoke an installation access token",
      "desc": "Revokes the github app's current installation access token, immediately invalidating it for api auth..."
    },
    {
      "name": "GITHUB_SEARCH_CODE",
      "display": "Search code",
      "desc": "Searches code file contents and paths on the default branch of github repositories using a query str..."
    },
    {
      "name": "GITHUB_SEARCH_COMMITS",
      "display": "Search commits",
      "desc": "Finds commits on github using a query string (q) supporting keywords and qualifiers, with options fo..."
    },
    {
      "name": "GITHUB_SEARCH_ISSUES_AND_PULL_REQUESTS",
      "display": "Search issues and pull requests",
      "desc": "Searches github for issues and pull requests. use qualifiers to scope searches: `repo:owner/name` fo..."
    },
    {
      "name": "GITHUB_SEARCH_LABELS",
      "display": "Search labels",
      "desc": "Searches for labels within a github repository by keywords in their names or descriptions."
    },
    {
      "name": "GITHUB_SEARCH_REPO_S",
      "display": "Search repositories",
      "desc": "Deprecated: use `search repositories`; this version finds repositories by criteria, including text m..."
    },
    {
      "name": "GITHUB_SEARCH_REPOSITORIES",
      "display": "Search repositories",
      "desc": "Searches github repositories using a flexible query (keywords, qualifiers) with sorting, ordering, a..."
    },
    {
      "name": "GITHUB_SEARCH_TOPICS",
      "display": "Search topics",
      "desc": "Finds topics on github using keywords and qualifiers with github's search syntax, supporting paginat..."
    },
    {
      "name": "GITHUB_SEARCH_USERS",
      "display": "Search users",
      "desc": "Searches for users on github by criteria like username, email, location, followers, or repository as..."
    },
    {
      "name": "GITHUB_SECURITY_ADVISORIES_LIST_GLOBAL_ADVISORIES",
      "display": "List global security advisories",
      "desc": " tags = [\"openworldhint\", \"readonlyhint\", \"mcpignore\"] the text describes how to find global securit..."
    },
    {
      "name": "GITHUB_SET_ADMIN_BRANCH_PROTECTION",
      "display": "Set admin branch protection",
      "desc": "Enables administrator enforcement on a branch, making existing protection rules also apply to admini..."
    },
    {
      "name": "GITHUB_SET_APP_ACCESS_RESTRICTIONS",
      "display": "Set app access restrictions",
      "desc": "Replaces the list of github apps permitted to push to a protected branch; the branch must already be..."
    },
    {
      "name": "GITHUB_SET_A_REPOSITORY_SUBSCRIPTION",
      "display": "Set a repository subscription",
      "desc": "Sets the authenticated user's notification subscription for a repository."
    },
    {
      "name": "GITHUB_SET_A_THREAD_SUBSCRIPTION",
      "display": "Set a thread subscription",
      "desc": "Sets whether a github notification thread is ignored (muted) or unignored (unmuted), for a `thread i..."
    },
    {
      "name": "GITHUB_SET_DEFAULT_WORKFLOW_PERMISSIONS_FOR_AN_ORGANIZATION",
      "display": "Set default workflow permissions for an organization",
      "desc": "Updates an organization's default github token permissions for workflows and whether github actions ..."
    },
    {
      "name": "GITHUB_SET_DEFAULT_WORKFLOW_PERMISSIONS_FOR_A_REPOSITORY",
      "display": "Set default workflow permissions for a repository",
      "desc": "Sets the default permissions for the github token within a repository and configures whether github ..."
    },
    {
      "name": "GITHUB_SET_GITHUB_ACTIONS_PERMISSIONS_FOR_AN_ORGANIZATION",
      "display": "Set GitHub Actions permissions for an organization",
      "desc": "Sets the github actions permissions policy for an organization, specifying which repositories can ru..."
    },
    {
      "name": "GITHUB_SET_GITHUB_ACTIONS_PERMISSIONS_FOR_A_REPOSITORY",
      "display": "Set github actions permissions for a repository",
      "desc": "Sets github actions permissions for a repository, enabling/disabling actions and defining the policy..."
    },
    {
      "name": "GITHUB_SET_INTERACTION_RESTRICTIONS_FOR_AN_ORGANIZATION",
      "display": "Set interaction restrictions for an organization",
      "desc": "Limits interactions (comments, new issues, prs) in an organization's public repositories by user typ..."
    },
    {
      "name": "GITHUB_SET_INTERACTION_RESTRICTIONS_FOR_A_REPOSITORY",
      "display": "Set interaction restrictions for a repository",
      "desc": "Temporarily limits which github users (e.g., existing users, contributors only) can interact (commen..."
    },
    {
      "name": "GITHUB_SET_INTERACTION_RESTRICTIONS_FOR_YOUR_PUBLIC_REPOSITORIES",
      "display": "Set interaction restrictions for your public repositories",
      "desc": "Sets or updates temporary interaction restrictions for all public repositories owned by the authenti..."
    },
    {
      "name": "GITHUB_SET_LABELS_FOR_AN_ISSUE",
      "display": "Set labels for an issue",
      "desc": "Replaces all existing labels on a github issue with a new set of labels."
    },
    {
      "name": "GITHUB_SET_ORG_ALLOWED_ACTIONS",
      "display": "Set allowed actions and workflows for an organization",
      "desc": "Sets the github actions permissions for an existing organization, specifying allowed github-owned ac..."
    },
    {
      "name": "GITHUB_SET_ORG_RUNNER_LABELS",
      "display": "Set custom labels for a self-hosted runner for an organization",
      "desc": "Sets the custom labels for a self-hosted runner in an organization; this operation does not affect d..."
    },
    {
      "name": "GITHUB_SET_PRIMARY_EMAIL_VISIBILITY_FOR_THE_AUTHENTICATED_USER",
      "display": "Set primary email visibility",
      "desc": "Sets the visibility ('public' or 'private') of the authenticated user's primary email address on git..."
    },
    {
      "name": "GITHUB_SET_REPO_ALLOWED_ACTIONS",
      "display": "Set repo allowed actions",
      "desc": "Sets allowed github actions and reusable workflows for a repository, managing permissions for github..."
    },
    {
      "name": "GITHUB_SET_SELECTED_REPOSITORIES_FOR_AN_ORGANIZATION_SECRET",
      "display": "Set selected repositories for an organization secret",
      "desc": "Replaces the list of repositories that can access an organization secret; only effective if the secr..."
    },
    {
      "name": "GITHUB_SET_SELECTED_REPOSITORIES_FOR_AN_ORGANIZATION_VARIABLE",
      "display": "Set selected repositories for an organization variable",
      "desc": "Replaces the list of repositories that can access an organization-level variable; the variable's vis..."
    },
    {
      "name": "GITHUB_SET_SELECTED_REPOSITORIES_FOR_A_USER_SECRET",
      "display": "Set selected repositories for a user secret",
      "desc": "Defines the list of repositories permitted to access a specific codespaces secret for the authentica..."
    },
    {
      "name": "GITHUB_SET_STATUS_CHECK_CONTEXTS",
      "display": "Set status check contexts",
      "desc": "Replaces required status check contexts for a protected branch, requiring admin permissions; an empt..."
    },
    {
      "name": "GITHUB_SET_TEAM_ACCESS_RESTRICTIONS",
      "display": "Set team access restrictions",
      "desc": "Sets team push access for a protected branch by replacing all current teams with a new list of valid..."
    },
    {
      "name": "GITHUB_SET_USER_ACCESS_RESTRICTIONS",
      "display": "Set user access restrictions",
      "desc": "Replaces the list of users with push access to a protected branch using a request body (not in this ..."
    },
    {
      "name": "GITHUB_SET_WORKFLOW_EXTERNAL_ACCESS",
      "display": "Set workflow access level outside repository",
      "desc": "Sets the access level for workflows outside a repository to use actions and reusable workflows withi..."
    },
    {
      "name": "GITHUB_STAR_A_GIST",
      "display": "Star a gist",
      "desc": "Stars a github gist identified by `gist id`; this action is idempotent and returns a 204 no content ..."
    },
    {
      "name": "GITHUB_STAR_A_REPOSITORY_FOR_THE_AUTHENTICATED_USER",
      "display": "Star a repository for the authenticated user",
      "desc": "Stars an existing and accessible repository for the authenticated user; this action is idempotent an..."
    },
    {
      "name": "GITHUB_START_A_CODESPACE_FOR_THE_AUTHENTICATED_USER",
      "display": "Start a codespace for the authenticated user",
      "desc": "Initiates the startup process for an existing github codespace (identified by `codespace name`) if i..."
    },
    {
      "name": "GITHUB_STOP_A_CODESPACE_FOR_AN_ORGANIZATION_USER",
      "display": "Stop a codespace for an organization user",
      "desc": "Stops a codespace, which must be currently running, for a specified member of an organization."
    },
    {
      "name": "GITHUB_STOP_A_CODESPACE_FOR_THE_AUTHENTICATED_USER",
      "display": "Stop a codespace for the authenticated user",
      "desc": "Stops a running or available codespace for the authenticated user, pausing its execution and billing..."
    },
    {
      "name": "GITHUB_SUBMIT_A_REVIEW_FOR_A_PULL_REQUEST",
      "display": "Submit a review for a pull request",
      "desc": "Finalizes a pending pull request review (identified by `review id`) with a required `event` (approve..."
    },
    {
      "name": "GITHUB_SYNC_A_FORK_BRANCH_WITH_THE_UPSTREAM_REPOSITORY",
      "display": "Sync a fork branch with the upstream repository",
      "desc": "Synchronizes a branch in a forked github repository with its upstream counterpart, assuming the repo..."
    },
    {
      "name": "GITHUB_TEST_THE_PUSH_REPOSITORY_WEBHOOK",
      "display": "Test the push repository webhook",
      "desc": "Triggers a simulated push event to test a repository's push webhook; a test event is only delivered ..."
    },
    {
      "name": "GITHUB_TRANSFER_A_REPOSITORY",
      "display": "Transfer a repository",
      "desc": "Initiates a repository transfer to a new owner (who must accept the request); if the new owner is an..."
    },
    {
      "name": "GITHUB_UNBLOCK_A_USER",
      "display": "Unblock a user",
      "desc": "Unblocks a github user, provided they are currently blocked by the authenticated user."
    },
    {
      "name": "GITHUB_UNBLOCK_A_USER_FROM_AN_ORGANIZATION",
      "display": "Unblock a user from an organization",
      "desc": "Unblocks a user from an organization, allowing renewed interaction with its resources, provided the ..."
    },
    {
      "name": "GITHUB_UNFOLLOW_A_USER",
      "display": "Unfollow a user",
      "desc": "Unfollows an existing github user; this action is idempotent, succeeding even if the authenticated u..."
    },
    {
      "name": "GITHUB_UNLOCK_AN_ISSUE",
      "display": "Unlock an issue",
      "desc": "Unlocks a currently locked github issue in the specified repository, allowing new comments and inter..."
    },
    {
      "name": "GITHUB_UNLOCK_AN_ORGANIZATION_REPOSITORY",
      "display": "Unlock an organization repository",
      "desc": "Unlocks an organization repository previously locked by a github migration."
    },
    {
      "name": "GITHUB_UNLOCK_A_USER_REPOSITORY",
      "display": "Unlock a user repository",
      "desc": "Unlocks a repository (`repo name`) that was locked as part of a user migration (`migration id`), mak..."
    },
    {
      "name": "GITHUB_UNSTAR_A_GIST",
      "display": "Unstar a gist",
      "desc": "Removes a star from the specified gist; the action is idempotent and will not error if the gist was ..."
    },
    {
      "name": "GITHUB_UNSTAR_A_REPOSITORY_FOR_THE_AUTHENTICATED_USER",
      "display": "Unstar a repository",
      "desc": "Removes the authenticated user's star from a specified repository, which must already be starred by ..."
    },
    {
      "name": "GITHUB_UPDATE_A_CHECK_RUN",
      "display": "Update a check run",
      "desc": "Updates an existing check run for a specific commit in a repository, allowing modifications to its s..."
    },
    {
      "name": "GITHUB_UPDATE_A_CODE_SCANNING_ALERT",
      "display": "Update a code scanning alert",
      "desc": "Updates a specific code scanning alert in a github repository, primarily to change its state (e.g., ..."
    },
    {
      "name": "GITHUB_UPDATE_A_CODE_SCANNING_DEFAULT_SETUP_CONFIGURATION",
      "display": "Update a code scanning default setup configuration",
      "desc": "Updates the default setup configuration for code scanning in a repository; github advanced security ..."
    },
    {
      "name": "GITHUB_UPDATE_A_CODESPACE_FOR_THE_AUTHENTICATED_USER",
      "display": "Update a codespace for the authenticated user",
      "desc": "Updates an existing github codespace's machine type, display name, or recent folders for the authent..."
    },
    {
      "name": "GITHUB_UPDATE_A_COMMIT_COMMENT",
      "display": "Update a commit comment",
      "desc": "Changes the body of an existing commit comment."
    },
    {
      "name": "GITHUB_UPDATE_A_CUSTOM_ORGANIZATION_ROLE",
      "display": "Update a custom organization role",
      "desc": "Updates an existing custom role in an organization by modifying its name, description, or permission..."
    },
    {
      "name": "GITHUB_UPDATE_A_DEPLOYMENT_BRANCH_POLICY",
      "display": "Update a deployment branch policy",
      "desc": "Updates the name pattern of an existing deployment branch policy for a specific environment in a rep..."
    },
    {
      "name": "GITHUB_UPDATE_A_DISCUSSION",
      "display": "Update a discussion",
      "desc": "Updates the title and/or body of a specific team discussion within an organization."
    },
    {
      "name": "GITHUB_UPDATE_A_DISCUSSION_COMMENT",
      "display": "Update a discussion comment",
      "desc": "Updates the body of a comment in a team's discussion within an organization."
    },
    {
      "name": "GITHUB_UPDATE_A_GIST",
      "display": "Update a gist",
      "desc": "Updates a gist's description, and/or its files (including content, filename changes, or deletion)."
    },
    {
      "name": "GITHUB_UPDATE_A_GIST_COMMENT",
      "display": "Update a gist comment",
      "desc": "Updates an existing comment on a specified gist."
    },
    {
      "name": "GITHUB_UPDATE_A_LABEL",
      "display": "Update a label",
      "desc": "Updates an existing label's name, color, or description within a specified repository."
    },
    {
      "name": "GITHUB_UPDATE_A_MILESTONE",
      "display": "Update a milestone",
      "desc": "Updates a milestone in a repository, identified by `owner`, `repo`, and `milestone number`, by allow..."
    },
    {
      "name": "GITHUB_UPDATE_AN_ENVIRONMENT_VARIABLE",
      "display": "Update an environment variable",
      "desc": "Updates an existing environment variable's name and/or value in a specific github repository environ..."
    },
    {
      "name": "GITHUB_UPDATE_AN_EXISTING_PROJECT_CARD",
      "display": "Update an existing project card",
      "desc": "Updates an existing project card's note and/or archived status, identified by its `card id`."
    },
    {
      "name": "GITHUB_UPDATE_AN_EXISTING_PROJECT_COLUMN",
      "display": "Update an existing project column",
      "desc": "Updates the name of an existing column, identified by `column id`, in a github project (classic)."
    },
    {
      "name": "GITHUB_UPDATE_AN_ISSUE",
      "display": "Update an issue",
      "desc": "Updates an existing github issue's title, body, state, milestone, labels, or assignees; `state reaso..."
    },
    {
      "name": "GITHUB_UPDATE_AN_ISSUE_COMMENT",
      "display": "Update an issue comment",
      "desc": "Updates an existing comment on an issue or pull request within a specified repository."
    },
    {
      "name": "GITHUB_UPDATE_AN_ORGANIZATION",
      "display": "Update an organization",
      "desc": "Updates an organization's settings; changing security-related fields requires admin, owner, or secur..."
    },
    {
      "name": "GITHUB_UPDATE_AN_ORGANIZATION_VARIABLE",
      "display": "Update an organization variable",
      "desc": "Updates an existing github actions organization variable's name, value, or visibility (`all`, `priva..."
    },
    {
      "name": "GITHUB_UPDATE_AN_ORGANIZATION_WEBHOOK",
      "display": "Update an organization webhook",
      "desc": "Updates the configuration (url, content type, secret, ssl verification), subscribed events, active s..."
    },
    {
      "name": "GITHUB_UPDATE_A_PROJECT",
      "display": "Update a project",
      "desc": "Updates an existing github project's attributes if the github projects feature is enabled and at lea..."
    },
    {
      "name": "GITHUB_UPDATE_A_PULL_REQUEST",
      "display": "Update a pull request",
      "desc": "Updates an existing pull request, allowing changes to attributes like title, body, state, base branc..."
    },
    {
      "name": "GITHUB_UPDATE_A_PULL_REQUEST_BRANCH",
      "display": "Update a pull request branch",
      "desc": "Updates an open pull request's head branch by merging the latest changes from its base branch, if me..."
    },
    {
      "name": "GITHUB_UPDATE_A_REFERENCE",
      "display": "Update a reference",
      "desc": "Updates a git reference (e.g., a branch or tag) to a specific commit sha, creating the reference if ..."
    },
    {
      "name": "GITHUB_UPDATE_A_RELEASE",
      "display": "Update a release",
      "desc": "Updates an existing release in a github repository, allowing modification of its attributes; if link..."
    },
    {
      "name": "GITHUB_UPDATE_A_RELEASE_ASSET",
      "display": "Update a release asset",
      "desc": "Updates the name, label, or state of a release asset in a github repository, requiring at least one ..."
    },
    {
      "name": "GITHUB_UPDATE_A_REPOSITORY",
      "display": "Update a repository",
      "desc": "Updates settings for an existing github repository, such as name, description, visibility, merge str..."
    },
    {
      "name": "GITHUB_UPDATE_A_REPOSITORY_INVITATION",
      "display": "Update a repository invitation",
      "desc": "Updates an active repository invitation to modify the invited user's permissions; the specified repo..."
    },
    {
      "name": "GITHUB_UPDATE_A_REPOSITORY_RULESET",
      "display": "Update a repository ruleset",
      "desc": "Updates an existing repository ruleset, identified by `ruleset id` for a given repository, allowing ..."
    },
    {
      "name": "GITHUB_UPDATE_A_REPOSITORY_VARIABLE",
      "display": "Update a repository variable",
      "desc": "Updates the name and/or value of an existing github actions variable in a repository."
    },
    {
      "name": "GITHUB_UPDATE_A_REPOSITORY_WEBHOOK",
      "display": "Update a repository webhook",
      "desc": "Updates the url, content type, secret, ssl verification, events, or active status for an existing re..."
    },
    {
      "name": "GITHUB_UPDATE_A_REVIEW_COMMENT_FOR_A_PULL_REQUEST",
      "display": "Update a review comment for a pull request",
      "desc": "Updates the body of an existing review comment on a pull request."
    },
    {
      "name": "GITHUB_UPDATE_A_REVIEW_FOR_A_PULL_REQUEST",
      "display": "Update a review for a pull request",
      "desc": "Updates the body text of an existing pull request review."
    },
    {
      "name": "GITHUB_UPDATE_A_TEAM",
      "display": "Update a team",
      "desc": "Updates a team's settings (e.g., name, description, privacy, parent team) within a github organizati..."
    },
    {
      "name": "GITHUB_UPDATE_A_WEBHOOK_CONFIGURATION_FOR_AN_ORGANIZATION",
      "display": "Update a webhook configuration for an organization",
      "desc": "Updates the configuration (url, content type, secret, ssl verification) for an existing webhook with..."
    },
    {
      "name": "GITHUB_UPDATE_A_WEBHOOK_CONFIGURATION_FOR_A_REPOSITORY",
      "display": "Update a webhook configuration for a repository",
      "desc": "Updates the configuration (e.g., payload url, content type, secret, ssl verification) for an existin..."
    },
    {
      "name": "GITHUB_UPDATE_BRANCH_PROTECTION",
      "display": "Update branch protection",
      "desc": "Updates the protection settings for an existing branch in a repository, which must not contain wildc..."
    },
    {
      "name": "GITHUB_UPDATE_GIT_LFS_PREFERENCE",
      "display": "Update git lfs preference",
      "desc": "Sets the git large file storage (lfs) preference for a repository, typically before initiating a sou..."
    },
    {
      "name": "GITHUB_UPDATE_INFORMATION_ABOUT_A_GITHUB_PAGES_SITE",
      "display": "Update information about a github pages site",
      "desc": "Updates the configuration for a github pages site (e.g., custom domain, https, build type, source); ..."
    },
    {
      "name": "GITHUB_UPDATE_PULL_REQUEST_REVIEW_PROTECTION",
      "display": "Update pull request review protection",
      "desc": "Updates pull request review protection settings (e.g., required approvals, review dismissal, bypass ..."
    },
    {
      "name": "GITHUB_UPDATE_REPOSITORY_PREFERENCES_FOR_CHECK_SUITES",
      "display": "Update repository preferences for check suites",
      "desc": "Updates repository preferences for automatic check suite creation on code pushes, allowing configura..."
    },
    {
      "name": "GITHUB_UPDATE_RESOURCE_ACCESS_WITH_TOKENS",
      "display": "Update resource access with tokens",
      "desc": "Revokes organization access for the personal access tokens identified by `pat ids`; this action must..."
    },
    {
      "name": "GITHUB_UPDATE_STATUS_CHECK_PROTECTION",
      "display": "Update status check protection",
      "desc": "Updates required status checks for a branch, optionally requiring it to be up-to-date before merging..."
    },
    {
      "name": "GITHUB_UPDATE_THE_AUTHENTICATED_USER",
      "display": "Update the authenticated user",
      "desc": "Updates the authenticated user's github profile; a new public email must be verified, and existing p..."
    },
    {
      "name": "GITHUB_UPDATE_TOKEN_ORG_ACCESS",
      "display": "Update token org access",
      "desc": "Revokes a fine-grained personal access token's access to an organization, usable only by github apps..."
    },
    {
      "name": "GITHUB_UPLOAD_AN_ANALYSIS_AS_SARIF_DATA",
      "display": "Upload an analysis as sarif data",
      "desc": "Uploads a gzipped and base64 encoded sarif file to a github repository for a specific commit and ref..."
    },
    {
      "name": "GITHUB_USERS_GET_AUTHENTICATED",
      "display": "Get the authenticated user",
      "desc": "[deprecated] retrieves the authenticated user's information; use `get the authenticated user` instea..."
    },
    {
      "name": "GITHUB_USERS_GET_BY_USERNAME",
      "display": "Get a user",
      "desc": "Deprecated: use the `getauser` action to retrieve a github user's public profile by username."
    },
    {
      "name": "GITHUB_USERS_GET_CONTEXT_FOR_USER",
      "display": "Get contextual information for a user",
      "desc": "Retrieves contextual hovercard information for a github user. (deprecated: please use the `get conte..."
    },
    {
      "name": "GITHUB_USERS_LIST_FOLLOWERS_FOR_AUTHENTICATED_USER",
      "display": "List followers of the authenticated user",
      "desc": "Deprecated: lists users following the authenticated github user; use `list followers of the authenti..."
    },
    {
      "name": "GITHUB_USERS_LIST_PUBLIC_EMAILS_FOR_AUTHENTICATED_USER",
      "display": "List public email addresses for the authenticated user",
      "desc": "Deprecated: use `listpublicemailaddressesfortheauthenticateduser` instead; lists public email addres..."
    },
    {
      "name": "GITHUB_USERS_LIST_SOCIAL_ACCOUNTS_FOR_USER",
      "display": "List social accounts for a user",
      "desc": "Deprecated: lists social media accounts for an existing github user; use 'list social accounts for a..."
    },
    {
      "name": "GITHUB_VERIFY_DEV_CONTAINER_PERMISSIONS_ACCEPTED",
      "display": "Verify dev container permissions accepted",
      "desc": "Verifies if the authenticated user has accepted permissions for a specific devcontainer configuratio..."
    }
  ],
  "GMAIL": [
    {
      "name": "GMAIL_ADD_LABEL_TO_EMAIL",
      "display": "Modify email labels",
      "desc": "Adds and/or removes specified gmail labels for a message; ensure `message id` and all `label ids` ar..."
    },
    {
      "name": "GMAIL_CREATE_EMAIL_DRAFT",
      "display": "Create email draft",
      "desc": "Creates a gmail email draft, supporting to/cc/bcc, subject, plain/html body (ensure `is html=true` f..."
    },
    {
      "name": "GMAIL_CREATE_LABEL",
      "display": "Create label",
      "desc": "Creates a new label with a unique name in the specified user's gmail account."
    },
    {
      "name": "GMAIL_DELETE_DRAFT",
      "display": "Delete Draft",
      "desc": "Permanently deletes a specific gmail draft using its id; ensure the draft exists and the user has ne..."
    },
    {
      "name": "GMAIL_DELETE_MESSAGE",
      "display": "Delete message",
      "desc": "Permanently deletes a specific email message by its id from a gmail mailbox; for `user id`, use 'me'..."
    },
    {
      "name": "GMAIL_FETCH_EMAILS",
      "display": "Fetch emails",
      "desc": "Fetches a list of email messages from a gmail account, supporting filtering, pagination, and optiona..."
    },
    {
      "name": "GMAIL_FETCH_MESSAGE_BY_MESSAGE_ID",
      "display": "Fetch message by message ID",
      "desc": "Fetches a specific email message by its id, provided the `message id` exists and is accessible to th..."
    },
    {
      "name": "GMAIL_FETCH_MESSAGE_BY_THREAD_ID",
      "display": "Fetch Message by Thread ID",
      "desc": "Retrieves messages from a gmail thread using its `thread id`, where the thread must be accessible by..."
    },
    {
      "name": "GMAIL_GET_ATTACHMENT",
      "display": "Get Gmail attachment",
      "desc": "Retrieves a specific attachment by id from a message in a user's gmail mailbox, requiring valid mess..."
    },
    {
      "name": "GMAIL_GET_CONTACTS",
      "display": "Get contacts",
      "desc": "Fetches contacts (connections) for the authenticated google account, allowing selection of specific ..."
    },
    {
      "name": "GMAIL_GET_PEOPLE",
      "display": "Get People",
      "desc": "Retrieves either a specific person's details (using `resource name`) or lists 'other contacts' (if `..."
    },
    {
      "name": "GMAIL_GET_PROFILE",
      "display": "Get Profile",
      "desc": "Retrieves key gmail profile information (email address, message/thread totals, history id) for a use..."
    },
    {
      "name": "GMAIL_LIST_DRAFTS",
      "display": "List drafts",
      "desc": "Retrieves a paginated list of email drafts from a user's gmail account. use verbose=true to get full..."
    },
    {
      "name": "GMAIL_LIST_LABELS",
      "display": "List Gmail labels",
      "desc": "Retrieves a list of all system and user-created labels for the specified gmail account."
    },
    {
      "name": "GMAIL_LIST_THREADS",
      "display": "List threads",
      "desc": "Retrieves a list of email threads from a gmail account, identified by `user id` (email address or 'm..."
    },
    {
      "name": "GMAIL_MODIFY_THREAD_LABELS",
      "display": "Modify thread labels",
      "desc": "Adds or removes specified existing label ids from a gmail thread, affecting all its messages; ensure..."
    },
    {
      "name": "GMAIL_MOVE_TO_TRASH",
      "display": "Move to Trash",
      "desc": "Moves an existing, non-deleted email message to the trash for the specified user."
    },
    {
      "name": "GMAIL_PATCH_LABEL",
      "display": "Patch Label",
      "desc": "Patches the specified label."
    },
    {
      "name": "GMAIL_REMOVE_LABEL",
      "display": "Remove label",
      "desc": "Permanently deletes a specific, existing user-created gmail label by its id for a user; cannot delet..."
    },
    {
      "name": "GMAIL_REPLY_TO_THREAD",
      "display": "Reply to email thread",
      "desc": "Sends a reply within a specific gmail thread using the original thread's subject, requiring a valid ..."
    },
    {
      "name": "GMAIL_SEARCH_PEOPLE",
      "display": "Search People",
      "desc": "Searches contacts by matching the query against names, nicknames, emails, phone numbers, and organiz..."
    },
    {
      "name": "GMAIL_SEND_DRAFT",
      "display": "Send Draft",
      "desc": "Sends the specified, existing draft to the recipients in the to, cc, and bcc headers."
    },
    {
      "name": "GMAIL_SEND_EMAIL",
      "display": "Send Email",
      "desc": "Sends an email via gmail api using the authenticated user's google profile display name, requiring `..."
    }
  ],
  "GOOGLEDRIVE": [
    {
      "name": "GOOGLEDRIVE_ADD_FILE_SHARING_PREFERENCE",
      "display": "Add file sharing preference",
      "desc": "Modifies sharing permissions for an existing google drive file, granting a specified role to a user,..."
    },
    {
      "name": "GOOGLEDRIVE_COPY_FILE",
      "display": "Copy file",
      "desc": "Duplicates an existing file in google drive, identified by its `file id`."
    },
    {
      "name": "GOOGLEDRIVE_CREATE_COMMENT",
      "display": "Create Comment",
      "desc": "Tool to create a comment on a file. use when you need to add a new comment to a specific file in goo..."
    },
    {
      "name": "GOOGLEDRIVE_CREATE_DRIVE",
      "display": "Create Shared Drive",
      "desc": "Tool to create a new shared drive. use when you need to programmatically create a new shared drive f..."
    },
    {
      "name": "GOOGLEDRIVE_CREATE_FILE",
      "display": "Create File or Folder",
      "desc": "Creates a new file or folder with metadata. use to create empty files or folders, or files with cont..."
    },
    {
      "name": "GOOGLEDRIVE_CREATE_FILE_FROM_TEXT",
      "display": "Create a File from Text",
      "desc": "Creates a new file in google drive from provided text content (up to 10mb), supporting various forma..."
    },
    {
      "name": "GOOGLEDRIVE_CREATE_FOLDER",
      "display": "Create a folder",
      "desc": "Creates a new folder in google drive, optionally within a parent folder specified by its id or name;..."
    },
    {
      "name": "GOOGLEDRIVE_CREATE_REPLY",
      "display": "Create Reply",
      "desc": "Tool to create a reply to a comment in google drive. use when you need to respond to an existing com..."
    },
    {
      "name": "GOOGLEDRIVE_CREATE_SHORTCUT_TO_FILE",
      "display": "Create Shortcut to File/Folder",
      "desc": "Tool to create a shortcut to a file or folder in google drive. use when you need to link to an exist..."
    },
    {
      "name": "GOOGLEDRIVE_DELETE_COMMENT",
      "display": "Delete Comment",
      "desc": "Deletes a comment from a file. use when you need to remove a specific comment from a google drive fi..."
    },
    {
      "name": "GOOGLEDRIVE_DELETE_DRIVE",
      "display": "Delete Shared Drive",
      "desc": "Tool to permanently delete a shared drive. use when you need to remove a shared drive and its conten..."
    },
    {
      "name": "GOOGLEDRIVE_DELETE_PERMISSION",
      "display": "Delete Permission",
      "desc": "Deletes a permission from a file by permission id. use when you need to revoke access for a specific..."
    },
    {
      "name": "GOOGLEDRIVE_DELETE_REPLY",
      "display": "Delete Reply",
      "desc": "Tool to delete a specific reply by reply id. use when you need to remove a reply from a comment on a..."
    },
    {
      "name": "GOOGLEDRIVE_DOWNLOAD_FILE",
      "display": "Download a file from Google Drive",
      "desc": "Downloads a file from google drive by its id. for google workspace documents (docs, sheets, slides),..."
    },
    {
      "name": "GOOGLEDRIVE_EDIT_FILE",
      "display": "Edit File",
      "desc": "Updates an existing google drive file by overwriting its entire content with new text (max 10mb)."
    },
    {
      "name": "GOOGLEDRIVE_EMPTY_TRASH",
      "display": "Empty Trash",
      "desc": "Tool to permanently delete all of the user's trashed files. use when you want to empty the trash in ..."
    },
    {
      "name": "GOOGLEDRIVE_FILES_MODIFY_LABELS",
      "display": "Modify File Labels",
      "desc": "Modifies the set of labels applied to a file. returns a list of the labels that were added or modifi..."
    },
    {
      "name": "GOOGLEDRIVE_FIND_FILE",
      "display": "Find file",
      "desc": "Tool to list or search for files and folders in google drive. use when you need to find specific fil..."
    },
    {
      "name": "GOOGLEDRIVE_FIND_FOLDER",
      "display": "Find folder",
      "desc": "Tool to find a folder in google drive by its name and optionally a parent folder. use when you need ..."
    },
    {
      "name": "GOOGLEDRIVE_GENERATE_IDS",
      "display": "Generate File IDs",
      "desc": "Generates a set of file ids which can be provided in create or copy requests. use when you need to p..."
    },
    {
      "name": "GOOGLEDRIVE_GET_ABOUT",
      "display": "Get about",
      "desc": "Tool to retrieve information about the user, the user's drive, and system capabilities. use when you..."
    },
    {
      "name": "GOOGLEDRIVE_GET_CHANGES_START_PAGE_TOKEN",
      "display": "Get Changes Start Page Token",
      "desc": "Tool to get the starting pagetoken for listing future changes in google drive. use this when you nee..."
    },
    {
      "name": "GOOGLEDRIVE_GET_COMMENT",
      "display": "Get Comment",
      "desc": "Tool to get a comment by id. use when you need to retrieve a specific comment from a google drive fi..."
    },
    {
      "name": "GOOGLEDRIVE_GET_DRIVE",
      "display": "Get Shared Drive",
      "desc": "Tool to get a shared drive by id. use when you need to retrieve information about a specific shared ..."
    },
    {
      "name": "GOOGLEDRIVE_GET_FILE_METADATA",
      "display": "Get File Metadata",
      "desc": "Tool to get a file's metadata by id. use when you need to retrieve the metadata for a specific file ..."
    },
    {
      "name": "GOOGLEDRIVE_GET_PERMISSION",
      "display": "Get Permission",
      "desc": "Gets a permission by id. use this tool to retrieve a specific permission for a file or shared drive."
    },
    {
      "name": "GOOGLEDRIVE_GET_REPLY",
      "display": "Get Reply",
      "desc": "Tool to get a specific reply to a comment on a file. use when you need to retrieve the details of a ..."
    },
    {
      "name": "GOOGLEDRIVE_GET_REVISION",
      "display": "Get Revision",
      "desc": "Tool to get a specific revision's metadata by revision id. use when you need to retrieve information..."
    },
    {
      "name": "GOOGLEDRIVE_GOOGLE_DRIVE_DELETE_FOLDER_OR_FILE_ACTION",
      "display": "Delete folder or file",
      "desc": "Tool to delete a file or folder in google drive. use when you need to permanently remove a specific ..."
    },
    {
      "name": "GOOGLEDRIVE_HIDE_DRIVE",
      "display": "Hide Shared Drive",
      "desc": "Tool to hide a shared drive from the default view. use when you want to remove a shared drive from t..."
    },
    {
      "name": "GOOGLEDRIVE_LIST_CHANGES",
      "display": "List Changes",
      "desc": "Tool to list the changes for a user or shared drive. use when you need to track modifications to fil..."
    },
    {
      "name": "GOOGLEDRIVE_LIST_COMMENTS",
      "display": "List Comments",
      "desc": "Tool to list all comments for a file in google drive. use when you need to retrieve comments associa..."
    },
    {
      "name": "GOOGLEDRIVE_LIST_FILE_LABELS",
      "display": "List File Labels",
      "desc": "Tool to list the labels on a file. use when you need to retrieve all labels associated with a specif..."
    },
    {
      "name": "GOOGLEDRIVE_LIST_FILES",
      "display": "List Files and Folders",
      "desc": "Tool to list a user's files and folders in google drive. use this to search or browse for files and ..."
    },
    {
      "name": "GOOGLEDRIVE_LIST_PERMISSIONS",
      "display": "List Permissions",
      "desc": "Tool to list a file's permissions. use when you need to retrieve all permissions associated with a s..."
    },
    {
      "name": "GOOGLEDRIVE_LIST_REPLIES_TO_COMMENT",
      "display": "List Replies to Comment",
      "desc": "Tool to list replies to a comment in google drive. use this when you need to retrieve all replies as..."
    },
    {
      "name": "GOOGLEDRIVE_LIST_REVISIONS",
      "display": "List File Revisions",
      "desc": "Tool to list a file's revisions. use when you need to retrieve the revision history of a specific fi..."
    },
    {
      "name": "GOOGLEDRIVE_LIST_SHARED_DRIVES",
      "display": "List Shared Drives",
      "desc": "Tool to list the user's shared drives. use when you need to get a list of all shared drives accessib..."
    },
    {
      "name": "GOOGLEDRIVE_MOVE_FILE",
      "display": "Move File",
      "desc": "Tool to move a file from one folder to another in google drive. use when you need to reorganize file..."
    },
    {
      "name": "GOOGLEDRIVE_PARSE_FILE",
      "display": "Export or download a file",
      "desc": "Deprecated: exports google workspace files (max 10mb) to a specified format using `mime type`, or do..."
    },
    {
      "name": "GOOGLEDRIVE_STOP_WATCH_CHANNEL",
      "display": "Stop Watch Channel",
      "desc": "Tool to stop watching resources through a specified channel. use this when you want to stop receivin..."
    },
    {
      "name": "GOOGLEDRIVE_UNHIDE_DRIVE",
      "display": "Unhide Shared Drive",
      "desc": "Tool to unhide a shared drive. use when you need to restore a shared drive to the default view."
    },
    {
      "name": "GOOGLEDRIVE_UNTRASH_FILE",
      "display": "Untrash File",
      "desc": "Tool to restore a file from the trash. use when you need to recover a deleted file. this action upda..."
    },
    {
      "name": "GOOGLEDRIVE_UPDATE_COMMENT",
      "display": "Update Comment",
      "desc": "Tool to update an existing comment on a google drive file. use when you need to change the content o..."
    },
    {
      "name": "GOOGLEDRIVE_UPDATE_DRIVE",
      "display": "Update Shared Drive",
      "desc": "Tool to update the metadata for a shared drive. use when you need to modify properties like the name..."
    },
    {
      "name": "GOOGLEDRIVE_UPDATE_FILE_PUT",
      "display": "Update File (Metadata)",
      "desc": "Updates file metadata. uses patch semantics (partial update) as per google drive api v3. use this to..."
    },
    {
      "name": "GOOGLEDRIVE_UPDATE_FILE_REVISION_METADATA",
      "display": "Update File Revision Metadata",
      "desc": "Updates metadata of a file revision (e.g., keepforever, publish). use this tool to modify the metada..."
    },
    {
      "name": "GOOGLEDRIVE_UPDATE_PERMISSION",
      "display": "Update Permission",
      "desc": "Tool to update a permission with patch semantics. use when you need to modify an existing permission..."
    },
    {
      "name": "GOOGLEDRIVE_UPDATE_REPLY",
      "display": "Update Reply",
      "desc": "Tool to update a reply to a comment on a google drive file. use when you need to modify the content ..."
    },
    {
      "name": "GOOGLEDRIVE_UPLOAD_FILE",
      "display": "Upload File",
      "desc": "Uploads a file (max 5mb) to google drive, moving it to a specified folder if a valid folder id is pr..."
    },
    {
      "name": "GOOGLEDRIVE_WATCH_CHANGES",
      "display": "Watch Drive Changes",
      "desc": "Tool to subscribe to changes for a user or shared drive in google drive. use when you need to monito..."
    }
  ],
  "GOOGLESHEETS": [
    {
      "name": "GOOGLESHEETS_ADD_SHEET",
      "display": "Add Sheet to Spreadsheet",
      "desc": "Adds a new sheet (worksheet) to a spreadsheet. use this tool to create a new tab within an existing ..."
    },
    {
      "name": "GOOGLESHEETS_AGGREGATE_COLUMN_DATA",
      "display": "Aggregate Column Data",
      "desc": "Searches for rows where a specific column matches a value and performs mathematical operations on da..."
    },
    {
      "name": "GOOGLESHEETS_APPEND_DIMENSION",
      "display": "Append Dimension",
      "desc": "Tool to append new rows or columns to a sheet, increasing its size. use when you need to add empty r..."
    },
    {
      "name": "GOOGLESHEETS_BATCH_GET",
      "display": "Batch get spreadsheet",
      "desc": "Retrieves data from specified cell ranges in a google spreadsheet; ensure the spreadsheet has at lea..."
    },
    {
      "name": "GOOGLESHEETS_BATCH_UPDATE",
      "display": "Batch update spreadsheet",
      "desc": "Updates a specified range in a google sheet with given values, or appends them as new rows if `first..."
    },
    {
      "name": "GOOGLESHEETS_BATCH_UPDATE_VALUES_BY_DATA_FILTER",
      "display": "Batch Update Values by Data Filter",
      "desc": "Tool to update values in ranges matching data filters. use when you need to update specific data in ..."
    },
    {
      "name": "GOOGLESHEETS_CLEAR_BASIC_FILTER",
      "display": "Clear Basic Filter",
      "desc": "Tool to clear the basic filter from a sheet. use when you need to remove an existing basic filter fr..."
    },
    {
      "name": "GOOGLESHEETS_CLEAR_VALUES",
      "display": "Clear spreadsheet values",
      "desc": "Clears cell content (preserving formatting and notes) from a specified a1 notation range in a google..."
    },
    {
      "name": "GOOGLESHEETS_CREATE_CHART",
      "display": "Create Chart in Google Sheets",
      "desc": "Create a chart in a google sheets spreadsheet using the specified data range and chart type."
    },
    {
      "name": "GOOGLESHEETS_CREATE_GOOGLE_SHEET1",
      "display": "Create a Google Sheet",
      "desc": "Creates a new google spreadsheet in google drive using the provided title."
    },
    {
      "name": "GOOGLESHEETS_CREATE_SPREADSHEET_COLUMN",
      "display": "Create spreadsheet column",
      "desc": "Creates a new column in a google spreadsheet, requiring a valid `spreadsheet id` and an existing `sh..."
    },
    {
      "name": "GOOGLESHEETS_CREATE_SPREADSHEET_ROW",
      "display": "Create spreadsheet row",
      "desc": "Inserts a new, empty row into a specified sheet of a google spreadsheet at a given index, optionally..."
    },
    {
      "name": "GOOGLESHEETS_DELETE_DIMENSION",
      "display": "Delete Dimension (Rows/Columns)",
      "desc": "Tool to delete specified rows or columns from a sheet in a google spreadsheet. use when you need to ..."
    },
    {
      "name": "GOOGLESHEETS_DELETE_SHEET",
      "display": "Delete Sheet",
      "desc": "Tool to delete a sheet (worksheet) from a spreadsheet. use when you need to remove a specific sheet ..."
    },
    {
      "name": "GOOGLESHEETS_EXECUTE_SQL",
      "display": "Execute SQL on Spreadsheet",
      "desc": "Execute sql queries against google sheets tables. supports select, insert, update, and delete operat..."
    },
    {
      "name": "GOOGLESHEETS_FIND_WORKSHEET_BY_TITLE",
      "display": "Find worksheet by title",
      "desc": "Finds a worksheet by its exact, case-sensitive title within a google spreadsheet; returns a boolean ..."
    },
    {
      "name": "GOOGLESHEETS_FORMAT_CELL",
      "display": "Format cell",
      "desc": "Applies text and background cell formatting to a specified range in a google sheets worksheet."
    },
    {
      "name": "GOOGLESHEETS_GET_SHEET_NAMES",
      "display": "Get sheet names",
      "desc": "Lists all worksheet names from a specified google spreadsheet (which must exist), useful for discove..."
    },
    {
      "name": "GOOGLESHEETS_GET_SPREADSHEET_BY_DATA_FILTER",
      "display": "Get Spreadsheet by Data Filter",
      "desc": "Returns the spreadsheet at the given id, filtered by the specified data filters. use this tool when ..."
    },
    {
      "name": "GOOGLESHEETS_GET_SPREADSHEET_INFO",
      "display": "Get spreadsheet info",
      "desc": "Retrieves comprehensive metadata for a google spreadsheet using its id, excluding cell data."
    },
    {
      "name": "GOOGLESHEETS_GET_TABLE_SCHEMA",
      "display": "Get Table Schema",
      "desc": "This action is used to get the schema of a table in a google spreadsheet, call this action to get th..."
    },
    {
      "name": "GOOGLESHEETS_INSERT_DIMENSION",
      "display": "Insert Dimension in Google Sheet",
      "desc": "Tool to insert new rows or columns into a sheet at a specified location. use when you need to add em..."
    },
    {
      "name": "GOOGLESHEETS_LIST_TABLES",
      "display": "List Tables in Spreadsheet",
      "desc": "This action is used to list all tables in a google spreadsheet, call this action to get the list of ..."
    },
    {
      "name": "GOOGLESHEETS_LOOKUP_SPREADSHEET_ROW",
      "display": "Look up spreadsheet row",
      "desc": "Finds the first row in a google spreadsheet where a cell's entire content exactly matches the query ..."
    },
    {
      "name": "GOOGLESHEETS_QUERY_TABLE",
      "display": "Query Spreadsheet Table",
      "desc": "This action is used to query a table in a google spreadsheet, call this action to query a table in a..."
    },
    {
      "name": "GOOGLESHEETS_SEARCH_DEVELOPER_METADATA",
      "display": "Search Developer Metadata",
      "desc": "Tool to search for developer metadata in a spreadsheet. use when you need to find specific metadata ..."
    },
    {
      "name": "GOOGLESHEETS_SEARCH_SPREADSHEETS",
      "display": "Search Spreadsheets",
      "desc": "Search for google spreadsheets using various filters including name, content, date ranges, and more."
    },
    {
      "name": "GOOGLESHEETS_SET_BASIC_FILTER",
      "display": "Set Basic Filter",
      "desc": "Tool to set a basic filter on a sheet in a google spreadsheet. use when you need to filter or sort d..."
    },
    {
      "name": "GOOGLESHEETS_SHEET_FROM_JSON",
      "display": "Create sheet from JSON",
      "desc": "Creates a new google spreadsheet and populates its first worksheet from `sheet json`, which must be ..."
    },
    {
      "name": "GOOGLESHEETS_SPREADSHEETS_SHEETS_COPY_TO",
      "display": "Copy Sheet to Another Spreadsheet",
      "desc": "Tool to copy a single sheet from a spreadsheet to another spreadsheet. use when you need to duplicat..."
    },
    {
      "name": "GOOGLESHEETS_SPREADSHEETS_VALUES_APPEND",
      "display": "Append Values to Spreadsheet",
      "desc": "Tool to append values to a spreadsheet. use when you need to add new data to the end of an existing ..."
    },
    {
      "name": "GOOGLESHEETS_SPREADSHEETS_VALUES_BATCH_CLEAR",
      "display": "Batch Clear Spreadsheet Values",
      "desc": "Tool to clear one or more ranges of values from a spreadsheet. use when you need to remove data from..."
    },
    {
      "name": "GOOGLESHEETS_SPREADSHEETS_VALUES_BATCH_CLEAR_BY_DATA_FILTER",
      "display": "Batch Clear Values By Data Filter",
      "desc": "Clears one or more ranges of values from a spreadsheet using data filters. the caller must specify t..."
    },
    {
      "name": "GOOGLESHEETS_SPREADSHEETS_VALUES_BATCH_GET_BY_DATA_FILTER",
      "display": "Batch Get Spreadsheet Values by Data Filter",
      "desc": "Tool to return one or more ranges of values from a spreadsheet that match the specified data filters..."
    },
    {
      "name": "GOOGLESHEETS_UPDATE_SHEET_PROPERTIES",
      "display": "Update Sheet Properties",
      "desc": "Tool to update properties of a sheet (worksheet) within a google spreadsheet, such as its title, ind..."
    },
    {
      "name": "GOOGLESHEETS_UPDATE_SPREADSHEET_PROPERTIES",
      "display": "Update Spreadsheet Properties",
      "desc": "Tool to update properties of a spreadsheet, such as its title, locale, or auto-recalculation setting..."
    }
  ],
  "NOTION": [
    {
      "name": "NOTION_ADD_MULTIPLE_PAGE_CONTENT",
      "display": "Add multiple content blocks (bulk, user-friendly)",
      "desc": "Efficiently adds multiple standard content blocks to a notion page in a single api call with automat..."
    },
    {
      "name": "NOTION_ADD_PAGE_CONTENT",
      "display": "Add content to Notion page",
      "desc": "Deprecated: appends a single content block to a notion page or a parent block (must be page, toggle,..."
    },
    {
      "name": "NOTION_APPEND_BLOCK_CHILDREN",
      "display": "Append complex blocks (advanced, full control)",
      "desc": "Appends complex blocks with full notion block structure to a parent block or page. use for advanced ..."
    },
    {
      "name": "NOTION_ARCHIVE_NOTION_PAGE",
      "display": "Archive Notion Page",
      "desc": "Archives (moves to trash) or unarchives (restores from trash) a specified notion page."
    },
    {
      "name": "NOTION_CREATE_COMMENT",
      "display": "Create comment",
      "desc": "Adds a comment to a notion page (via `parent page id`) or to an existing discussion thread (via `dis..."
    },
    {
      "name": "NOTION_CREATE_DATABASE",
      "display": "Create Notion Database",
      "desc": "Creates a new notion database as a subpage under a specified parent page with a defined properties s..."
    },
    {
      "name": "NOTION_CREATE_NOTION_PAGE",
      "display": "Create Notion page",
      "desc": "Creates a new empty page in a notion workspace."
    },
    {
      "name": "NOTION_DELETE_BLOCK",
      "display": "Delete a block",
      "desc": "Archives a notion block, page, or database using its id, which sets its 'archived' property to true ..."
    },
    {
      "name": "NOTION_DUPLICATE_PAGE",
      "display": "Duplicate page",
      "desc": "Duplicates a notion page, including all its content, properties, and nested blocks, under a specifie..."
    },
    {
      "name": "NOTION_FETCH_BLOCK_CONTENTS",
      "display": "Fetch Notion Block Children",
      "desc": "Retrieves a paginated list of direct, first-level child block objects along with contents for a give..."
    },
    {
      "name": "NOTION_FETCH_BLOCK_METADATA",
      "display": "Fetch Notion block metadata",
      "desc": "Fetches metadata for a notion block (or page, as pages are blocks) using its valid uuid; if the bloc..."
    },
    {
      "name": "NOTION_FETCH_COMMENTS",
      "display": "Fetch comments",
      "desc": "Fetches unresolved comments for a specified notion block or page id."
    },
    {
      "name": "NOTION_FETCH_DATA",
      "display": "Fetch Notion Data",
      "desc": "Fetches notion items (pages and/or databases) from the notion workspace, use this to get minimal dat..."
    },
    {
      "name": "NOTION_FETCH_DATABASE",
      "display": "Fetch Database",
      "desc": "Fetches a notion database's structural metadata (properties, title, etc.) via its `database id`, not..."
    },
    {
      "name": "NOTION_FETCH_ROW",
      "display": "Fetch database row",
      "desc": "Retrieves a notion database row's properties and metadata; use fetch block contents for page content..."
    },
    {
      "name": "NOTION_GET_ABOUT_ME",
      "display": "Get About Me",
      "desc": "Retrieves the user object for the bot associated with the current notion integration token, typicall..."
    },
    {
      "name": "NOTION_GET_ABOUT_USER",
      "display": "Get about user",
      "desc": "Retrieves detailed information about a specific notion user, such as their name, avatar, and email, ..."
    },
    {
      "name": "NOTION_GET_PAGE_PROPERTY_ACTION",
      "display": "Get page property",
      "desc": "Call this to get a specific property from a notion page when you have a valid `page id` and `propert..."
    },
    {
      "name": "NOTION_INSERT_ROW_DATABASE",
      "display": "Insert row database",
      "desc": "Creates a new page (row) in a specified notion database."
    },
    {
      "name": "NOTION_LIST_USERS",
      "display": "List users",
      "desc": "Retrieves a paginated list of users (excluding guests) from the notion workspace; the number of user..."
    },
    {
      "name": "NOTION_QUERY_DATABASE",
      "display": "Query database",
      "desc": "Queries a notion database for pages (rows), where rows are pages and columns are properties; ensure ..."
    },
    {
      "name": "NOTION_RETRIEVE_COMMENT",
      "display": "Retrieve Comment",
      "desc": "Tool to retrieve a specific comment by its id. use when you have a comment id and need to fetch its ..."
    },
    {
      "name": "NOTION_RETRIEVE_DATABASE_PROPERTY",
      "display": "Retrieve Database Property",
      "desc": "Tool to retrieve a specific property object of a notion database. use when you need to get details a..."
    },
    {
      "name": "NOTION_SEARCH_NOTION_PAGE",
      "display": "Search Notion page",
      "desc": "Searches notion pages and databases by title; an empty query lists all accessible items, useful for ..."
    },
    {
      "name": "NOTION_UPDATE_BLOCK",
      "display": "Update block",
      "desc": "Updates an existing notion block's textual content or type-specific properties (e.g., 'checked' stat..."
    },
    {
      "name": "NOTION_UPDATE_PAGE",
      "display": "Update Page",
      "desc": "Tool to update the properties, icon, cover, or archive status of a page. use when you need to modify..."
    },
    {
      "name": "NOTION_UPDATE_ROW_DATABASE",
      "display": "Update row database",
      "desc": "Updates or archives an existing notion database row (page) using its `row id`, allowing modification..."
    },
    {
      "name": "NOTION_UPDATE_SCHEMA_DATABASE",
      "display": "Update database schema",
      "desc": "Updates an existing notion database's title, description, and/or properties; at least one of these a..."
    }
  ],
  "OPENAI": [
    {
      "name": "OPENAI_CREATE_ASSISTANT",
      "display": "Create Assistant",
      "desc": "Tool to create a new assistant with specified parameters. use after finalizing model, tools, and ins..."
    },
    {
      "name": "OPENAI_CREATE_MESSAGE",
      "display": "Create Message",
      "desc": "Tool to create a new message in a specific thread. use when adding messages to an existing conversat..."
    },
    {
      "name": "OPENAI_CREATE_THREAD",
      "display": "Create Thread",
      "desc": "Tool to create a new thread. use when initializing a conversation with optional starter messages."
    },
    {
      "name": "OPENAI_DELETE_ASSISTANT",
      "display": "Delete assistant",
      "desc": "Tool to delete a specific assistant by its id. use when you need to remove an assistant after confir..."
    },
    {
      "name": "OPENAI_DELETE_FILE",
      "display": "Delete file",
      "desc": "Tool to delete a file. use when you need to remove an uploaded file by its id after confirming the t..."
    },
    {
      "name": "OPENAI_LIST_FILES",
      "display": "List files",
      "desc": "Tool to retrieve a list of files. use when you need to view all files uploaded to your organization."
    },
    {
      "name": "OPENAI_LIST_FINE_TUNES",
      "display": "List fine-tunes",
      "desc": "Tool to list your organization's fine-tuning jobs. use when you need to review all fine-tune runs."
    },
    {
      "name": "OPENAI_LIST_MODELS",
      "display": "List models",
      "desc": "Tool to list available models. use when you need to discover which models you can call. use after co..."
    },
    {
      "name": "OPENAI_LIST_RUN_STEPS",
      "display": "List run steps",
      "desc": "Tool to retrieve all steps of a specific run. use when you need to inspect each step's details after..."
    },
    {
      "name": "OPENAI_MODIFY_THREAD",
      "display": "Modify thread",
      "desc": "Tool to modify an existing thread's metadata. use after obtaining the thread id when you need to upd..."
    },
    {
      "name": "OPENAI_RETRIEVE_ASSISTANT",
      "display": "Retrieve assistant",
      "desc": "Tool to retrieve details of a specific assistant. use when you need to confirm assistant metadata be..."
    },
    {
      "name": "OPENAI_RETRIEVE_MODEL",
      "display": "Retrieve model",
      "desc": "Tool to retrieve details of a specific model. use when you have a model id and need to confirm its m..."
    },
    {
      "name": "OPENAI_RETRIEVE_THREAD",
      "display": "Retrieve thread",
      "desc": "Tool to retrieve details of a specific thread by its id. use when you need to fetch thread metadata ..."
    },
    {
      "name": "OPENAI_UPLOAD_FILE",
      "display": "Upload file",
      "desc": "Tool to upload a file for use across openai endpoints. use before referencing the file in tasks like..."
    }
  ],
  "VERCEL": [
    {
      "name": "VERCEL_ADD_ENVIRONMENT_VARIABLE",
      "display": "Add Environment Variable",
      "desc": "Tool to add an environment variable to a vercel project. use after confirming the project exists and..."
    },
    {
      "name": "VERCEL_CHECK_CACHE_ARTIFACT_EXISTS",
      "display": "Check Cache Artifact Exists",
      "desc": "Tool to check if a cache artifact exists by its hash. use when verifying whether a cache artifact is..."
    },
    {
      "name": "VERCEL_CHECK_DOMAIN_AVAILABILITY",
      "display": "Check Domain Availability",
      "desc": "Tool to check if a domain is available for registration. use when you need to verify domain availabi..."
    },
    {
      "name": "VERCEL_CHECK_DOMAIN_PRICE",
      "display": "Check Domain Price",
      "desc": "Tool to check the price for a domain before purchase. use when evaluating cost and availability prio..."
    },
    {
      "name": "VERCEL_CREATE_AUTH_TOKEN",
      "display": "Create Auth Token",
      "desc": "Tool to create a new authentication token. use when you need to programmatically generate a new toke..."
    },
    {
      "name": "VERCEL_CREATE_EDGE_CONFIG",
      "display": "Create Edge Config",
      "desc": "Tool to create a new edge config for a vercel project. use when you need to define edge caching sett..."
    },
    {
      "name": "VERCEL_CREATE_EDGE_CONFIG_TOKEN",
      "display": "Create Edge Config Token",
      "desc": "Tool to create a new token for a specific edge config. use when you need a read-only access token af..."
    },
    {
      "name": "VERCEL_CREATE_NEW_DEPLOYMENT",
      "display": "Create new deployment",
      "desc": "Tool to create a new deployment. use when you need to deploy files or a git commit to a vercel proje..."
    },
    {
      "name": "VERCEL_DELETE_AUTH_TOKEN",
      "display": "Delete Auth Token",
      "desc": "Tool to delete an authentication token. use when you need to revoke a token programmatically after c..."
    },
    {
      "name": "VERCEL_DELETE_DEPLOYMENT",
      "display": "Delete Deployment",
      "desc": "Tool to delete a specific deployment by its unique id. use after confirming the deployment identifie..."
    },
    {
      "name": "VERCEL_DELETE_EDGE_CONFIG_TOKENS",
      "display": "Delete Edge Config Tokens",
      "desc": "Tool to delete tokens associated with a specific edge config. use when you need to revoke one or mor..."
    },
    {
      "name": "VERCEL_DELETE_ENVIRONMENT_VARIABLE",
      "display": "Delete Environment Variable",
      "desc": "Tool to delete a specific environment variable from a project. use after verifying the correct varia..."
    },
    {
      "name": "VERCEL_DELETE_PROJECT",
      "display": "Delete Vercel Project",
      "desc": "Tool to delete a specific project by its id or name. use after confirming the correct project id or ..."
    },
    {
      "name": "VERCEL_DEPLOY_EDGE_FUNCTION",
      "display": "Deploy Edge Function",
      "desc": "Deploy edge functions to vercel. use when you need to deploy serverless functions that run on the ed..."
    },
    {
      "name": "VERCEL_GET_AUTH_TOKEN_METADATA",
      "display": "Get Auth Token Metadata",
      "desc": "Tool to retrieve metadata for an authentication token. use when you need to inspect details of a spe..."
    },
    {
      "name": "VERCEL_GET_DEPLOYMENT_DETAILS",
      "display": "Get deployment details",
      "desc": "Tool to retrieve detailed information about a specific deployment. use after triggering a deployment..."
    },
    {
      "name": "VERCEL_GET_DEPLOYMENT_EVENTS",
      "display": "Get Deployment Events",
      "desc": "Tool to retrieve events related to a specific deployment. use when monitoring or debugging deploymen..."
    },
    {
      "name": "VERCEL_GET_DEPLOYMENT_LOGS",
      "display": "Get Deployment Logs",
      "desc": "Tool to retrieve logs for a specific vercel deployment. use when monitoring deployment execution, de..."
    },
    {
      "name": "VERCEL_GET_DOMAIN_TRANSFER_INFO",
      "display": "Get Domain Transfer Info",
      "desc": "Tool to get information required to transfer a domain to vercel. use when you need to check transfer..."
    },
    {
      "name": "VERCEL_GET_EDGE_CONFIG",
      "display": "Get Edge Config",
      "desc": "Tool to retrieve details of a specific edge config. use when you need to inspect edge config metadat..."
    },
    {
      "name": "VERCEL_GET_EDGE_CONFIG_ITEM",
      "display": "Get Edge Config Item",
      "desc": "Tool to retrieve a specific item within an edge config. use after obtaining the edge config id and w..."
    },
    {
      "name": "VERCEL_GET_EDGE_CONFIG_TOKEN",
      "display": "Get Edge Config Token",
      "desc": "Tool to retrieve details of a specific token associated with an edge config. use when you need metad..."
    },
    {
      "name": "VERCEL_GET_PROJECT",
      "display": "Get Vercel Project",
      "desc": "Tool to retrieve information about a vercel project by id or name. use when you need project metadat..."
    },
    {
      "name": "VERCEL_LIST_ALIASES",
      "display": "List Vercel Aliases",
      "desc": "Tool to list all aliases for the authenticated user or team. use when you need to retrieve aliases f..."
    },
    {
      "name": "VERCEL_LIST_ALL_DEPLOYMENTS",
      "display": "List All Deployments",
      "desc": "Tool to list all deployments. use after authenticating to retrieve deployments under your user or te..."
    },
    {
      "name": "VERCEL_LIST_AUTH_TOKENS",
      "display": "List Auth Tokens",
      "desc": "Tool to list authentication tokens. use when you need to retrieve all tokens for the current user or..."
    },
    {
      "name": "VERCEL_LIST_DEPLOYMENT_CHECKS",
      "display": "List Deployment Checks",
      "desc": "Tool to retrieve a list of checks for a specific deployment. use after a deployment to inspect check..."
    },
    {
      "name": "VERCEL_LIST_EDGE_CONFIG_ITEMS",
      "display": "List Edge Config Items",
      "desc": "Tool to retrieve a list of items within a specific edge config. use when you need to inspect or mana..."
    },
    {
      "name": "VERCEL_LIST_EDGE_CONFIGS",
      "display": "List Edge Configs",
      "desc": "Tool to list all edge configs. use when you need to enumerate all edge config definitions for your a..."
    },
    {
      "name": "VERCEL_LIST_EDGE_CONFIG_TOKENS",
      "display": "List Edge Config Tokens",
      "desc": "Tool to retrieve a list of tokens for a specific edge config. use after obtaining an edge config's i..."
    },
    {
      "name": "VERCEL_LIST_ENV_VARIABLES",
      "display": "List Environment Variables",
      "desc": "Tool to list environment variables for a specific project. use when you need to inspect or page thro..."
    },
    {
      "name": "VERCEL_LIST_TEAMS",
      "display": "List All Teams",
      "desc": "Tool to list all teams accessible to the authenticated user. use after authentication to retrieve th..."
    },
    {
      "name": "VERCEL_UPDATE_EDGE_CONFIG",
      "display": "Update Edge Config",
      "desc": "Tool to update an existing edge config. use when you need to rename the slug of an edge config for r..."
    },
    {
      "name": "VERCEL_UPDATE_EDGE_CONFIG_ITEMS",
      "display": "Update Edge Config Items",
      "desc": "Tool to update items within a specific edge config. use when you need to batch modify, add, or remov..."
    },
    {
      "name": "VERCEL_UPDATE_PROJECT",
      "display": "Update Vercel Project",
      "desc": "Tool to update an existing project. use when you need to modify a vercel project\u2019s configuration bef..."
    }
  ]
}