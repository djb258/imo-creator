{
  "tool_name": "composio-mcp",
  "version": "1.0.0",
  "description": "Universal AI agent integration platform with 100+ services via Composio SDK",
  "tools": [
    {
      "name": "execute_composio_tool",
      "description": "Execute any Composio tool with HEIR/ORBT compliance",
      "input_schema": {
        "type": "object",
        "properties": {
          "toolkit": {
            "type": "string",
            "description": "Composio toolkit (github, gmail, slack, twilio, etc.)"
          },
          "tool": {
            "type": "string", 
            "description": "Specific tool within toolkit"
          },
          "arguments": {
            "type": "object",
            "description": "Tool-specific arguments"
          },
          "user_id": {
            "type": "string",
            "description": "User ID for connected account"
          }
        },
        "required": ["toolkit", "tool", "arguments"]
      },
      "output_schema": {
        "type": "object",
        "properties": {
          "result": {
            "type": "object",
            "description": "Tool execution result"
          },
          "composio_metadata": {
            "type": "object",
            "description": "Composio execution metadata"
          }
        }
      }
    },
    {
      "name": "get_available_tools",
      "description": "Get available tools for specified toolkits",
      "input_schema": {
        "type": "object",
        "properties": {
          "toolkits": {
            "type": "array",
            "items": {"type": "string"},
            "description": "List of toolkits to get tools for"
          },
          "user_id": {
            "type": "string",
            "description": "User ID for authentication context"
          }
        },
        "required": ["toolkits"]
      }
    },
    {
      "name": "manage_connected_account",
      "description": "Create or manage connected accounts for external services",
      "input_schema": {
        "type": "object",
        "properties": {
          "action": {
            "type": "string",
            "enum": ["create", "get", "delete", "list"],
            "description": "Action to perform on connected account"
          },
          "app": {
            "type": "string", 
            "description": "App identifier (github, gmail, slack, etc.)"
          },
          "user_id": {
            "type": "string",
            "description": "User ID for account association"
          },
          "account_id": {
            "type": "string",
            "description": "Account ID for get/delete operations"
          },
          "auth_config": {
            "type": "object",
            "description": "Authentication configuration for create"
          }
        },
        "required": ["action", "user_id"]
      }
    },
    {
      "name": "get_composio_stats",
      "description": "Get Composio integration statistics and health",
      "input_schema": {
        "type": "object",
        "properties": {
          "include_usage": {
            "type": "boolean",
            "description": "Include usage statistics"
          }
        }
      }
    },
    {
      "name": "lovable_create_project",
      "description": "Create a new Lovable.dev project via Composio integration",
      "input_schema": {
        "type": "object",
        "properties": {
          "prompt": {
            "type": "string",
            "description": "Natural language description of the UI/app to build"
          },
          "projectType": {
            "type": "string",
            "description": "Project framework type (react, nextjs, vue, etc.)",
            "default": "react"
          },
          "repo": {
            "type": "string",
            "description": "Optional GitHub repository URL to connect"
          },
          "visibility": {
            "type": "string",
            "enum": ["public", "private"],
            "description": "Project visibility setting",
            "default": "private"
          },
          "context": {
            "type": "string",
            "description": "Additional context or requirements for the project"
          }
        },
        "required": ["prompt"]
      },
      "output_schema": {
        "type": "object",
        "properties": {
          "project_id": {
            "type": "string",
            "description": "Lovable.dev project identifier"
          },
          "project_url": {
            "type": "string",
            "description": "URL to access the created project"
          },
          "status": {
            "type": "string",
            "description": "Project creation status"
          },
          "lovable_metadata": {
            "type": "object",
            "description": "Lovable-specific metadata and settings"
          }
        }
      }
    },
    {
      "name": "lovable_get_project_status",
      "description": "Check the build/deployment status of a Lovable.dev project",
      "input_schema": {
        "type": "object",
        "properties": {
          "projectId": {
            "type": "string",
            "description": "Lovable.dev project ID to check"
          }
        },
        "required": ["projectId"]
      },
      "output_schema": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Current project status (building, ready, error, etc.)"
          },
          "build_progress": {
            "type": "number",
            "description": "Build completion percentage"
          },
          "deployment_url": {
            "type": "string",
            "description": "Live deployment URL if available"
          }
        }
      }
    },
    {
      "name": "lovable_get_project_details",
      "description": "Get comprehensive details about a Lovable.dev project",
      "input_schema": {
        "type": "object",
        "properties": {
          "projectId": {
            "type": "string",
            "description": "Lovable.dev project ID to get details for"
          }
        },
        "required": ["projectId"]
      },
      "output_schema": {
        "type": "object",
        "properties": {
          "project_info": {
            "type": "object",
            "description": "Complete project information and metadata"
          },
          "repository": {
            "type": "object",
            "description": "Connected repository information"
          },
          "deployment": {
            "type": "object",
            "description": "Deployment configuration and URLs"
          }
        }
      }
    },
    {
      "name": "lovable_scaffold_altitude_ui",
      "description": "Create Lovable.dev UI scaffolding based on CTB/Altitude specifications from this repository",
      "input_schema": {
        "type": "object",
        "properties": {
          "framework": {
            "type": "string",
            "description": "Target framework for the UI (nextjs, react, vue)",
            "default": "nextjs"
          }
        }
      },
      "output_schema": {
        "type": "object",
        "properties": {
          "project_id": {
            "type": "string",
            "description": "Created Lovable.dev project ID"
          },
          "scaffold_info": {
            "type": "object",
            "description": "Information about the generated UI structure"
          },
          "ctb_integration": {
            "type": "object",
            "description": "Details about CTB/Altitude specifications used"
          }
        }
      }
    }
  ],
  "manifest": {
    "required_fields": [
      "unique_id",
      "process_id",
      "orbt_layer",
      "blueprint_version"
    ]
  },
  "compliance_checklist": {
    "heir_compliance": true,
    "orbt_layer_5": true,
    "mantis_logging": true,
    "kill_switch": true,
    "payload_validation": true,
    "composio_integration": true
  },
  "orbt_escalation_matrix": {
    "layer_1": "Read operations only",
    "layer_2": "Basic CRUD operations",
    "layer_3": "Business logic execution",
    "layer_4": "Cross-system integration",
    "layer_5": "Full operational access",
    "layer_6": "Administrative functions", 
    "layer_7": "System-level operations"
  },
  "heir_compliance": {
    "unique_id": "HEIR-2024-12-COMPOSIO-TOOLS-01",
    "layer": 5,
    "process_tracking": true,
    "audit_trail": true,
    "external_service_integration": true
  },
  "composio_integration": {
    "supported_toolkits": [
      "github", "gmail", "slack", "twilio", "stripe", "notion", 
      "hubspot", "salesforce", "discord", "linear", "jira",
      "google_calendar", "google_drive", "dropbox", "asana",
      "trello", "monday", "clickup", "zendesk", "intercom",
      "lovable"
    ],
    "authentication_methods": [
      "oauth2", "api_key", "bearer_token", "basic_auth"
    ],
    "compliance_features": {
      "automatic_retry": true,
      "rate_limiting": true,
      "error_handling": true,
      "telemetry": true
    }
  }
}