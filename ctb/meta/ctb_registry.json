{
  "version": "1.0.0",
  "created_at": "2025-10-23T00:00:00Z",
  "repository": "imo-creator",
  "description": "AI-powered IMO (Indexed Marketing Operation) creation and management system",
  "ctb_structure": {
    "sys": "System integrations and infrastructure",
    "ai": "AI models, prompts, and training",
    "data": "Database schemas and migrations",
    "docs": "Documentation and guides",
    "ui": "UI components and templates",
    "meta": "CTB metadata and registry"
  },
  "enforcement": {
    "enabled": true,
    "min_score": 90,
    "auto_remediate": true,
    "audit_frequency": "monthly"
  },
  "branches": {
    "sys": {
      "description": "System integrations and infrastructure",
      "purpose": "External services, MCP servers, database clients, authentication",
      "subdirs": [
        "composio-mcp",
        "firebase",
        "neon",
        "github-factory",
        "gatekeeper",
        "validator",
        "global-factory"
      ],
      "file_types": [
        ".js",
        ".ts",
        ".py",
        ".sh",
        ".yml",
        ".yaml"
      ],
      "examples": [
        "MCP server implementations",
        "Database connection clients",
        "API integration modules",
        "Authentication services"
      ]
    },
    "ai": {
      "description": "AI models, prompts, and training",
      "purpose": "AI/ML systems, prompt engineering, agent configurations",
      "subdirs": [
        "models",
        "prompts",
        "blueprints",
        "training",
        "agents"
      ],
      "file_types": [
        ".py",
        ".ipynb",
        ".md",
        ".json",
        ".yaml"
      ],
      "examples": [
        "Gemini/OpenAI model configs",
        "Prompt templates",
        "AI agent blueprints",
        "Training datasets"
      ]
    },
    "data": {
      "description": "Database schemas, migrations, and data models",
      "purpose": "Data layer definitions, migrations, validation schemas",
      "subdirs": [
        "firebase",
        "neon",
        "bigquery",
        "zod",
        "migrations"
      ],
      "file_types": [
        ".sql",
        ".prisma",
        ".json",
        ".ts",
        ".py"
      ],
      "examples": [
        "SQL schema definitions",
        "Prisma models",
        "Firestore schemas",
        "Zod validators",
        "Migration scripts"
      ]
    },
    "docs": {
      "description": "Documentation and guides",
      "purpose": "Technical documentation, guides, API references",
      "subdirs": [
        "ctb",
        "doctrine",
        "ort",
        "sops",
        "api",
        "guides"
      ],
      "file_types": [
        ".md",
        ".txt",
        ".pdf"
      ],
      "examples": [
        "README files",
        "API documentation",
        "User guides",
        "Architecture docs",
        "Doctrine documents"
      ]
    },
    "ui": {
      "description": "User interface components and templates",
      "purpose": "Frontend components, pages, styling, templates",
      "subdirs": [
        "components",
        "pages",
        "templates",
        "layouts",
        "styles"
      ],
      "file_types": [
        ".tsx",
        ".jsx",
        ".css",
        ".scss",
        ".html"
      ],
      "examples": [
        "React components",
        "Page layouts",
        "CSS modules",
        "HTML templates"
      ]
    },
    "meta": {
      "description": "CTB metadata and registry",
      "purpose": "CTB configuration, tags, registry, compliance tracking",
      "subdirs": [],
      "file_types": [
        ".json",
        ".yaml"
      ],
      "examples": [
        "ctb_registry.json",
        "ctb_tags.json",
        "compliance_reports.json"
      ]
    }
  },
  "integrations": {
    "composio": {
      "enabled": true,
      "location": "ctb/sys/composio-mcp",
      "description": "Composio MCP server for 100+ service integrations"
    },
    "firebase": {
      "enabled": true,
      "location": "ctb/sys/firebase",
      "description": "Firebase integration and Firestore client"
    },
    "neon": {
      "enabled": true,
      "location": "ctb/sys/neon",
      "description": "Neon PostgreSQL database integration"
    }
  },
  "heir_orbt": {
    "enabled": true,
    "heir_format": "HEIR-YYYY-MM-SYSTEM-MODE-VN",
    "process_id_format": "PRC-SYSTEM-EPOCHTIMESTAMP",
    "orbt_layers": [1, 2, 3, 4],
    "blueprint_version": "1.0"
  },
  "last_audit": {
    "timestamp": null,
    "score": null,
    "issues_count": null
  },
  "maintenance": {
    "tagger_last_run": null,
    "auditor_last_run": null,
    "remediator_last_run": null
  }
}
