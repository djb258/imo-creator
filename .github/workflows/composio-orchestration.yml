name: Composio Orchestration

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop

# Silence email notifications
notifications:
  email: false

jobs:
  notify-composio:
    name: Notify Composio MCP Server
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Send event to Composio MCP
        id: notify
        run: |
          # Construct the payload
          PAYLOAD=$(cat <<EOF
          {
            "repo": "${{ github.repository }}",
            "ref": "${{ github.ref }}",
            "event": "${{ github.event_name }}",
            "source": "imo-creator",
            "actor": "${{ github.actor }}",
            "sha": "${{ github.sha }}",
            "timestamp": "$(date -u +%Y-%m-%dT%H:%M:%SZ)",
            "workflow": "${{ github.workflow }}",
            "run_id": "${{ github.run_id }}",
            "run_number": "${{ github.run_number }}",
            "custom_message": "${{ inputs.custom_message }}",
            "doctrine": {
              "branch": "${{ github.ref_name }}",
              "is_doctrine": "${{ startsWith(github.ref_name, 'doctrine/') }}",
              "is_main": "${{ github.ref_name == 'main' }}"
            }
          }
          EOF
          )

          echo "Payload to send:"
          echo "$PAYLOAD" | jq '.'

          # Send to Composio MCP endpoint
          RESPONSE=$(curl -X POST \
            http://localhost:3001/tool
            -H "Content-Type: application/json" \
            -H "X-GitHub-Event: ${{ github.event_name }}" \
            -H "X-GitHub-Repository: ${{ github.repository }}" \
            -H "X-GitHub-Delivery: ${{ github.run_id }}-${{ github.run_number }}" \
            -d "$PAYLOAD" \
            -w "\n%{http_code}" \
            -s)

          HTTP_CODE=$(echo "$RESPONSE" | tail -n 1)
          BODY=$(echo "$RESPONSE" | head -n -1)

          echo "Response Code: $HTTP_CODE"
          echo "Response Body: $BODY"

          if [ "$HTTP_CODE" -ge 200 ] && [ "$HTTP_CODE" -lt 300 ]; then
            echo "‚úÖ Successfully notified Composio MCP server"
            echo "composio_response=$BODY" >> $GITHUB_OUTPUT
          else
            echo "‚ùå Failed to notify Composio MCP server"
            echo "Response: $BODY"
            exit 1
          fi

      - name: Log orchestration details
        if: always()
        run: |
          echo "üìä Orchestration Summary"
          echo "========================"
          echo "Repository: ${{ github.repository }}"
          echo "Branch: ${{ github.ref_name }}"
          echo "Event: ${{ github.event_name }}"
          echo "Actor: ${{ github.actor }}"
          echo "SHA: ${{ github.sha }}"
          echo "Workflow Run: ${{ github.run_id }}"

      - name: Check for doctrine validation needed
        if: startsWith(github.ref_name, 'doctrine/')
        run: |
          echo "üîç Doctrine branch detected - validation will be triggered"
          echo "Branch: ${{ github.ref_name }}"

      - name: Update status check
        if: github.event_name == 'pull_request'
        run: |
          echo "üìù Pull request event - status check updated via Composio"