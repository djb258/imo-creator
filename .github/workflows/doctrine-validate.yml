name: Doctrine Blueprint Validation

on:
  push:
    branches:
      - 'doctrine/**'
      - 'doctrine/*'
  workflow_dispatch:
    inputs:
      force_validation:
        description: 'Force validation even if not a doctrine branch'
        required: false
        type: boolean
        default: false

jobs:
  validate-blueprint:
    name: Validate Doctrine Blueprint
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Full history for doctrine analysis

      - name: Extract doctrine metadata
        id: doctrine
        run: |
          # Extract doctrine branch name
          BRANCH_NAME="${{ github.ref_name }}"
          DOCTRINE_NAME="${BRANCH_NAME#doctrine/}"

          echo "branch_name=$BRANCH_NAME" >> $GITHUB_OUTPUT
          echo "doctrine_name=$DOCTRINE_NAME" >> $GITHUB_OUTPUT

          # Check for doctrine configuration files
          if [ -f "imo.config.json" ]; then
            echo "has_config=true" >> $GITHUB_OUTPUT
            CONFIG_CONTENT=$(cat imo.config.json)
          else
            echo "has_config=false" >> $GITHUB_OUTPUT
            CONFIG_CONTENT="{}"
          fi

          # Check for doctrine-specific files
          if [ -f "heir.doctrine.yaml" ]; then
            echo "has_heir=true" >> $GITHUB_OUTPUT
            HEIR_CONTENT=$(cat heir.doctrine.yaml)
          else
            echo "has_heir=false" >> $GITHUB_OUTPUT
            HEIR_CONTENT=""
          fi

      - name: Validate with Composio MCP
        id: validate
        run: |
          # Construct validation payload
          PAYLOAD=$(cat <<EOF
          {
            "repo": "${{ github.repository }}",
            "ref": "${{ github.ref }}",
            "event": "doctrine_validation",
            "source": "imo-creator",
            "branch": "${{ steps.doctrine.outputs.branch_name }}",
            "doctrine_name": "${{ steps.doctrine.outputs.doctrine_name }}",
            "sha": "${{ github.sha }}",
            "actor": "${{ github.actor }}",
            "timestamp": "$(date -u +%Y-%m-%dT%H:%M:%SZ)",
            "validation": {
              "has_config": ${{ steps.doctrine.outputs.has_config }},
              "has_heir": ${{ steps.doctrine.outputs.has_heir }},
              "files_changed": $(git diff-tree --no-commit-id --name-only -r ${{ github.sha }} | jq -R -s -c 'split("\n")[:-1]'),
              "commit_message": "${{ github.event.head_commit.message }}",
              "commit_author": "${{ github.event.head_commit.author.name }}"
            },
            "metadata": {
              "run_id": "${{ github.run_id }}",
              "run_number": "${{ github.run_number }}",
              "workflow": "${{ github.workflow }}",
              "force_validation": ${{ inputs.force_validation || false }}
            }
          }
          EOF
          )

          echo "📋 Validation Payload:"
          echo "$PAYLOAD" | jq '.'

          # Send validation request to Composio
          RESPONSE=$(curl -X POST \
            http://localhost:3001/tool
            -H "Content-Type: application/json" \
            -H "X-GitHub-Event: doctrine_validation" \
            -H "X-GitHub-Repository: ${{ github.repository }}" \
            -H "X-Doctrine-Branch: ${{ steps.doctrine.outputs.branch_name }}" \
            -H "X-GitHub-SHA: ${{ github.sha }}" \
            -d "$PAYLOAD" \
            -w "\n%{http_code}" \
            -s --max-time 30)

          HTTP_CODE=$(echo "$RESPONSE" | tail -n 1)
          BODY=$(echo "$RESPONSE" | head -n -1)

          echo "Response Code: $HTTP_CODE"
          echo "Response Body:"
          echo "$BODY" | jq '.' 2>/dev/null || echo "$BODY"

          # Parse validation result
          if [ "$HTTP_CODE" -eq 200 ]; then
            echo "✅ Doctrine validation passed"
            echo "validation_passed=true" >> $GITHUB_OUTPUT

            # Extract validation details if available
            if echo "$BODY" | jq -e '.validation_id' >/dev/null 2>&1; then
              VALIDATION_ID=$(echo "$BODY" | jq -r '.validation_id')
              echo "validation_id=$VALIDATION_ID" >> $GITHUB_OUTPUT
            fi
          else
            echo "❌ Doctrine validation failed"
            echo "validation_passed=false" >> $GITHUB_OUTPUT

            # Extract error details if available
            if echo "$BODY" | jq -e '.errors' >/dev/null 2>&1; then
              echo "Validation Errors:"
              echo "$BODY" | jq '.errors'
            fi

            exit 1
          fi

      - name: Create validation report
        if: always()
        run: |
          cat > validation-report.md <<EOF
          # Doctrine Validation Report

          ## Summary
          - **Repository**: ${{ github.repository }}
          - **Branch**: ${{ steps.doctrine.outputs.branch_name }}
          - **Doctrine**: ${{ steps.doctrine.outputs.doctrine_name }}
          - **Commit**: ${{ github.sha }}
          - **Author**: ${{ github.actor }}
          - **Validation**: ${{ steps.validate.outputs.validation_passed == 'true' && '✅ Passed' || '❌ Failed' }}

          ## Configuration Status
          - **imo.config.json**: ${{ steps.doctrine.outputs.has_config == 'true' && '✅ Present' || '❌ Missing' }}
          - **heir.doctrine.yaml**: ${{ steps.doctrine.outputs.has_heir == 'true' && '✅ Present' || '❌ Missing' }}

          ## Validation Details
          - **Validation ID**: ${{ steps.validate.outputs.validation_id || 'N/A' }}
          - **Timestamp**: $(date -u +%Y-%m-%dT%H:%M:%SZ)
          - **Workflow Run**: ${{ github.run_id }}

          ---
          *Validated by Composio MCP Orchestration System*
          EOF

          echo "📊 Validation Report Generated:"
          cat validation-report.md

      - name: Upload validation artifacts
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: doctrine-validation-${{ github.sha }}
          path: |
            validation-report.md
            imo.config.json
            heir.doctrine.yaml
          retention-days: 30

      - name: Comment on associated PRs
        if: github.event_name == 'push'
        run: |
          # Find PRs associated with this doctrine branch
          echo "🔍 Checking for associated pull requests..."

          # This will be handled by Composio MCP which has access to GitHub API