services:
  # Main IMO-Creator Backend Service
  - type: web
    name: imo-creator-backend
    runtime: python
    plan: free
    branch: main
    region: oregon
    buildCommand: |
      pip install -r requirements.txt
      pip install composio-sdk
    startCommand: uvicorn src.server.main:app --host 0.0.0.0 --port $PORT
    healthCheckPath: /health
    envVars:
      - key: COMPOSIO_API_KEY
        value: ak_t-F0AbvfZHUZSUrqAGNn
      - key: MCP_API_URL
        value: https://backend.composio.dev
      - key: PORT
        generateValue: true
      - key: PYTHONUNBUFFERED
        value: 1
      - key: DOCTRINE_DB
        value: shq
      - key: DOCTRINE_SUBHIVE
        value: "03"
      - key: DOCTRINE_APP
        value: imo
      - key: DOCTRINE_VER
        value: "1"
      - key: GARAGE_MCP_URL
        value: http://localhost:7001
      - key: GARAGE_MCP_TOKEN
        value: dev-local
      - key: SUBAGENT_REGISTRY_PATH
        value: /registry/subagents
      - key: ANTHROPIC_API_KEY
        sync: false
      - key: OPENAI_API_KEY
        sync: false
      - key: LLM_DEFAULT_PROVIDER
        value: openai
      - key: ALLOW_ORIGIN
        value: "*"

  # MCP Server Service
  - type: web
    name: imo-creator-mcp
    runtime: python
    plan: free
    branch: main
    region: oregon
    buildCommand: |
      pip install -r requirements.txt
      pip install mcp pydantic httpx
    startCommand: python -m packages.mcp.server --port $PORT
    healthCheckPath: /heir/check
    envVars:
      - key: PORT
        generateValue: true
      - key: PYTHONUNBUFFERED
        value: 1
      - key: MCP_MODE
        value: production
      - key: COMPOSIO_API_KEY
        sync: false
      - key: MCP_API_URL
        value: https://backend.composio.dev

  # Sidecar Event Logger Service
  - type: web
    name: imo-creator-sidecar
    runtime: python
    plan: free
    branch: main
    region: oregon
    buildCommand: |
      pip install -r requirements.txt
      pip install fastapi uvicorn
    startCommand: python -m packages.sidecar.server --port $PORT
    healthCheckPath: /events/health
    envVars:
      - key: PORT
        generateValue: true
      - key: PYTHONUNBUFFERED
        value: 1
      - key: LOG_DIR
        value: /tmp/logs
      - key: LOG_FILE
        value: sidecar.ndjson

  # Alternative Node.js Backend (if preferred over Python)
  - type: web
    name: imo-creator-node-backend
    runtime: node
    plan: free
    branch: main
    region: oregon
    buildCommand: |
      npm install
      npm install composio-sdk express cors dotenv
    startCommand: node api/server.js
    healthCheckPath: /api/health
    envVars:
      - key: COMPOSIO_API_KEY
        sync: false
      - key: VERCEL_TOKEN
        sync: false
      - key: RENDER_TOKEN
        sync: false
      - key: MCP_API_URL
        value: https://backend.composio.dev
      - key: NODE_ENV
        value: production
      - key: PORT
        generateValue: true
      - key: VERCEL_CONNECTED_ACCOUNT_ID
        sync: false
      - key: ANTHROPIC_API_KEY
        sync: false
      - key: OPENAI_API_KEY
        sync: false
      - key: LLM_DEFAULT_PROVIDER
        value: openai

# Database (if needed)
databases:
  - name: imo-creator-db
    plan: free
    region: oregon
    databaseName: imo_creator
    user: imo_admin

# Background Jobs (if needed)
jobs:
  - type: cron
    name: registry-refresh
    runtime: python
    schedule: "0 * * * *"  # Every hour
    command: python tools/refresh_registry.py
    envVars:
      - key: COMPOSIO_API_KEY
        sync: false
      - key: MCP_API_URL
        value: https://backend.composio.dev