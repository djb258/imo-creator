{
  "tool_name": "neon-db-manager",
  "version": "1.0.0",
  "classification": "mcp_server_operation",
  "heir_compliance": "v2.1",
  "orbt_policy": "layer_2_operations",
  "manifest": {
    "required_fields": {
      "unique_id": {
        "type": "string",
        "pattern": "^HEIR-[0-9]{4}-[0-9]{2}-[A-Z]{3,8}-[A-Z]{2,6}-[0-9]{2}$",
        "description": "HEIR-compliant unique identifier"
      },
      "process_id": {
        "type": "string",
        "pattern": "^PRC-[A-Z0-9]{8}-[0-9]{13}$",
        "description": "ORBT process tracking identifier"
      },
      "orbt_layer": {
        "type": "integer",
        "minimum": 1,
        "maximum": 7,
        "default": 2,
        "description": "ORBT policy layer 2 operations"
      },
      "blueprint_version": {
        "type": "string",
        "pattern": "^v[0-9]+\\.[0-9]+\\.[0-9]+-[a-f0-9]{8}$",
        "description": "Versioned blueprint hash"
      }
    },
    "tool_specific_fields": {
      "operation": {
        "type": "string",
        "enum": [
          "execute_query",
          "create_table",
          "insert_data",
          "get_schema",
          "backup_data"
        ],
        "description": "Specific operation to execute",
        "required": true
      }
    },
    "security_constraints": {
      "rate_limit": "10_per_minute",
      "concurrent_limit": 3,
      "data_retention": "7_days",
      "pii_scrubbing": "optional",
      "domain_allowlist": "optional"
    },
    "fallback_behavior": {
      "on_rate_limit": "queue_with_exponential_backoff",
      "on_timeout": "log_and_retry_once",
      "on_failure": "log_and_abort",
      "on_compliance_violation": "immediate_abort"
    },
    "logging_schema": {
      "pre_execution": [
        "unique_id",
        "process_id",
        "operation",
        "timestamp",
        "orbt_layer",
        "rate_limit_status"
      ],
      "during_execution": [
        "status",
        "progress_percent",
        "memory_usage"
      ],
      "post_execution": [
        "result_status",
        "execution_time",
        "compliance_status"
      ],
      "error_conditions": [
        "error_type",
        "error_code",
        "retry_count",
        "fallback_triggered",
        "mitigation_action"
      ]
    }
  },
  "compliance_checklist": {
    "heir_unique_id_format": "validated",
    "orbt_process_lineage": "tracked",
    "blueprint_version_consistency": "enforced",
    "rate_limits": "respected",
    "pii_scrubbing": "optional",
    "data_retention_policy": "enforced",
    "mantis_logging_integration": "enabled",
    "kill_switch_registration": "armed"
  },
  "orbt_escalation_matrix": {
    "layer_2": "Neon PostgreSQL database operations"
  },
  "tools": [
    {
      "name": "execute_query",
      "description": "Executes a PostgreSQL query on Neon",
      "input_schema": {
        "type": "object",
        "properties": {
          "query": {
            "type": "string",
            "description": "SQL query"
          },
          "params": {
            "type": "array",
            "description": "Query parameters"
          },
          "database": {
            "type": "string",
            "description": "Database name"
          }
        },
        "required": [
          "query"
        ]
      }
    },
    {
      "name": "insert_record",
      "description": "Inserts a record into a table",
      "input_schema": {
        "type": "object",
        "properties": {
          "table": {
            "type": "string",
            "description": "Table name"
          },
          "data": {
            "type": "object",
            "description": "Record data"
          },
          "database": {
            "type": "string",
            "description": "Database name"
          }
        },
        "required": [
          "table",
          "data"
        ]
      }
    },
    {
      "name": "get_schema",
      "description": "Gets database schema information",
      "input_schema": {
        "type": "object",
        "properties": {
          "database": {
            "type": "string",
            "description": "Database name"
          }
        },
        "required": [
          "database"
        ]
      }
    }
  ]
}