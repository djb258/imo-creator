# # CTB Metadata
# # Generated: 2025-10-23T14:32:40.156021
# # CTB Version: 1.3.3
# # Division: Documentation
# # Category: guides
# # Compliance: 90%
# # HEIR ID: HEIR-2025-10-DOC-GUIDES-01

{
  "name": "imo/input",
  "generated_at": "2025-10-22T07:56:56.116716",
  "files": {
    "total_count": 16854,
    "by_extension": {
      ".ts": 4881,
      ".js": 4798,
      ".map": 3196,
      ".cjs": 866,
      ".md": 549,
      ".mjs": 485,
      ".json": 474,
      ".mts": 459,
      "no_extension": 328,
      ".cts": 277,
      ".proto": 220,
      ".py": 125,
      ".yml": 49,
      ".txt": 20,
      ".ps1": 20,
      ".sh": 19,
      ".cmd": 19,
      ".yaml": 9,
      ".mmd": 8,
      ".html": 8
    },
    "directory_count": 1724
  },
  "commits": {
    "recent": [
      {
        "hash": "6ea23600",
        "author": "Dave Barton",
        "email": "dbarton@svg.agency",
        "date": "2025-10-22",
        "message": "\u00f0\u0178\u201d\u201e CTB Doctrine v1.3.3: Add DeepWiki-Open (doctrine_id 04.04.11)"
      },
      {
        "hash": "4aaaf569",
        "author": "Customer",
        "email": "dbarton@svg.agency",
        "date": "2025-10-21",
        "message": "\u00f0\u0178\u201c\u00a6 Add comprehensive dependencies & validation for imo_tools"
      },
      {
        "hash": "1f52c1d3",
        "author": "Customer",
        "email": "dbarton@svg.agency",
        "date": "2025-10-21",
        "message": "\u00f0\u0178\u201d\u00a7 Integrate pdfplumber for real PDF extraction in PDFMapperTool"
      },
      {
        "hash": "2ce9ef88",
        "author": "Customer",
        "email": "dbarton@svg.agency",
        "date": "2025-10-21",
        "message": "\u00f0\u0178\u00a7\u00b0 Add PDFMapperTool for bidirectional PDF operations"
      },
      {
        "hash": "5cc6f7fc",
        "author": "Customer",
        "email": "dbarton@svg.agency",
        "date": "2025-10-21",
        "message": "\u00f0\u0178\u00a7\u00b0 Add imo_tools modular library with auto-propagation"
      },
      {
        "hash": "85f30e6f",
        "author": "Dave Barton",
        "email": "dbarton@svg.agency",
        "date": "2025-10-19",
        "message": "Add Composio MCP integration documentation and tools- Add COMPOSIO_INTEGRATION_SUMMARY.md: Complete overview of 24 integrations and 1,059 tools- Add COMPOSIO_QUICK_START.md: Setup guide and usage examples- Add DEEPSEEK_INTEGRATION.md: DeepSeek integration documentation- Add test-composio-tools.py: Test script for Composio API- Add composio-tools-organized.json: Organized tool reference by app- Document Figma, GitHub, Gmail, Google Drive, Sheets, Notion, OpenAI, Vercel, and Render integrations"
      },
      {
        "hash": "1fbdc731",
        "author": "Customer",
        "email": "dbarton@svg.agency",
        "date": "2025-10-19",
        "message": "\u00f0\u0178\u201c\u0161 Add comprehensive LLM onboarding documentation"
      },
      {
        "hash": "f5ec1a1d",
        "author": "Dave Barton",
        "email": "dbarton@svg.agency",
        "date": "2025-10-18",
        "message": "\u00f0\u0178\u201d\u201e Add Auto-Update Version Detection System"
      },
      {
        "hash": "c6361bed",
        "author": "Dave Barton",
        "email": "dbarton@svg.agency",
        "date": "2025-10-18",
        "message": "\u00f0\u0178\u201d\u201e Enhanced CTB Update Script v1.3.2"
      },
      {
        "hash": "a0b2fd3c",
        "author": "Dave Barton",
        "email": "dbarton@svg.agency",
        "date": "2025-10-18",
        "message": "\u00f0\u0178\u0161\u20ac CTB Doctrine v1.3.2: Phase 2 Developer Experience Enhancements"
      }
    ],
    "count": 10
  },
  "structure": {
    "top_level": [
      ".claude",
      ".composio-test-report.json",
      ".devcontainer",
      ".env.example",
      ".github",
      ".gitignore",
      ".gitingestignore",
      ".python-version",
      ".vscode",
      "BUILDER_COMPOSIO_MCP.md",
      "CLAUDE.md",
      "CLAUDE_COMMANDS.md",
      "COMPOSIO_INTEGRATION.md",
      "COMPOSIO_INTEGRATION_SUMMARY.md",
      "COMPOSIO_QUICK_START.md",
      "COMPOSIO_TOOLS_STATUS.json",
      "COMPOSIO_VERIFICATION_REPORT.md",
      "CONTRIBUTING.md",
      "CTB_IMPLEMENTATION_REPORT.md",
      "DEEPSEEK_INTEGRATION.md",
      "DEPLOYMENT_URLS.md",
      "DRAWIO_INTEGRATION.md",
      "LICENSE",
      "LLM_ONBOARDING.md",
      "Makefile",
      "Procfile",
      "QUICKSTART.md",
      "README-DOCTRINE-AUTOMATION.md",
      "README.md",
      "REPO_OVERVIEW.md",
      "SCAFFOLD_INSTRUCTIONS.md",
      "STATUS.md",
      "VERCEL_ENVS.md",
      "VSCODE_BUILDER_INTEGRATION.md",
      "activepieces",
      "add-doctrine-headers.js",
      "analyze_composio_tools.py",
      "api",
      "apps",
      "audit_results",
      "bootstrap-repo.cjs",
      "branches",
      "chartdb",
      "check-claude-composio.cjs",
      "check-composio-apps.cjs",
      "check-instantly-app.cjs",
      "check-relevance-app.cjs",
      "claude-agents-library",
      "composio-mcp-openapi.yaml",
      "composio-tools-analysis.json",
      "composio-tools-full.json",
      "composio-tools-organized.json",
      "composio-tools-summary.json",
      "config",
      "custom-gpt-openapi.yaml",
      "diagrams",
      "docs",
      "doctrine",
      "factory",
      "figma-plugin-urls.txt",
      "firebase_mcp.dockerfile",
      "firebase_mcp.js",
      "firebase_mcp_package.json",
      "firebase_mcp_registry_example.json",
      "firebase_studio_deploy.yml",
      "firebase_workflow_example.md",
      "garage-mcp",
      "garage_bay.py",
      "git-ingest-1758912879.md",
      "global-config",
      "gpt_mcp_manifest.json",
      "heir.doctrine.yaml",
      "imo-creator-ingest.txt",
      "imo-creator.code-workspace",
      "imo-sync.config.json",
      "imo.config.json",
      "index.html",
      "install-figma-plugins.bat",
      "install-figma-plugins.ps1",
      "install-figma-plugins.sh",
      "latest-composio-tools.json",
      "libs",
      "logs",
      "main.py",
      "mcp.config.json",
      "mechanic",
      "node_modules",
      "package-lock.json",
      "package.json",
      "packages",
      "pytest.ini",
      "relevance-ai-mcp.cjs",
      "render.yaml",
      "repo-lens",
      "requirements.txt",
      "runtime.txt",
      "scripts",
      "services",
      "simple_garage_bay.py",
      "src",
      "sys",
      "templates",
      "test-all-composio-tools.cjs",
      "test-composio-tools.py",
      "test_builder_integration.py",
      "test_pdf_mapper.py",
      "test_vscode_mcp_integration.py",
      "tests",
      "tools",
      "utils",
      "vercel.json",
      "verified-figma-plugins-2025.txt",
      "windmill"
    ]
  },
  "readme": {
    "file": "README.md",
    "content": "# Blueprint App Shell\n\nA 4-page planning app with SSOT manifest, flex ladder stages, and visual progress tracking.\n\n## Features\n- **4-Page UI**: Overview with progress visual, Input/Middle/Output pages\n- **SSOT Manifest**: YAML-based configuration with flexible stages per bucket\n- **Scoring**: Automatic progress calculation (done/wip/todo)\n- **Visuals**: Mermaid diagrams for overview and per-bucket ladders\n- **API**: Optional FastAPI for manifest GET/PUT operations\n\n## Quickstart\n\n```bash\n# Setup\npython -m venv .venv && . .venv/bin/activate  # or .venv\\Scripts\\activate on Windows\npip install -r requirements.txt\n\n# Generate progress and visuals\npython tools/blueprint_score.py example\npython tools/blueprint_visual.py example\n\n# Open UI\n# Open docs/blueprints/ui/overview.html in your browser\n\n# (Optional) Run API\nuvicorn src.server.main:app --port 7002 --reload\n```\n\n## LLM Endpoint & Env\n\nThe UI supports LLM-assisted prompt generation with **concurrent Anthropic and OpenAI support**:\n\n**Local Development:**\n```bash\n# Copy environment template\ncp .env.example .env\n\n# (Optional) Add API keys for full functionality:\n# ANTHROPIC_API_KEY=sk-ant-xxx\n# OPENAI_API_KEY=sk-xxx\n# LLM_DEFAULT_PROVIDER=openai\n\n# Run server (works without API keys, shows helpful messages)\nuvicorn src.server.main:app --port 7002 --reload\n\n# Use LLM endpoint\n# Open docs/blueprints/ui/input.html?llm=http://localhost:7002/llm\n```\n\n**Production (Vercel):**\n- **Deploy immediately** - no API keys required, app works with copy-to-clipboard fallback\n- **Add API keys later** in Vercel Dashboard \u2192 Project Settings \u2192 Environment Variables:\n  - `ANTHROPIC_API_KEY` = `sk-ant-your-key` (optional)\n  - `OPENAI_API_KEY` = `sk-your-key` (optional) \n  - `LLM_DEFAULT_PROVIDER` = `openai` or `anthropic` (optional)\n  - `ALLOW_ORIGIN` = `https://your-domain.vercel.app` (optional, for CORS)\n- LLM Settings panel shows real-time key status\n\n**Request Format:**\n```json\n{\n  \"provider\": \"anthropic\" | \"openai\",     // optional: auto-select if omitted\n  \"model\": \"claude-3-5-sonnet-20240620\",  // optional: provider-specific model\n  \"system\": \"You are a helpful assistant\", // optional\n  \"prompt\": \"Generate a JSON schema\",     // required\n  \"json\": true,                          // optional: expect JSON response\n  \"max_tokens\": 1024                     // optional\n}\n```\n\n**Provider Selection Algorithm:**\n1. If `provider` specified \u2192 use it (error if API key missing)\n2. Else if `model` starts with \"claude\" \u2192 anthropic, \"gpt\"/\"o\" \u2192 openai  \n3. Else use `LLM_DEFAULT_PROVIDER` (error if key missing)\n4. Else use whichever single API key is available\n5. Else error: no provider/key available\n\n**Fallback:** If LLM endpoint unavailable, buttons fall back to copy-to-clipboard prompts.\n\n## HEIR/MCP Integration\n\nThis app includes HEIR (Hierarchical Error-handling, ID management, and Reporting) and MCP (Model Context Protocol) integration:\n\n### Quick Start\n```bash\n# Run HEIR validation checks\nmake check\n# or\npython -m packages.heir.checks\n\n# Start MCP server (port 7001)\nmake run-mcp\n\n# Start Sidecar event logger (port 8000)\nmake run-sidecar\n\n# Test endpoints\ncurl http://localhost:7001/heir/check -X POST -H \"Content-Type: application/json\" -d '{\"ssot\": {\"meta\": {\"app_name\": \"test\"}, \"doctrine\": {}}}'\ncurl http://localhost:8000/events -X POST -H \"Content-Type: application/json\" -d '{\"type\": \"test.event\", \"payload\": {\"message\": \"hello\"}, \"tags\": {\"source\": \"curl\"}}'\n```\n\n### Service Architecture\n- **MCP Server** (`:7001`): HEIR validation endpoint `/heir/check`\n- **Sidecar Server** (`:8000`): Event logging to `./logs/sidecar.ndjson`  \n- **Main API** (`:7002`): Blueprint management and LLM endpoints\n\n### API Examples\n```bash\n# Check HEIR compliance\ncurl -X POST http://localhost:7001/heir/check \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\"ssot\": {\"meta\": {\"app_name\": \"imo-creator\"}, \"doctrine\": {\"schema_version\": \"HEIR/1.0\"}}}'\n\n# Log telemetry event  \ncurl -X POST http://localhost:8000/events \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\"type\": \"app.start\", \"payload\": {\"version\": \"1.0.0\"}, \"tags\": {\"env\": \"dev\"}}'\n\n# View recent events\ncurl http://localhost:8000/events/recent?limit=5\n\n# Test SSOT ID generation\ncurl -X POST http://localhost:7002/api/ssot/save \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\"ssot\":{\"meta\":{\"app_name\":\"IMO Creator\",\"stage\":\"overview\"}}}'\n\n# Test subagent registry\ncurl http://localhost:7002/api/subagents\n```\n\n## Smoke Tests (After Vercel Deploy)\n\n### 1. ID Stamping Test\n```bash\n# Test that IDs get stamped automatically\ncurl -s -X POST https://imo-creator.vercel.app/api/ssot/save \\\n  -H 'content-type: application/json' \\\n  -d '{\"ssot\":{\"meta\":{\"app_name\":\"IMO Creator\",\"stage\":\"overview\"}}}' | jq\n\n# Expected: .ssot.doctrine.unique_id, .ssot.doctrine.process_id, .ssot.doctrine.blueprint_version_hash\n```\n\n### 2. Subagent Registry Test  \n```bash\n# Test subagent enumeration (from garage-mcp or fallback)\ncurl -s https://imo-creator.vercel.app/api/subagents | ",
    "length": 6897
  },
  "last_updated": "2025-10-22",
  "configuration_files": {
    "package.json": "{\n  \"name\": \"imo-creator\",\n  \"private\": true,\n  \"version\": \"2.0.0\",\n  \"type\": \"module\",\n  \"description\": \"Unified repository compliance and orchestration system with Factory/Mechanic architecture\",\n  \"main\": \"index.js\",\n  \"config\": {\n    \"production_urls\": {\n      \"composio_mcp\": \"http://localhost:3001\",\n      \"composio_api\": \"https://backend.composio.dev\",\n      \"frontend\": \"https://imo-creator.vercel.app\",\n      \"composio_api_key\": \"ak_t-F0AbvfZHUZSUrqAGNn\"\n    }\n  },\n  \"scripts\": {\n    \"dev\": \"node factory/ui/dev.js\",\n    \"build\": \"node factory/ui/build.js\",\n    \"init\": \"bash factory/ui/init.sh\",\n    \"recall\": \"bash mechanic/recall/recall.sh\",\n    \"env:check\": \"node scripts/env-check.mjs\",\n    \"compliance:check\": \"python tools/repo_compliance_check.py\",\n    \"compliance:fix\": \"python tools/repo_compliance_fixer.py\",\n    \"audit\": \"python simple_garage_bay.py\",\n    \"orchestrate\": \"python tools/repo_mcp_orchestrator.py\",\n    \"vercel:dev\": \"vercel dev\",\n    \"vercel:build\": \"mkdir -p public && cp index.html public/ && cp -r docs public/\",\n    \"test:urls\": \"curl http://localhost:3001/mcp/health && curl https://imo-creator.vercel.app\"\n  },\n  \"dependencies\": {\n    \"@neondatabase/serverless\": \"^0.10.0\",\n    \"composio-core\": \"^0.5.39\",\n    \"firebase-admin\": \"^12.0.0\",\n    \"undici\": \"^6.19.8\"\n  },\n  \"keywords\": [\n    \"compliance\",\n    \"orchestration\",\n    \"garage-mcp\",\n    \"heir\",\n    \"imo-creator\",\n    \"factory\",\n    \"mechanic\"\n  ],\n  \"author\": \"\",\n  \"license\": \"MIT\",\n  \"engines\": {\n    \"node\": \">=18.0.0\"\n  }\n}\n",
    "requirements.txt": "fastapi==0.111.0\nuvicorn==0.30.0\ngunicorn==22.0.0\nPyYAML==6.0.2\npytest==8.3.2\nrequests>=2.32.0\npython-dotenv>=1.0.1\npydantic==2.8.2\nhttpx==0.27.0\ncomposio==0.8.14\npython-multipart==0.0.9\npdfplumber>=0.10.0\npandas>=2.2.0\nopenpyxl>=3.1.2\nPyPDF2>=3.0.0\ntqdm>=4.66.0\nrich>=13.7.0",
    ".env.example": "# =============================================================================\n# PRIMARY REQUIREMENT - Composio Integration (PRODUCTION READY)\n# =============================================================================\nCOMPOSIO_API_KEY=<your-composio-api-key>\nMCP_API_URL=https://composio-imo-creator-url.onrender.com\nBACKEND_URL=https://composio-imo-creator-url.onrender.com\nFRONTEND_URL=https://imo-creator.vercel.app\nAPI_BASE_URL=https://composio-imo-creator-url.onrender.com/api\n\n# =============================================================================\n# OPTIONAL CONFIGURATIONS (App works without these)\n# =============================================================================\n\n# LLM Provider Configuration (Optional - for AI features)\nANTHROPIC_API_KEY=\nOPENAI_API_KEY=\nLLM_DEFAULT_PROVIDER=openai\n\n# HEIR/MCP Integration (Production URLs)\nIMOCREATOR_MCP_URL=https://composio-imo-creator-url.onrender.com\nIMOCREATOR_SIDECAR_URL=https://composio-imo-creator-url.onrender.com\nIMOCREATOR_BEARER_TOKEN=<your-bearer-token>\n\n# Doctrine ID Generation (Production configured)\nDOCTRINE_DB=shq\nDOCTRINE_SUBHIVE=03\nDOCTRINE_APP=imo\nDOCTRINE_VER=1\n\n# Garage-MCP Integration (Production)\nGARAGE_MCP_URL=https://composio-imo-creator-url.onrender.com\nGARAGE_MCP_TOKEN=<your-mcp-token>\nSUBAGENT_REGISTRY_PATH=/api/subagents\n\n# UI Features (Production enabled)\nNEXT_PUBLIC_SHOW_SUBAGENTS=true\n\n# Builder.io Integration\nBUILDER_IO_API_KEY=<your-builder-io-api-key>\nBUILDER_IO_SPACE_ID=\nBUILDER_IO_MODEL_ID=\n\n# CORS Configuration (Production configured)\nALLOW_ORIGIN=https://imo-creator.vercel.app\nPORT=7002"
  }
}